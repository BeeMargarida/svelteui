import{aa as g,ab as x}from"./index.b0fe5a0f.js";function b(t){return t<.5?4*t*t*t:.5*Math.pow(2*t-2,3)+1}function h(t){const o=t-1;return o*o*o+1}function v(t){return t===0?t:Math.pow(2,10*(t-1))}function C(t){return t===1?t:1-Math.pow(2,-10*t)}function F(t){return(t*=2)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2)}function I(t){return-.5*(Math.cos(Math.PI*t)-1)}function M(t,{delay:o=0,duration:c=400,easing:e=b,amount:i=5,opacity:n=0}={}){const s=getComputedStyle(t),a=+s.opacity,l=s.filter==="none"?"":s.filter,r=a*(1-n),[p,f]=g(i);return{delay:o,duration:c,easing:e,css:(d,y)=>`opacity: ${a-r*y}; filter: ${l} blur(${y*p}${f});`}}function S(t,{delay:o=0,duration:c=400,easing:e=x}={}){const i=+getComputedStyle(t).opacity;return{delay:o,duration:c,easing:e,css:n=>`opacity: ${n*i}`}}function O(t,{delay:o=0,duration:c=400,easing:e=h,x:i=0,y:n=0,opacity:s=0}={}){const a=getComputedStyle(t),l=+a.opacity,r=a.transform==="none"?"":a.transform,p=l*(1-s),[f,d]=g(i),[y,_]=g(n);return{delay:o,duration:c,easing:e,css:($,m)=>`
			transform: ${r} translate(${(1-$)*f}${d}, ${(1-$)*y}${_});
			opacity: ${l-p*m}`}}function k(t,{delay:o=0,duration:c=400,easing:e=h,axis:i="y"}={}){const n=getComputedStyle(t),s=+n.opacity,a=i==="y"?"height":"width",l=parseFloat(n[a]),r=i==="y"?["top","bottom"]:["left","right"],p=r.map(u=>`${u[0].toUpperCase()}${u.slice(1)}`),f=parseFloat(n[`padding${p[0]}`]),d=parseFloat(n[`padding${p[1]}`]),y=parseFloat(n[`margin${p[0]}`]),_=parseFloat(n[`margin${p[1]}`]),$=parseFloat(n[`border${p[0]}Width`]),m=parseFloat(n[`border${p[1]}Width`]);return{delay:o,duration:c,easing:e,css:u=>`overflow: hidden;opacity: ${Math.min(u*20,1)*s};${a}: ${u*l}px;padding-${r[0]}: ${u*f}px;padding-${r[1]}: ${u*d}px;margin-${r[0]}: ${u*y}px;margin-${r[1]}: ${u*_}px;border-${r[0]}-width: ${u*$}px;border-${r[1]}-width: ${u*m}px;`}}function U(t,{delay:o=0,duration:c=400,easing:e=h,start:i=0,opacity:n=0}={}){const s=getComputedStyle(t),a=+s.opacity,l=s.transform==="none"?"":s.transform,r=1-i,p=a*(1-n);return{delay:o,duration:c,easing:e,css:(f,d)=>`
			transform: ${l} scale(${1-r*d});
			opacity: ${a-p*d}
		`}}function W(t,{delay:o=0,speed:c,duration:e,easing:i=b}={}){let n=t.getTotalLength();const s=getComputedStyle(t);return s.strokeLinecap!=="butt"&&(n+=parseInt(s.strokeWidth)),e===void 0?c===void 0?e=800:e=n/c:typeof e=="function"&&(e=e(n)),{delay:o,duration:e,easing:i,css:(a,l)=>`
			stroke-dasharray: ${n};
			stroke-dashoffset: ${l*n};
		`}}export{U as a,S as b,k as c,W as d,M as e,O as f,h as g,v as h,C as i,F as q,I as s};
