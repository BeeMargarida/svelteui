import{S as ba,i as $a,s as La,y as Xt,z as Zt,A as eo,g as to,d as oo,B as lo,q as i,r as a,b as f,h as o,a as c,k as l,al as xa,c as d,l as r,m as s,n as h,W as e}from"./index.b4f0bbdc.js";import{I as Oa}from"./InfoCircled.41a18796.js";import"./navigation.17f733d0.js";import{B as Ga}from"./BottomNav.3ef68d29.js";import{D as Ta}from"./Demo.9cccb4ab.js";import{A as Da}from"./Alert.cab756e0.js";import{C as Ra}from"./Center.c93e1a75.js";import{B as Ua}from"./Box.195443f6.js";function Aa(b){let u;return{c(){u=i(`packages/
        ├── svelteui-composables/
        │   └── src/
        │       └── lib
        ├── svelteui-core/
        │   └── src/
        │       └── lib
        ├── svelteui-dates
        ├── svelteui-demos
        ├── svelteui-motion
        ├── svelteui-prism
        └── svelteui-tests`)},l(v){u=a(v,`packages/
        ├── svelteui-composables/
        │   └── src/
        │       └── lib
        ├── svelteui-core/
        │   └── src/
        │       └── lib
        ├── svelteui-dates
        ├── svelteui-demos
        ├── svelteui-motion
        ├── svelteui-prism
        └── svelteui-tests`)},m(v,m){f(v,u,m)},d(v){v&&o(u)}}}function Pa(b){let u,v;return u=new Ua({props:{root:"pre",css:b[0],$$slots:{default:[Aa]},$$scope:{ctx:b}}}),{c(){Xt(u.$$.fragment)},l(m){Zt(u.$$.fragment,m)},m(m,w){eo(u,m,w),v=!0},p(m,w){const _={};w&2&&(_.$$scope={dirty:w,ctx:m}),u.$set(_)},i(m){v||(to(u.$$.fragment,m),v=!0)},o(m){oo(u.$$.fragment,m),v=!1},d(m){lo(u,m)}}}function Na(b){let u,v;return u=new Ra({props:{$$slots:{default:[Pa]},$$scope:{ctx:b}}}),{c(){Xt(u.$$.fragment)},l(m){Zt(u.$$.fragment,m)},m(m,w){eo(u,m,w),v=!0},p(m,[w]){const _={};w&2&&(_.$$scope={dirty:w,ctx:m}),u.$set(_)},i(m){v||(to(u.$$.fragment,m),v=!0)},o(m){oo(u.$$.fragment,m),v=!1},d(m){lo(u,m)}}}const ja="",Ha="demo",za={code:ja};function Ya(b){return[{bc:"transparent"}]}class Fa extends ba{constructor(u){super(),$a(this,u,Ya,Na,La,{})}}const Wa=Object.freeze(Object.defineProperty({__proto__:null,configuration:za,default:Fa,type:Ha},Symbol.toStringTag,{value:"Module"}));function Ba(b){let u;return{c(){u=i("It is very important to make sure you start from the root of the monorepo before following these steps")},l(v){u=a(v,"It is very important to make sure you start from the root of the monorepo before following these steps")},m(v,m){f(v,u,m)},d(v){v&&o(u)}}}function qa(b){let u,v,m,w,_,ae,Ve,Fo,Wo,Bo,ne,Xe,qo,Mo,Jo,ce,Ze,Qo,Ko,Vo,D,et,Xo,Zo,Y,el,tl,ol,R,tt,ll,rl,F,sl,il,ro,de,al,so,y,ot,nl,cl,T,dl,W,fl,ul,B,ml,vl,pl,lt,hl,_l,rt,El,yl,st,wl,gl,it,Il,io,fe,kl,ao,ue,bl,no,$,me,at,$l,Ll,Sl,ve,nt,Cl,xl,Ol,pe,ct,Gl,Tl,co,U,Dl,dt,Rl,Ul,fo,q,Sa='<code class="language-js"><span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token operator">:</span> Message</code>',uo,he,Al,mo,I,_e,ft,Pl,Nl,jl,Ee,ut,Hl,zl,Yl,A,mt,Fl,Wl,vt,Bl,ql,Ml,P,pt,Jl,Ql,ht,Kl,Vl,vo,ye,Xl,po,L,we,_t,Zl,er,tr,ge,Et,or,lr,rr,Ie,yt,sr,ir,ho,ke,ar,_o,g,M,nr,J,cr,dr,fr,be,wt,ur,mr,vr,Q,pr,K,hr,_r,Er,$e,yr,gt,wr,gr,It,Ir,Eo,Le,kt,kr,yo,N,wo,Se,bt,br,go,S,V,$r,$t,Lr,X,Z,Sr,Lt,Cr,xr,Or,St,Gr,Tr,Ct,Dr,Rr,Ce,Ur,xt,Ar,Io,xe,Ot,Pr,ko,j,Gt,Nr,jr,Oe,Hr,Tt,zr,bo,Ge,Dt,Yr,$o,C,Te,Fr,ee,Wr,Br,De,qr,Rt,Mr,Jr,Re,Qr,Ut,Kr,Lo,Ue,At,Vr,So,H,Xr,Pt,Zr,es,Co,te,xo,Ae,ts,Oo,x,os,oe,ls,rs,le,ss,is,Go,p,Pe,Nt,as,ns,cs,Ne,jt,ds,fs,us,je,Ht,ms,vs,ps,He,zt,hs,_s,Es,ze,Yt,ys,ws,gs,re,Ft,Is,ks,se,bs,$s,Ye,Wt,Ls,Ss,Cs,Fe,Bt,xs,Os,Gs,We,qt,Ts,Ds,To,ie,Do;return N=new Da({props:{icon:Oa,title:"Tip",$$slots:{default:[Ba]},$$scope:{ctx:b}}}),te=new Ta({props:{demo:Wa}}),ie=new Ga({props:{both:!0,slug:{prev:"basics",next:"faq"},title:{prev:"Learn the Basics",next:"FAQ"},group:{prev:"Getting Started",next:"Getting Started"}}}),{c(){u=c(),v=l("h2"),m=i("Ways to contribute"),w=c(),_=l("ul"),ae=l("li"),Ve=l("strong"),Fo=i("Improve documentation:"),Wo=i(" Fix incomplete or missing docs, bad wording, examples or explanations."),Bo=c(),ne=l("li"),Xe=l("strong"),qo=i("Give feedback:"),Mo=i(" We are constantly working on making SvelteUI better, please share how you use SvelteUI, what features are missing and what is done good via GitHub Discussions."),Jo=c(),ce=l("li"),Ze=l("strong"),Qo=i("Share SvelteUI:"),Ko=i(" Share the link to SvelteUI docs with everyone who can be interested, share SvelteUI on Twitter."),Vo=c(),D=l("li"),et=l("strong"),Xo=i("Contribute to codebase:"),Zo=i(" Propose new features via GitHub Issues or find an "),Y=l("a"),el=i("existing one"),tl=i(" that you are interested in and work on it."),ol=c(),R=l("li"),tt=l("strong"),ll=i("Give us a code review:"),rl=i(" Help us identify problems with the "),F=l("a"),sl=i("source code"),il=i(" or make SvelteUI more performant."),ro=c(),de=l("h2"),al=i("Contributing workflow"),so=c(),y=l("ul"),ot=l("li"),nl=i("Decide what you want to contribute."),cl=c(),T=l("li"),dl=i("If you want to implement a new feature, discuss it with a maintainer ("),W=l("a"),fl=i("Discord"),ul=i(" or "),B=l("a"),ml=i("Discussions"),vl=i(") before jumping into code."),pl=c(),lt=l("li"),hl=i("After finalizing the issue details and the code, please follow commit convention."),_l=c(),rt=l("li"),El=i("Submit a PR if everything is fine."),yl=c(),st=l("li"),wl=i("Get a code review and fix all issues noticed by a maintainer."),gl=c(),it=l("li"),Il=i("The PR is merged, and we’re done!"),io=c(),fe=l("h2"),kl=i("Commit convention"),ao=c(),ue=l("p"),bl=i(`SvelteUI is a monorepo and it is important to write clear commit messages to keep the git history clean.
All commits made in this repository are divided into 3 groups:`),no=c(),$=l("ul"),me=l("li"),at=l("strong"),$l=i("package commits"),Ll=i(" related to a particular package"),Sl=c(),ve=l("li"),nt=l("strong"),Cl=i("docs commits"),xl=i(" related to documentation"),Ol=c(),pe=l("li"),ct=l("strong"),Gl=i("core commits"),Tl=i(" only related to repository tooling and not associated with any package"),co=c(),U=l("p"),Dl=i("This repo uses commitizen to make commits easier. In order to commit the changes made, you should run the "),dt=l("code"),Rl=i("yarn cm"),Ul=i(" command. Once you have done that, the commitizen CLI messages will guide you through the commit process. Commit message consists of 2 parts:"),fo=c(),q=l("pre"),uo=c(),he=l("p"),Al=i("Examples:"),mo=c(),I=l("ul"),_e=l("li"),ft=l("code"),Pl=i("[core]: Fix documentation deployment script"),Nl=i(" - Change made in repository script, it is not related to documentation or any package"),jl=c(),Ee=l("li"),ut=l("code"),Hl=i("[docs]: update report issues link"),zl=i(" - Change related to documentation"),Yl=c(),A=l("li"),mt=l("code"),Fl=i("[@svelteui/core]: updated SvelteUIProvider config"),Wl=i(" - Change in "),vt=l("code"),Bl=i("@svelteui/core"),ql=i(" package in SvelteUIProvider component"),Ml=c(),P=l("li"),pt=l("code"),Jl=i("[@svelteui/actions]: added use-portal action"),Ql=i(" - Change in "),ht=l("code"),Kl=i("@svelteui/actions"),Vl=i(" package by adding a new action"),vo=c(),ye=l("h2"),Xl=i("Git branches"),po=c(),L=l("ul"),we=l("li"),_t=l("strong"),Zl=i("main"),er=i(" - When the project hits 1.0, this will have the current version, as well as patches for the current minor version (1.0.x)"),tr=c(),ge=l("li"),Et=l("strong"),or=i("next-minor"),lr=i(" - Contains next minor version (1.x.0), most likely you would want to create a PR to this branch"),rr=c(),Ie=l("li"),yt=l("strong"),sr=i("experimental"),ir=i(" - Up to date with next minor version (1.x.0), implementing some experimental features that may or may not be added"),ho=c(),ke=l("h2"),ar=i("Get started with SvelteUI locally"),_o=c(),g=l("ul"),M=l("li"),nr=i("Install "),J=l("a"),cr=i("editorconfig"),dr=i(" extension for your editor"),fr=c(),be=l("li"),wt=l("strong"),ur=i("vscode users only"),mr=i(" - install recommended extensions"),vr=c(),Q=l("li"),pr=i("Fork "),K=l("a"),hr=i("repository"),_r=i(", clone or download your fork"),Er=c(),$e=l("li"),yr=i("Install dependencies at the root of the monorepo with Yarn "),gt=l("strong"),wr=i("(make sure to install with yarn only)"),gr=c(),It=l("li"),Ir=i("After your node modules have installed:"),Eo=c(),Le=l("p"),kt=l("strong"),kr=i("To start developing"),yo=c(),Xt(N.$$.fragment),wo=c(),Se=l("p"),bt=l("strong"),br=i("If developing in [svelteui-prism, svelteui-dates, or svelteui-demos]"),go=c(),S=l("ol"),V=l("li"),$r=i("run "),$t=l("code"),Lr=i("yarn package"),X=l("ul"),Z=l("li"),Sr=i("If you want to watch for changes in one of the packages that they depend on, run "),Lt=l("code"),Cr=i("yarn watch"),xr=i(" in their directory."),Or=c(),St=l("li"),Gr=i("You will need two terminal sessions open at the very least. If this doesn’t apply to your situation move on to step 2"),Tr=c(),Ct=l("li"),Dr=i("cd into the package you want to develop on"),Rr=c(),Ce=l("li"),Ur=i("run "),xt=l("code"),Ar=i("yarn dev"),Io=c(),xe=l("p"),Ot=l("strong"),Pr=i("If developing in [svelteui-core, svelteui-actions, svelteui-utilities, or svelteui-motion]"),ko=c(),j=l("ol"),Gt=l("li"),Nr=i("cd into the package you want to develop on"),jr=c(),Oe=l("li"),Hr=i("run "),Tt=l("code"),zr=i("yarn dev"),bo=c(),Ge=l("p"),Dt=l("strong"),Yr=i("If developing in docs:"),$o=c(),C=l("ol"),Te=l("li"),Fr=i("Install "),ee=l("a"),Wr=i("deno"),Br=c(),De=l("li"),qr=i("Run "),Rt=l("code"),Mr=i("yarn package"),Jr=c(),Re=l("li"),Qr=i("Run "),Ut=l("code"),Kr=i("yarn dev:docs"),Lo=c(),Ue=l("p"),At=l("strong"),Vr=i("Project Structure"),So=c(),H=l("p"),Xr=i("You won’t need to pay attention to every file within the project. All of the packages follow a similar pattern, so you should always start your journey within the "),Pt=l("code"),Zr=i("src/lib"),es=i(" of whatever package you choose to work on."),Co=c(),Xt(te.$$.fragment),xo=c(),Ae=l("h2"),ts=i("Yarn scripts"),Oo=c(),x=l("p"),os=i("All packages’ Yarn scripts are located at "),oe=l("a"),ls=i("main package.json"),rs=i(`,
individual packages have scripts, but they should not be interacted with directly. This is due to the nature of `),le=l("a"),ss=i("TurboRepo"),is=i(". All scripts should be run from the root of the monorepo."),Go=c(),p=l("ul"),Pe=l("li"),Nt=l("code"),as=i("dev:docs"),ns=i(" - runs the development environment for the docs"),cs=c(),Ne=l("li"),jt=l("code"),ds=i("dev"),fs=i(" - runs Storybook for all the packages that contain stories"),us=c(),je=l("li"),Ht=l("code"),ms=i("clean"),vs=i(" - removes all unnecessary files and folders from packages (i.e. node_modules)"),ps=c(),He=l("li"),zt=l("code"),hs=i("format"),_s=i(" - runs prettier on packages folder"),Es=c(),ze=l("li"),Yt=l("code"),ys=i("lint"),ws=i(" - runs eslint on packages folder (run format before running lint)"),gs=c(),re=l("li"),Ft=l("code"),Is=i("test"),ks=i(" - runs tests with "),se=l("a"),bs=i("vitest"),$s=c(),Ye=l("li"),Wt=l("code"),Ls=i("package"),Ss=i(" - generates built versions of packages (needed for cross package development)"),Cs=c(),Fe=l("li"),Bt=l("code"),xs=i("prepush"),Os=i(" - runs sort, format, lint and test (run this before pushing your code)"),Gs=c(),We=l("li"),qt=l("code"),Ts=i("cm"),Ds=i(" - runs git commands to add and commit through commitizen (this is the recommended way to commit as it follows the convention automatically)"),To=c(),Xt(ie.$$.fragment),this.h()},l(t){xa("svelte-w1zumx",document.head).forEach(o),u=d(t),v=r(t,"H2",{});var Mt=s(v);m=a(Mt,"Ways to contribute"),Mt.forEach(o),w=d(t),_=r(t,"UL",{});var O=s(_);ae=r(O,"LI",{});var Rs=s(ae);Ve=r(Rs,"STRONG",{});var ii=s(Ve);Fo=a(ii,"Improve documentation:"),ii.forEach(o),Wo=a(Rs," Fix incomplete or missing docs, bad wording, examples or explanations."),Rs.forEach(o),Bo=d(O),ne=r(O,"LI",{});var Us=s(ne);Xe=r(Us,"STRONG",{});var ai=s(Xe);qo=a(ai,"Give feedback:"),ai.forEach(o),Mo=a(Us," We are constantly working on making SvelteUI better, please share how you use SvelteUI, what features are missing and what is done good via GitHub Discussions."),Us.forEach(o),Jo=d(O),ce=r(O,"LI",{});var As=s(ce);Ze=r(As,"STRONG",{});var ni=s(Ze);Qo=a(ni,"Share SvelteUI:"),ni.forEach(o),Ko=a(As," Share the link to SvelteUI docs with everyone who can be interested, share SvelteUI on Twitter."),As.forEach(o),Vo=d(O),D=r(O,"LI",{});var Jt=s(D);et=r(Jt,"STRONG",{});var ci=s(et);Xo=a(ci,"Contribute to codebase:"),ci.forEach(o),Zo=a(Jt," Propose new features via GitHub Issues or find an "),Y=r(Jt,"A",{href:!0,rel:!0});var di=s(Y);el=a(di,"existing one"),di.forEach(o),tl=a(Jt," that you are interested in and work on it."),Jt.forEach(o),ol=d(O),R=r(O,"LI",{});var Qt=s(R);tt=r(Qt,"STRONG",{});var fi=s(tt);ll=a(fi,"Give us a code review:"),fi.forEach(o),rl=a(Qt," Help us identify problems with the "),F=r(Qt,"A",{href:!0,rel:!0});var ui=s(F);sl=a(ui,"source code"),ui.forEach(o),il=a(Qt," or make SvelteUI more performant."),Qt.forEach(o),O.forEach(o),ro=d(t),de=r(t,"H2",{});var mi=s(de);al=a(mi,"Contributing workflow"),mi.forEach(o),so=d(t),y=r(t,"UL",{});var k=s(y);ot=r(k,"LI",{});var vi=s(ot);nl=a(vi,"Decide what you want to contribute."),vi.forEach(o),cl=d(k),T=r(k,"LI",{});var Be=s(T);dl=a(Be,"If you want to implement a new feature, discuss it with a maintainer ("),W=r(Be,"A",{href:!0,rel:!0});var pi=s(W);fl=a(pi,"Discord"),pi.forEach(o),ul=a(Be," or "),B=r(Be,"A",{href:!0,rel:!0});var hi=s(B);ml=a(hi,"Discussions"),hi.forEach(o),vl=a(Be,") before jumping into code."),Be.forEach(o),pl=d(k),lt=r(k,"LI",{});var _i=s(lt);hl=a(_i,"After finalizing the issue details and the code, please follow commit convention."),_i.forEach(o),_l=d(k),rt=r(k,"LI",{});var Ei=s(rt);El=a(Ei,"Submit a PR if everything is fine."),Ei.forEach(o),yl=d(k),st=r(k,"LI",{});var yi=s(st);wl=a(yi,"Get a code review and fix all issues noticed by a maintainer."),yi.forEach(o),gl=d(k),it=r(k,"LI",{});var wi=s(it);Il=a(wi,"The PR is merged, and we’re done!"),wi.forEach(o),k.forEach(o),io=d(t),fe=r(t,"H2",{});var gi=s(fe);kl=a(gi,"Commit convention"),gi.forEach(o),ao=d(t),ue=r(t,"P",{});var Ii=s(ue);bl=a(Ii,`SvelteUI is a monorepo and it is important to write clear commit messages to keep the git history clean.
All commits made in this repository are divided into 3 groups:`),Ii.forEach(o),no=d(t),$=r(t,"UL",{});var qe=s($);me=r(qe,"LI",{});var Ps=s(me);at=r(Ps,"STRONG",{});var ki=s(at);$l=a(ki,"package commits"),ki.forEach(o),Ll=a(Ps," related to a particular package"),Ps.forEach(o),Sl=d(qe),ve=r(qe,"LI",{});var Ns=s(ve);nt=r(Ns,"STRONG",{});var bi=s(nt);Cl=a(bi,"docs commits"),bi.forEach(o),xl=a(Ns," related to documentation"),Ns.forEach(o),Ol=d(qe),pe=r(qe,"LI",{});var js=s(pe);ct=r(js,"STRONG",{});var $i=s(ct);Gl=a($i,"core commits"),$i.forEach(o),Tl=a(js," only related to repository tooling and not associated with any package"),js.forEach(o),qe.forEach(o),co=d(t),U=r(t,"P",{});var Ro=s(U);Dl=a(Ro,"This repo uses commitizen to make commits easier. In order to commit the changes made, you should run the "),dt=r(Ro,"CODE",{});var Li=s(dt);Rl=a(Li,"yarn cm"),Li.forEach(o),Ul=a(Ro," command. Once you have done that, the commitizen CLI messages will guide you through the commit process. Commit message consists of 2 parts:"),Ro.forEach(o),fo=d(t),q=r(t,"PRE",{class:!0});var Ca=s(q);Ca.forEach(o),uo=d(t),he=r(t,"P",{});var Si=s(he);Al=a(Si,"Examples:"),Si.forEach(o),mo=d(t),I=r(t,"UL",{});var z=s(I);_e=r(z,"LI",{});var Hs=s(_e);ft=r(Hs,"CODE",{});var Ci=s(ft);Pl=a(Ci,"[core]: Fix documentation deployment script"),Ci.forEach(o),Nl=a(Hs," - Change made in repository script, it is not related to documentation or any package"),Hs.forEach(o),jl=d(z),Ee=r(z,"LI",{});var zs=s(Ee);ut=r(zs,"CODE",{});var xi=s(ut);Hl=a(xi,"[docs]: update report issues link"),xi.forEach(o),zl=a(zs," - Change related to documentation"),zs.forEach(o),Yl=d(z),A=r(z,"LI",{});var Kt=s(A);mt=r(Kt,"CODE",{});var Oi=s(mt);Fl=a(Oi,"[@svelteui/core]: updated SvelteUIProvider config"),Oi.forEach(o),Wl=a(Kt," - Change in "),vt=r(Kt,"CODE",{});var Gi=s(vt);Bl=a(Gi,"@svelteui/core"),Gi.forEach(o),ql=a(Kt," package in SvelteUIProvider component"),Kt.forEach(o),Ml=d(z),P=r(z,"LI",{});var Vt=s(P);pt=r(Vt,"CODE",{});var Ti=s(pt);Jl=a(Ti,"[@svelteui/actions]: added use-portal action"),Ti.forEach(o),Ql=a(Vt," - Change in "),ht=r(Vt,"CODE",{});var Di=s(ht);Kl=a(Di,"@svelteui/actions"),Di.forEach(o),Vl=a(Vt," package by adding a new action"),Vt.forEach(o),z.forEach(o),vo=d(t),ye=r(t,"H2",{});var Ri=s(ye);Xl=a(Ri,"Git branches"),Ri.forEach(o),po=d(t),L=r(t,"UL",{});var Me=s(L);we=r(Me,"LI",{});var Ys=s(we);_t=r(Ys,"STRONG",{});var Ui=s(_t);Zl=a(Ui,"main"),Ui.forEach(o),er=a(Ys," - When the project hits 1.0, this will have the current version, as well as patches for the current minor version (1.0.x)"),Ys.forEach(o),tr=d(Me),ge=r(Me,"LI",{});var Fs=s(ge);Et=r(Fs,"STRONG",{});var Ai=s(Et);or=a(Ai,"next-minor"),Ai.forEach(o),lr=a(Fs," - Contains next minor version (1.x.0), most likely you would want to create a PR to this branch"),Fs.forEach(o),rr=d(Me),Ie=r(Me,"LI",{});var Ws=s(Ie);yt=r(Ws,"STRONG",{});var Pi=s(yt);sr=a(Pi,"experimental"),Pi.forEach(o),ir=a(Ws," - Up to date with next minor version (1.x.0), implementing some experimental features that may or may not be added"),Ws.forEach(o),Me.forEach(o),ho=d(t),ke=r(t,"H2",{});var Ni=s(ke);ar=a(Ni,"Get started with SvelteUI locally"),Ni.forEach(o),_o=d(t),g=r(t,"UL",{});var G=s(g);M=r(G,"LI",{});var Uo=s(M);nr=a(Uo,"Install "),J=r(Uo,"A",{href:!0,rel:!0});var ji=s(J);cr=a(ji,"editorconfig"),ji.forEach(o),dr=a(Uo," extension for your editor"),Uo.forEach(o),fr=d(G),be=r(G,"LI",{});var Bs=s(be);wt=r(Bs,"STRONG",{});var Hi=s(wt);ur=a(Hi,"vscode users only"),Hi.forEach(o),mr=a(Bs," - install recommended extensions"),Bs.forEach(o),vr=d(G),Q=r(G,"LI",{});var Ao=s(Q);pr=a(Ao,"Fork "),K=r(Ao,"A",{href:!0,rel:!0});var zi=s(K);hr=a(zi,"repository"),zi.forEach(o),_r=a(Ao,", clone or download your fork"),Ao.forEach(o),Er=d(G),$e=r(G,"LI",{});var qs=s($e);yr=a(qs,"Install dependencies at the root of the monorepo with Yarn "),gt=r(qs,"STRONG",{});var Yi=s(gt);wr=a(Yi,"(make sure to install with yarn only)"),Yi.forEach(o),qs.forEach(o),gr=d(G),It=r(G,"LI",{});var Fi=s(It);Ir=a(Fi,"After your node modules have installed:"),Fi.forEach(o),G.forEach(o),Eo=d(t),Le=r(t,"P",{});var Wi=s(Le);kt=r(Wi,"STRONG",{});var Bi=s(kt);kr=a(Bi,"To start developing"),Bi.forEach(o),Wi.forEach(o),yo=d(t),Zt(N.$$.fragment,t),wo=d(t),Se=r(t,"P",{});var qi=s(Se);bt=r(qi,"STRONG",{});var Mi=s(bt);br=a(Mi,"If developing in [svelteui-prism, svelteui-dates, or svelteui-demos]"),Mi.forEach(o),qi.forEach(o),go=d(t),S=r(t,"OL",{});var Je=s(S);V=r(Je,"LI",{});var Po=s(V);$r=a(Po,"run "),$t=r(Po,"CODE",{});var Ji=s($t);Lr=a(Ji,"yarn package"),Ji.forEach(o),X=r(Po,"UL",{});var No=s(X);Z=r(No,"LI",{});var jo=s(Z);Sr=a(jo,"If you want to watch for changes in one of the packages that they depend on, run "),Lt=r(jo,"CODE",{});var Qi=s(Lt);Cr=a(Qi,"yarn watch"),Qi.forEach(o),xr=a(jo," in their directory."),jo.forEach(o),Or=d(No),St=r(No,"LI",{});var Ki=s(St);Gr=a(Ki,"You will need two terminal sessions open at the very least. If this doesn’t apply to your situation move on to step 2"),Ki.forEach(o),No.forEach(o),Po.forEach(o),Tr=d(Je),Ct=r(Je,"LI",{});var Vi=s(Ct);Dr=a(Vi,"cd into the package you want to develop on"),Vi.forEach(o),Rr=d(Je),Ce=r(Je,"LI",{});var Ms=s(Ce);Ur=a(Ms,"run "),xt=r(Ms,"CODE",{});var Xi=s(xt);Ar=a(Xi,"yarn dev"),Xi.forEach(o),Ms.forEach(o),Je.forEach(o),Io=d(t),xe=r(t,"P",{});var Zi=s(xe);Ot=r(Zi,"STRONG",{});var ea=s(Ot);Pr=a(ea,"If developing in [svelteui-core, svelteui-actions, svelteui-utilities, or svelteui-motion]"),ea.forEach(o),Zi.forEach(o),ko=d(t),j=r(t,"OL",{});var Ho=s(j);Gt=r(Ho,"LI",{});var ta=s(Gt);Nr=a(ta,"cd into the package you want to develop on"),ta.forEach(o),jr=d(Ho),Oe=r(Ho,"LI",{});var Js=s(Oe);Hr=a(Js,"run "),Tt=r(Js,"CODE",{});var oa=s(Tt);zr=a(oa,"yarn dev"),oa.forEach(o),Js.forEach(o),Ho.forEach(o),bo=d(t),Ge=r(t,"P",{});var la=s(Ge);Dt=r(la,"STRONG",{});var ra=s(Dt);Yr=a(ra,"If developing in docs:"),ra.forEach(o),la.forEach(o),$o=d(t),C=r(t,"OL",{});var Qe=s(C);Te=r(Qe,"LI",{});var Qs=s(Te);Fr=a(Qs,"Install "),ee=r(Qs,"A",{href:!0,rel:!0});var sa=s(ee);Wr=a(sa,"deno"),sa.forEach(o),Qs.forEach(o),Br=d(Qe),De=r(Qe,"LI",{});var Ks=s(De);qr=a(Ks,"Run "),Rt=r(Ks,"CODE",{});var ia=s(Rt);Mr=a(ia,"yarn package"),ia.forEach(o),Ks.forEach(o),Jr=d(Qe),Re=r(Qe,"LI",{});var Vs=s(Re);Qr=a(Vs,"Run "),Ut=r(Vs,"CODE",{});var aa=s(Ut);Kr=a(aa,"yarn dev:docs"),aa.forEach(o),Vs.forEach(o),Qe.forEach(o),Lo=d(t),Ue=r(t,"P",{});var na=s(Ue);At=r(na,"STRONG",{});var ca=s(At);Vr=a(ca,"Project Structure"),ca.forEach(o),na.forEach(o),So=d(t),H=r(t,"P",{});var zo=s(H);Xr=a(zo,"You won’t need to pay attention to every file within the project. All of the packages follow a similar pattern, so you should always start your journey within the "),Pt=r(zo,"CODE",{});var da=s(Pt);Zr=a(da,"src/lib"),da.forEach(o),es=a(zo," of whatever package you choose to work on."),zo.forEach(o),Co=d(t),Zt(te.$$.fragment,t),xo=d(t),Ae=r(t,"H2",{});var fa=s(Ae);ts=a(fa,"Yarn scripts"),fa.forEach(o),Oo=d(t),x=r(t,"P",{});var Ke=s(x);os=a(Ke,"All packages’ Yarn scripts are located at "),oe=r(Ke,"A",{href:!0,rel:!0});var ua=s(oe);ls=a(ua,"main package.json"),ua.forEach(o),rs=a(Ke,`,
individual packages have scripts, but they should not be interacted with directly. This is due to the nature of `),le=r(Ke,"A",{href:!0,rel:!0});var ma=s(le);ss=a(ma,"TurboRepo"),ma.forEach(o),is=a(Ke,". All scripts should be run from the root of the monorepo."),Ke.forEach(o),Go=d(t),p=r(t,"UL",{});var E=s(p);Pe=r(E,"LI",{});var Xs=s(Pe);Nt=r(Xs,"CODE",{});var va=s(Nt);as=a(va,"dev:docs"),va.forEach(o),ns=a(Xs," - runs the development environment for the docs"),Xs.forEach(o),cs=d(E),Ne=r(E,"LI",{});var Zs=s(Ne);jt=r(Zs,"CODE",{});var pa=s(jt);ds=a(pa,"dev"),pa.forEach(o),fs=a(Zs," - runs Storybook for all the packages that contain stories"),Zs.forEach(o),us=d(E),je=r(E,"LI",{});var ei=s(je);Ht=r(ei,"CODE",{});var ha=s(Ht);ms=a(ha,"clean"),ha.forEach(o),vs=a(ei," - removes all unnecessary files and folders from packages (i.e. node_modules)"),ei.forEach(o),ps=d(E),He=r(E,"LI",{});var ti=s(He);zt=r(ti,"CODE",{});var _a=s(zt);hs=a(_a,"format"),_a.forEach(o),_s=a(ti," - runs prettier on packages folder"),ti.forEach(o),Es=d(E),ze=r(E,"LI",{});var oi=s(ze);Yt=r(oi,"CODE",{});var Ea=s(Yt);ys=a(Ea,"lint"),Ea.forEach(o),ws=a(oi," - runs eslint on packages folder (run format before running lint)"),oi.forEach(o),gs=d(E),re=r(E,"LI",{});var Yo=s(re);Ft=r(Yo,"CODE",{});var ya=s(Ft);Is=a(ya,"test"),ya.forEach(o),ks=a(Yo," - runs tests with "),se=r(Yo,"A",{href:!0,rel:!0});var wa=s(se);bs=a(wa,"vitest"),wa.forEach(o),Yo.forEach(o),$s=d(E),Ye=r(E,"LI",{});var li=s(Ye);Wt=r(li,"CODE",{});var ga=s(Wt);Ls=a(ga,"package"),ga.forEach(o),Ss=a(li," - generates built versions of packages (needed for cross package development)"),li.forEach(o),Cs=d(E),Fe=r(E,"LI",{});var ri=s(Fe);Bt=r(ri,"CODE",{});var Ia=s(Bt);xs=a(Ia,"prepush"),Ia.forEach(o),Os=a(ri," - runs sort, format, lint and test (run this before pushing your code)"),ri.forEach(o),Gs=d(E),We=r(E,"LI",{});var si=s(We);qt=r(si,"CODE",{});var ka=s(qt);Ts=a(ka,"cm"),ka.forEach(o),Ds=a(si," - runs git commands to add and commit through commitizen (this is the recommended way to commit as it follows the convention automatically)"),si.forEach(o),E.forEach(o),To=d(t),Zt(ie.$$.fragment,t),this.h()},h(){document.title="Contributing - SvelteUI",h(Y,"href","https://github.com/svelteuidev/svelteui/labels/help%20wanted"),h(Y,"rel","nofollow"),h(F,"href","https://github.com/svelteuidev/svelteui"),h(F,"rel","nofollow"),h(W,"href","https://discord.gg/2J2xmzCS79"),h(W,"rel","nofollow"),h(B,"href","https://github.com/svelteuidev/svelteui/discussions/categories/feature-requests"),h(B,"rel","nofollow"),h(q,"class","language-js"),h(J,"href","https://editorconfig.org/"),h(J,"rel","nofollow"),h(K,"href","https://github.com/svelteuidev/svelteui"),h(K,"rel","nofollow"),h(ee,"href","https://deno.land/manual@v1.28.3/introduction"),h(ee,"rel","nofollow"),h(oe,"href","https://github.com/svelteuidev/svelteui/blob/main/package.json"),h(oe,"rel","nofollow"),h(le,"href","https://turborepo.org/"),h(le,"rel","nofollow"),h(se,"href","https://vitest.dev/"),h(se,"rel","nofollow")},m(t,n){f(t,u,n),f(t,v,n),e(v,m),f(t,w,n),f(t,_,n),e(_,ae),e(ae,Ve),e(Ve,Fo),e(ae,Wo),e(_,Bo),e(_,ne),e(ne,Xe),e(Xe,qo),e(ne,Mo),e(_,Jo),e(_,ce),e(ce,Ze),e(Ze,Qo),e(ce,Ko),e(_,Vo),e(_,D),e(D,et),e(et,Xo),e(D,Zo),e(D,Y),e(Y,el),e(D,tl),e(_,ol),e(_,R),e(R,tt),e(tt,ll),e(R,rl),e(R,F),e(F,sl),e(R,il),f(t,ro,n),f(t,de,n),e(de,al),f(t,so,n),f(t,y,n),e(y,ot),e(ot,nl),e(y,cl),e(y,T),e(T,dl),e(T,W),e(W,fl),e(T,ul),e(T,B),e(B,ml),e(T,vl),e(y,pl),e(y,lt),e(lt,hl),e(y,_l),e(y,rt),e(rt,El),e(y,yl),e(y,st),e(st,wl),e(y,gl),e(y,it),e(it,Il),f(t,io,n),f(t,fe,n),e(fe,kl),f(t,ao,n),f(t,ue,n),e(ue,bl),f(t,no,n),f(t,$,n),e($,me),e(me,at),e(at,$l),e(me,Ll),e($,Sl),e($,ve),e(ve,nt),e(nt,Cl),e(ve,xl),e($,Ol),e($,pe),e(pe,ct),e(ct,Gl),e(pe,Tl),f(t,co,n),f(t,U,n),e(U,Dl),e(U,dt),e(dt,Rl),e(U,Ul),f(t,fo,n),f(t,q,n),q.innerHTML=Sa,f(t,uo,n),f(t,he,n),e(he,Al),f(t,mo,n),f(t,I,n),e(I,_e),e(_e,ft),e(ft,Pl),e(_e,Nl),e(I,jl),e(I,Ee),e(Ee,ut),e(ut,Hl),e(Ee,zl),e(I,Yl),e(I,A),e(A,mt),e(mt,Fl),e(A,Wl),e(A,vt),e(vt,Bl),e(A,ql),e(I,Ml),e(I,P),e(P,pt),e(pt,Jl),e(P,Ql),e(P,ht),e(ht,Kl),e(P,Vl),f(t,vo,n),f(t,ye,n),e(ye,Xl),f(t,po,n),f(t,L,n),e(L,we),e(we,_t),e(_t,Zl),e(we,er),e(L,tr),e(L,ge),e(ge,Et),e(Et,or),e(ge,lr),e(L,rr),e(L,Ie),e(Ie,yt),e(yt,sr),e(Ie,ir),f(t,ho,n),f(t,ke,n),e(ke,ar),f(t,_o,n),f(t,g,n),e(g,M),e(M,nr),e(M,J),e(J,cr),e(M,dr),e(g,fr),e(g,be),e(be,wt),e(wt,ur),e(be,mr),e(g,vr),e(g,Q),e(Q,pr),e(Q,K),e(K,hr),e(Q,_r),e(g,Er),e(g,$e),e($e,yr),e($e,gt),e(gt,wr),e(g,gr),e(g,It),e(It,Ir),f(t,Eo,n),f(t,Le,n),e(Le,kt),e(kt,kr),f(t,yo,n),eo(N,t,n),f(t,wo,n),f(t,Se,n),e(Se,bt),e(bt,br),f(t,go,n),f(t,S,n),e(S,V),e(V,$r),e(V,$t),e($t,Lr),e(V,X),e(X,Z),e(Z,Sr),e(Z,Lt),e(Lt,Cr),e(Z,xr),e(X,Or),e(X,St),e(St,Gr),e(S,Tr),e(S,Ct),e(Ct,Dr),e(S,Rr),e(S,Ce),e(Ce,Ur),e(Ce,xt),e(xt,Ar),f(t,Io,n),f(t,xe,n),e(xe,Ot),e(Ot,Pr),f(t,ko,n),f(t,j,n),e(j,Gt),e(Gt,Nr),e(j,jr),e(j,Oe),e(Oe,Hr),e(Oe,Tt),e(Tt,zr),f(t,bo,n),f(t,Ge,n),e(Ge,Dt),e(Dt,Yr),f(t,$o,n),f(t,C,n),e(C,Te),e(Te,Fr),e(Te,ee),e(ee,Wr),e(C,Br),e(C,De),e(De,qr),e(De,Rt),e(Rt,Mr),e(C,Jr),e(C,Re),e(Re,Qr),e(Re,Ut),e(Ut,Kr),f(t,Lo,n),f(t,Ue,n),e(Ue,At),e(At,Vr),f(t,So,n),f(t,H,n),e(H,Xr),e(H,Pt),e(Pt,Zr),e(H,es),f(t,Co,n),eo(te,t,n),f(t,xo,n),f(t,Ae,n),e(Ae,ts),f(t,Oo,n),f(t,x,n),e(x,os),e(x,oe),e(oe,ls),e(x,rs),e(x,le),e(le,ss),e(x,is),f(t,Go,n),f(t,p,n),e(p,Pe),e(Pe,Nt),e(Nt,as),e(Pe,ns),e(p,cs),e(p,Ne),e(Ne,jt),e(jt,ds),e(Ne,fs),e(p,us),e(p,je),e(je,Ht),e(Ht,ms),e(je,vs),e(p,ps),e(p,He),e(He,zt),e(zt,hs),e(He,_s),e(p,Es),e(p,ze),e(ze,Yt),e(Yt,ys),e(ze,ws),e(p,gs),e(p,re),e(re,Ft),e(Ft,Is),e(re,ks),e(re,se),e(se,bs),e(p,$s),e(p,Ye),e(Ye,Wt),e(Wt,Ls),e(Ye,Ss),e(p,Cs),e(p,Fe),e(Fe,Bt),e(Bt,xs),e(Fe,Os),e(p,Gs),e(p,We),e(We,qt),e(qt,Ts),e(We,Ds),f(t,To,n),eo(ie,t,n),Do=!0},p(t,[n]){const Mt={};n&1&&(Mt.$$scope={dirty:n,ctx:t}),N.$set(Mt)},i(t){Do||(to(N.$$.fragment,t),to(te.$$.fragment,t),to(ie.$$.fragment,t),Do=!0)},o(t){oo(N.$$.fragment,t),oo(te.$$.fragment,t),oo(ie.$$.fragment,t),Do=!1},d(t){t&&o(u),t&&o(v),t&&o(w),t&&o(_),t&&o(ro),t&&o(de),t&&o(so),t&&o(y),t&&o(io),t&&o(fe),t&&o(ao),t&&o(ue),t&&o(no),t&&o($),t&&o(co),t&&o(U),t&&o(fo),t&&o(q),t&&o(uo),t&&o(he),t&&o(mo),t&&o(I),t&&o(vo),t&&o(ye),t&&o(po),t&&o(L),t&&o(ho),t&&o(ke),t&&o(_o),t&&o(g),t&&o(Eo),t&&o(Le),t&&o(yo),lo(N,t),t&&o(wo),t&&o(Se),t&&o(go),t&&o(S),t&&o(Io),t&&o(xe),t&&o(ko),t&&o(j),t&&o(bo),t&&o(Ge),t&&o($o),t&&o(C),t&&o(Lo),t&&o(Ue),t&&o(So),t&&o(H),t&&o(Co),lo(te,t),t&&o(xo),t&&o(Ae),t&&o(Oo),t&&o(x),t&&o(Go),t&&o(p),t&&o(To),lo(ie,t)}}}const tn={title:"Contributing"};class on extends ba{constructor(u){super(),$a(this,u,null,qa,La,{})}}export{on as default,tn as metadata};
