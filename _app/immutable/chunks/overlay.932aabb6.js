import{S as Y,i as q,s as F,y,a as d,z as b,c as g,A as k,b as i,g as $,d as m,B as h,h as r,v as He,f as Le,q as u,r as f,u as Ne,k as x,l as O,m as w,n as ie,W as v,X as Re}from"./index.b4f0bbdc.js";import{D as pe}from"./Demo.9cccb4ab.js";import{O as ue}from"./Overlay.5ae91e27.js";import{B as Be}from"./Box.195443f6.js";import{G as Ye}from"./Group.db734d69.js";import{B as fe}from"./Button.b50e74fc.js";import{T as Ce}from"./Text.d4cabcdc.js";function Ue(c){let e,o;return e=new ue({props:{opacity:.6,color:"#000",zIndex:5}}),{c(){y(e.$$.fragment)},l(t){b(e.$$.fragment,t)},m(t,a){k(e,t,a),o=!0},i(t){o||($(e.$$.fragment,t),o=!0)},o(t){m(e.$$.fragment,t),o=!1},d(t){h(e,t)}}}function Xe(c){let e=c[0]?"Won't click, haha":"Click as much as you like",o;return{c(){o=u(e)},l(t){o=f(t,e)},m(t,a){i(t,o,a)},p(t,a){a&1&&e!==(e=t[0]?"Won't click, haha":"Click as much as you like")&&Ne(o,e)},d(t){t&&r(o)}}}function Je(c){let e,o,t,a=c[0]&&Ue();return o=new fe({props:{color:c[0]?"red":"teal",$$slots:{default:[Xe]},$$scope:{ctx:c}}}),o.$on("click",c[2]),{c(){a&&a.c(),e=d(),y(o.$$.fragment)},l(n){a&&a.l(n),e=g(n),b(o.$$.fragment,n)},m(n,s){a&&a.m(n,s),i(n,e,s),k(o,n,s),t=!0},p(n,s){n[0]?a?s&1&&$(a,1):(a=Ue(),a.c(),$(a,1),a.m(e.parentNode,e)):a&&(He(),m(a,1,1,()=>{a=null}),Le());const _={};s&1&&(_.color=n[0]?"red":"teal"),s&17&&(_.$$scope={dirty:s,ctx:n}),o.$set(_)},i(n){t||($(a),$(o.$$.fragment,n),t=!0)},o(n){m(a),m(o.$$.fragment,n),t=!1},d(n){a&&a.d(n),n&&r(e),h(o,n)}}}function Ke(c){let e,o;return{c(){e=u("Count: "),o=u(c[1])},l(t){e=f(t,"Count: "),o=f(t,c[1])},m(t,a){i(t,e,a),i(t,o,a)},p(t,a){a&2&&Ne(o,t[1])},d(t){t&&r(e),t&&r(o)}}}function Qe(c){let e;return{c(){e=u("Toggle overlay")},l(o){e=f(o,"Toggle overlay")},m(o,t){i(o,e,t)},d(o){o&&r(e)}}}function Ve(c){let e,o,t,a;return e=new Ce({props:{$$slots:{default:[Ke]},$$scope:{ctx:c}}}),t=new fe({props:{$$slots:{default:[Qe]},$$scope:{ctx:c}}}),t.$on("click",c[3]),{c(){y(e.$$.fragment),o=d(),y(t.$$.fragment)},l(n){b(e.$$.fragment,n),o=g(n),b(t.$$.fragment,n)},m(n,s){k(e,n,s),i(n,o,s),k(t,n,s),a=!0},p(n,s){const _={};s&18&&(_.$$scope={dirty:s,ctx:n}),e.$set(_);const T={};s&16&&(T.$$scope={dirty:s,ctx:n}),t.$set(T)},i(n){a||($(e.$$.fragment,n),$(t.$$.fragment,n),a=!0)},o(n){m(e.$$.fragment,n),m(t.$$.fragment,n),a=!1},d(n){h(e,n),n&&r(o),h(t,n)}}}function Ze(c){let e,o,t,a;return e=new Be({props:{css:{display:"flex",justifyContent:"center",height:60,position:"relative",textAlign:"center"},$$slots:{default:[Je]},$$scope:{ctx:c}}}),t=new Ye({props:{children:2,direction:"column",position:"center",$$slots:{default:[Ve]},$$scope:{ctx:c}}}),{c(){y(e.$$.fragment),o=d(),y(t.$$.fragment)},l(n){b(e.$$.fragment,n),o=g(n),b(t.$$.fragment,n)},m(n,s){k(e,n,s),i(n,o,s),k(t,n,s),a=!0},p(n,[s]){const _={};s&19&&(_.$$scope={dirty:s,ctx:n}),e.$set(_);const T={};s&19&&(T.$$scope={dirty:s,ctx:n}),t.$set(T)},i(n){a||($(e.$$.fragment,n),$(t.$$.fragment,n),a=!0)},o(n){m(e.$$.fragment,n),m(t.$$.fragment,n),a=!1},d(n){h(e,n),n&&r(o),h(t,n)}}}const et=`
<script>
	import { Box, Button, Group, Overlay, Text } from '@svelteuidev/core';

  let visible = false;
  let count = 0;
<\/script>

<Box>
    {#if visible}
        <Overlay opacity={0.6} color="#000" zIndex={5} />
    {/if}
    <Button on:click={() => count++} color={visible ? 'red' : 'teal'}>
        {!visible ? 'Click as much as you like' : "Won't click, haha"}
    </Button>
</Box>
<Group children={2} direction='column' position="center">
    <Text>Count: {count}</Text>
    <Button on:click={() => visible = !visible}>Toggle overlay</Button>
</Group>`,tt="demo",nt={code:et};function ot(c,e,o){let t=!1,a=0;return[t,a,()=>o(1,a++,a),()=>o(0,t=!t)]}class at extends Y{constructor(e){super(),q(this,e,ot,Ze,F,{})}}const lt=Object.freeze(Object.defineProperty({__proto__:null,configuration:nt,default:at,type:tt},Symbol.toStringTag,{value:"Module"}));function st(c){let e;return{c(){e=u("This text is now selectable")},l(o){e=f(o,"This text is now selectable")},m(o,t){i(o,e,t)},d(o){o&&r(e)}}}function rt(c){let e,o;return e=new Ce({props:{override:{color:"white",marginTop:"10px"},$$slots:{default:[st]},$$scope:{ctx:c}}}),{c(){y(e.$$.fragment)},l(t){b(e.$$.fragment,t)},m(t,a){k(e,t,a),o=!0},p(t,a){const n={};a&1&&(n.$$scope={dirty:a,ctx:t}),e.$set(n)},i(t){o||($(e.$$.fragment,t),o=!0)},o(t){m(e.$$.fragment,t),o=!1},d(t){h(e,t)}}}function ct(c){let e,o;return e=new ue({props:{opacity:.6,color:"#000",zIndex:5,center:!0,$$slots:{default:[rt]},$$scope:{ctx:c}}}),{c(){y(e.$$.fragment)},l(t){b(e.$$.fragment,t)},m(t,a){k(e,t,a),o=!0},p(t,[a]){const n={};a&1&&(n.$$scope={dirty:a,ctx:t}),e.$set(n)},i(t){o||($(e.$$.fragment,t),o=!0)},o(t){m(e.$$.fragment,t),o=!1},d(t){h(e,t)}}}const it=`<script>
	import { Overlay, Text } from '@svelteuidev/core';
<\/script>

<Overlay opacity={0.6} color="#000" zIndex={5} center>
	<Text>This text is now selectable</Text>
</Overlay>
`,pt="demo",ut={code:it};class ft extends Y{constructor(e){super(),q(this,e,null,ct,F,{})}}const $t=Object.freeze(Object.defineProperty({__proto__:null,configuration:ut,default:ft,type:pt},Symbol.toStringTag,{value:"Module"}));function mt(c){let e;return{c(){e=u("Under overlay")},l(o){e=f(o,"Under overlay")},m(o,t){i(o,e,t)},d(o){o&&r(e)}}}function _t(c){let e,o,t,a;return e=new fe({props:{$$slots:{default:[mt]},$$scope:{ctx:c}}}),t=new ue({props:{gradient:"linear-gradient(105deg, black 20%, #312f2f 50%, $gray400 100%)"}}),{c(){y(e.$$.fragment),o=d(),y(t.$$.fragment)},l(n){b(e.$$.fragment,n),o=g(n),b(t.$$.fragment,n)},m(n,s){k(e,n,s),i(n,o,s),k(t,n,s),a=!0},p(n,s){const _={};s&1&&(_.$$scope={dirty:s,ctx:n}),e.$set(_)},i(n){a||($(e.$$.fragment,n),$(t.$$.fragment,n),a=!0)},o(n){m(e.$$.fragment,n),m(t.$$.fragment,n),a=!1},d(n){h(e,n),n&&r(o),h(t,n)}}}function vt(c){let e,o;return e=new Be({props:{css:{position:"relative",height:200,width:"100%",maxWidth:400,marginLeft:"auto",marginRight:"auto",display:"flex",alignItems:"center",justifyContent:"center"},$$slots:{default:[_t]},$$scope:{ctx:c}}}),{c(){y(e.$$.fragment)},l(t){b(e.$$.fragment,t)},m(t,a){k(e,t,a),o=!0},p(t,[a]){const n={};a&1&&(n.$$scope={dirty:a,ctx:t}),e.$set(n)},i(t){o||($(e.$$.fragment,t),o=!0)},o(t){m(e.$$.fragment,t),o=!1},d(t){h(e,t)}}}const dt=`<script>
	import { Box, Button, Overlay } from '@svelteuidev/core';
<\/script>

<Box>
    <Button>Under overlay</Button>
    <Overlay gradient={'linear-gradient(105deg, black 20%, #312f2f 50%, $gray400 100%)''} />
</Box>`,gt="demo",yt={code:dt};class bt extends Y{constructor(e){super(),q(this,e,null,vt,F,{})}}const kt=Object.freeze(Object.defineProperty({__proto__:null,configuration:yt,default:bt,type:gt},Symbol.toStringTag,{value:"Module"}));function De(c){let e,o;return e=new ue({props:{opacity:.6,color:"#000",zIndex:5,blur:2}}),{c(){y(e.$$.fragment)},l(t){b(e.$$.fragment,t)},m(t,a){k(e,t,a),o=!0},i(t){o||($(e.$$.fragment,t),o=!0)},o(t){m(e.$$.fragment,t),o=!1},d(t){h(e,t)}}}function ht(c){let e;return{c(){e=u("Overlay with a blur")},l(o){e=f(o,"Overlay with a blur")},m(o,t){i(o,e,t)},d(o){o&&r(e)}}}function xt(c){let e,o,t,a=c[0]&&De();return o=new Ce({props:{align:"center",$$slots:{default:[ht]},$$scope:{ctx:c}}}),{c(){a&&a.c(),e=d(),y(o.$$.fragment)},l(n){a&&a.l(n),e=g(n),b(o.$$.fragment,n)},m(n,s){a&&a.m(n,s),i(n,e,s),k(o,n,s),t=!0},p(n,s){n[0]?a?s&1&&$(a,1):(a=De(),a.c(),$(a,1),a.m(e.parentNode,e)):a&&(He(),m(a,1,1,()=>{a=null}),Le());const _={};s&4&&(_.$$scope={dirty:s,ctx:n}),o.$set(_)},i(n){t||($(a),$(o.$$.fragment,n),t=!0)},o(n){m(a),m(o.$$.fragment,n),t=!1},d(n){a&&a.d(n),n&&r(e),h(o,n)}}}function Ot(c){let e;return{c(){e=u("Toggle overlay")},l(o){e=f(o,"Toggle overlay")},m(o,t){i(o,e,t)},d(o){o&&r(e)}}}function wt(c){let e,o;return e=new fe({props:{$$slots:{default:[Ot]},$$scope:{ctx:c}}}),e.$on("click",c[1]),{c(){y(e.$$.fragment)},l(t){b(e.$$.fragment,t)},m(t,a){k(e,t,a),o=!0},p(t,a){const n={};a&4&&(n.$$scope={dirty:a,ctx:t}),e.$set(n)},i(t){o||($(e.$$.fragment,t),o=!0)},o(t){m(e.$$.fragment,t),o=!1},d(t){h(e,t)}}}function Tt(c){let e,o,t,a;return e=new Be({props:{css:{height:50,position:"relative"},$$slots:{default:[xt]},$$scope:{ctx:c}}}),t=new Ye({props:{children:1,position:"center",$$slots:{default:[wt]},$$scope:{ctx:c}}}),{c(){y(e.$$.fragment),o=d(),y(t.$$.fragment)},l(n){b(e.$$.fragment,n),o=g(n),b(t.$$.fragment,n)},m(n,s){k(e,n,s),i(n,o,s),k(t,n,s),a=!0},p(n,[s]){const _={};s&5&&(_.$$scope={dirty:s,ctx:n}),e.$set(_);const T={};s&5&&(T.$$scope={dirty:s,ctx:n}),t.$set(T)},i(n){a||($(e.$$.fragment,n),$(t.$$.fragment,n),a=!0)},o(n){m(e.$$.fragment,n),m(t.$$.fragment,n),a=!1},d(n){h(e,n),n&&r(o),h(t,n)}}}const Bt=`<script>
	import { Box, Button, Group, Overlay } from '@svelteuidev/core';

  let visible = false;
<\/script>

<Box>
    {#if visible}
        <Overlay opacity={0.6} color="#000" zIndex={5} blur={2} />
    {/if}
    Overlay with a blur
</Box>

<Group children={1} position="center">
    <Button on:click={() => visible = !visible}>Toggle overlay</Button>
</Group>`,Ct="demo",Et={code:Bt};function St(c,e,o){let t=!1;return[t,()=>o(0,t=!t)]}class zt extends Y{constructor(e){super(),q(this,e,St,Tt,F,{})}}const jt=Object.freeze(Object.defineProperty({__proto__:null,configuration:Et,default:zt,type:Ct},Symbol.toStringTag,{value:"Module"}));function It(c){let e,o,t,a,n,s,_,T,R,G,$e,X,E,J,W,me,K,C,_e,L,ve,de,Q,S,V,A,ge,Z,z,ee,M,ye,te,B,be,N,ke,he,j,xe,Oe,ne,I,oe,U,we,ae,D,Te,le,P,qe=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Overlay<span class="token punctuation">,</span> Anchor <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@svelteuidev/core'</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Overlay</span> <span class="token attr-name">root</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>a<span class="token punctuation">'</span></span><span class="token punctuation">></span></span> href="#" />
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Overlay</span> <span class="token attr-name">root=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span>Anchor<span class="token punctuation">&#125;</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/hello<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code>`,se;return E=new pe({props:{demo:lt}}),S=new pe({props:{demo:$t}}),z=new pe({props:{demo:kt}}),I=new pe({props:{demo:jt}}),{c(){e=x("h2"),o=u("Usage"),t=d(),a=x("p"),n=u(`Overlay has absolute position and will take 100% of width and height of parent container.
It is used to build components like `),s=x("a"),_=u("Modal"),T=u(" and LoadingOverlay (not yet implemented)."),R=d(),G=x("p"),$e=u("You can change overlay opacity (from 0 to 1), color (CSS color value, not connected to SvelteUI theme) and z-index (number)."),X=d(),y(E.$$.fragment),J=d(),W=x("h2"),me=u("Display Content"),K=d(),C=x("p"),_e=u("Overlay has a default slot that allows you to display any content over the overlay. A "),L=x("code"),ve=u("center"),de=u(" prop can be used to center the content horizontally."),Q=d(),y(S.$$.fragment),V=d(),A=x("h2"),ge=u("With gradient"),Z=d(),y(z.$$.fragment),ee=d(),M=x("h2"),ye=u("With blur"),te=d(),B=x("p"),be=u("To blur the overlay backdrop, set the "),N=x("code"),ke=u("blur"),he=u(` prop with a number. This will set the backdrop blur in px.
Note that blur `),j=x("a"),xe=u("is not supported in Firefox"),Oe=u("."),ne=d(),y(I.$$.fragment),oe=d(),U=x("h2"),we=u("Custom component"),ae=d(),D=x("p"),Te=u("You can pass custom tag or component that will be used as root element:"),le=d(),P=x("pre"),this.h()},l(l){e=O(l,"H2",{});var p=w(e);o=f(p,"Usage"),p.forEach(r),t=g(l),a=O(l,"P",{});var re=w(a);n=f(re,`Overlay has absolute position and will take 100% of width and height of parent container.
It is used to build components like `),s=O(re,"A",{href:!0});var Ee=w(s);_=f(Ee,"Modal"),Ee.forEach(r),T=f(re," and LoadingOverlay (not yet implemented)."),re.forEach(r),R=g(l),G=O(l,"P",{});var Se=w(G);$e=f(Se,"You can change overlay opacity (from 0 to 1), color (CSS color value, not connected to SvelteUI theme) and z-index (number)."),Se.forEach(r),X=g(l),b(E.$$.fragment,l),J=g(l),W=O(l,"H2",{});var ze=w(W);me=f(ze,"Display Content"),ze.forEach(r),K=g(l),C=O(l,"P",{});var ce=w(C);_e=f(ce,"Overlay has a default slot that allows you to display any content over the overlay. A "),L=O(ce,"CODE",{});var je=w(L);ve=f(je,"center"),je.forEach(r),de=f(ce," prop can be used to center the content horizontally."),ce.forEach(r),Q=g(l),b(S.$$.fragment,l),V=g(l),A=O(l,"H2",{});var Ie=w(A);ge=f(Ie,"With gradient"),Ie.forEach(r),Z=g(l),b(z.$$.fragment,l),ee=g(l),M=O(l,"H2",{});var Pe=w(M);ye=f(Pe,"With blur"),Pe.forEach(r),te=g(l),B=O(l,"P",{});var H=w(B);be=f(H,"To blur the overlay backdrop, set the "),N=O(H,"CODE",{});var Ge=w(N);ke=f(Ge,"blur"),Ge.forEach(r),he=f(H,` prop with a number. This will set the backdrop blur in px.
Note that blur `),j=O(H,"A",{href:!0,rel:!0});var We=w(j);xe=f(We,"is not supported in Firefox"),We.forEach(r),Oe=f(H,"."),H.forEach(r),ne=g(l),b(I.$$.fragment,l),oe=g(l),U=O(l,"H2",{});var Ae=w(U);we=f(Ae,"Custom component"),Ae.forEach(r),ae=g(l),D=O(l,"P",{});var Me=w(D);Te=f(Me,"You can pass custom tag or component that will be used as root element:"),Me.forEach(r),le=g(l),P=O(l,"PRE",{class:!0});var Fe=w(P);Fe.forEach(r),this.h()},h(){ie(s,"href","core/modal/"),ie(j,"href","https://caniuse.com/css-backdrop-filter"),ie(j,"rel","nofollow"),ie(P,"class","language-svelte")},m(l,p){i(l,e,p),v(e,o),i(l,t,p),i(l,a,p),v(a,n),v(a,s),v(s,_),v(a,T),i(l,R,p),i(l,G,p),v(G,$e),i(l,X,p),k(E,l,p),i(l,J,p),i(l,W,p),v(W,me),i(l,K,p),i(l,C,p),v(C,_e),v(C,L),v(L,ve),v(C,de),i(l,Q,p),k(S,l,p),i(l,V,p),i(l,A,p),v(A,ge),i(l,Z,p),k(z,l,p),i(l,ee,p),i(l,M,p),v(M,ye),i(l,te,p),i(l,B,p),v(B,be),v(B,N),v(N,ke),v(B,he),v(B,j),v(j,xe),v(B,Oe),i(l,ne,p),k(I,l,p),i(l,oe,p),i(l,U,p),v(U,we),i(l,ae,p),i(l,D,p),v(D,Te),i(l,le,p),i(l,P,p),P.innerHTML=qe,se=!0},p:Re,i(l){se||($(E.$$.fragment,l),$(S.$$.fragment,l),$(z.$$.fragment,l),$(I.$$.fragment,l),se=!0)},o(l){m(E.$$.fragment,l),m(S.$$.fragment,l),m(z.$$.fragment,l),m(I.$$.fragment,l),se=!1},d(l){l&&r(e),l&&r(t),l&&r(a),l&&r(R),l&&r(G),l&&r(X),h(E,l),l&&r(J),l&&r(W),l&&r(K),l&&r(C),l&&r(Q),h(S,l),l&&r(V),l&&r(A),l&&r(Z),h(z,l),l&&r(ee),l&&r(M),l&&r(te),l&&r(B),l&&r(ne),h(I,l),l&&r(oe),l&&r(U),l&&r(ae),l&&r(D),l&&r(le),l&&r(P)}}}const Ht={title:"Overlay",group:"svelteuidev-core",packageGroup:"@svelteuidev/core",slug:"/core/overlay/",category:"overlay",description:"Overlays given element with div element with any color and opacity",importCode:"import { Overlay } from '@svelteuidev/core';",source:"svelteui-core/src/components/Overlay/Overlay.svelte",docs:"core/overlay.md"};class Lt extends Y{constructor(e){super(),q(this,e,null,It,F,{})}}export{Lt as default,Ht as metadata};
