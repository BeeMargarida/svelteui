import{S as $n,i as zn,s as Gn,a as r,k as o,q as a,y as Yn,al as Kn,h as e,c as u,l,m as p,r as n,z as Nn,n as k,b as i,W as t,A as qn,X as Jn,g as Wn,d as Xn,B as Fn}from"./index.b4f0bbdc.js";import"./navigation.17f733d0.js";import{B as Qn}from"./BottomNav.3ef68d29.js";function Vn(Un){let q,b,Le,J,Ae,je,Fs,W,Re,Qs,d,X,bs,Me,$e,ze,F,Ss,Ge,Ye,Ke,Q,gs,Ne,qe,Je,y,Is,We,Xe,V,Fe,Qe,H,Ve,Ze,Vs,Z,st,Zs,S,et,ss,tt,at,se,x,Pn=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> SvelteUIProvider <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@svelteuidev/core'</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SvelteUIProvider</span> <span class="token attr-name">themeObserver</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>YourApp</span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SvelteUIProvider</span><span class="token punctuation">></span></span></code>`,ee,g,nt,es,ot,lt,te,ts,pt,ae,as,ct,ne,ns,Cs,os,it,oe,ls,rt,le,ps,ut,pe,B,Us,kt,ft,ce,f,I,Ps,dt,vt,Ts,mt,ht,yt,cs,Ds,Et,_t,wt,E,Os,bt,St,is,gt,It,rs,Ct,Ut,Pt,us,Hs,Tt,Dt,Ot,C,xs,Ht,xt,Bs,Bt,Lt,At,U,Ls,jt,Rt,As,Mt,$t,ie,ks,zt,re,P,Gt,js,Yt,Kt,ue,L,Tn=`<code class="language-svelte">import type <span class="token language-javascript"><span class="token punctuation">&#123;</span> ButtonProps <span class="token punctuation">&#125;</span></span> from '@svelteuidev/core';</code>`,ke,fs,Nt,fe,ds,qt,de,vs,Jt,ve,ms,Wt,me,A,Dn=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Button <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@svelteuidev/core'</span><span class="token punctuation">;</span>

	<span class="token keyword">let</span> clicked <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>clicked <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>
	<span class="token language-javascript"><span class="token punctuation">&#123;</span>clicked <span class="token operator">?</span> <span class="token string">"Don't click me anymore"</span> <span class="token operator">:</span> <span class="token string">'Click me'</span><span class="token punctuation">&#125;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span></code>`,he,_,Xt,Rs,Ft,Qt,Ms,Vt,Zt,ye,hs,sa,Ee,w,ea,j,ta,aa,$s,na,oa,_e,R,On=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Button <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@svelteuidev/core'</span><span class="token punctuation">;</span>
	<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> action1<span class="token punctuation">,</span> action2<span class="token punctuation">,</span> action3 <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./my-library'</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> action1options <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> action3options <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>
	<span class="token attr-name">use=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token punctuation">[</span>action1<span class="token punctuation">,</span> action1options<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>action2<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>action3<span class="token punctuation">,</span> action3options<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span>
	<span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'clicked'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span>
<span class="token punctuation">></span></span>
	Click me!
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span></code>`,we,h,zs,la,pa,Gs,ca,ia,Ys,ra,ua,be,ys,ka,Se,v,fa,Ks,da,va,Ns,ma,ha,qs,ya,Ea,ge,M,Hn=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Button <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@svelteuidev/core'</span><span class="token punctuation">;</span>

	<span class="token keyword">let</span> <span class="token literal-property property">element</span><span class="token operator">:</span> HTMLButtonElement<span class="token punctuation">;</span>

	<span class="token literal-property property">$</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> element <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// interact with DOM nodes programmatically.</span>
	<span class="token punctuation">&#125;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">bind:</span>element</span><span class="token punctuation">></span></span>Button Reference<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span></code>`,Ie,Es,_a,Ce,T,wa,$,ba,Sa,Ue,z,xn=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Button <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@svelteuidev/core'</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>animation-bounce<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>I have a tailwind animation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span></code>`,Pe,G,Te;return G=new Qn({props:{both:!0,slug:{prev:"installation",next:"contributing"},title:{prev:"Installation",next:"Contributing"},group:{prev:"Getting Started",next:"Getting Started"}}}),{c(){q=r(),b=o("p"),Le=a("This guide will help you get familiar with core SvelteUI concepts. Please read this guide and the "),J=o("a"),Ae=a("theming"),je=a(" section before starting development to learn about all available theming features and component behaviors."),Fs=r(),W=o("h2"),Re=a("SvelteUI packages"),Qs=r(),d=o("ul"),X=o("li"),bs=o("code"),Me=a("@svelteuidev/core"),$e=a(" – core components library with 40+ components"),ze=r(),F=o("li"),Ss=o("code"),Ge=a("@svelteuidev/composables"),Ye=a(" – collection of 20+ useful actions and utilities"),Ke=r(),Q=o("li"),gs=o("code"),Ne=a("@svelteui/motion"),qe=a(" - collection of transitions and animations"),Je=r(),y=o("li"),Is=o("code"),We=a("@svelteuidev/prism"),Xe=a(" – "),V=o("a"),Fe=a("code highlight"),Qe=a(" built with "),H=o("a"),Ve=a("PrismJS"),Ze=a("."),Vs=r(),Z=o("h2"),st=a("Dark Theme"),Zs=r(),S=o("p"),et=a("All SvelteUI components support light and dark color themes out of the box. You can edit the details of each color scheme via "),ss=o("a"),tt=a("SvelteUIProvider"),at=a(":"),se=r(),x=o("pre"),ee=r(),g=o("p"),nt=a("To learn how to dynamically change the theme by reading the "),es=o("a"),ot=a("dark theme guide"),lt=a("."),te=r(),ts=o("h2"),pt=a("Server side rendering"),ae=r(),as=o("p"),ct=a("SvelteUI components work in SvelteKit environments without any configuration needed. However, they aren’t SSR compatible by default. To setup SSR, follow the server side rendering guide below. It’s really easy to set up!"),ne=r(),ns=o("ul"),Cs=o("li"),os=o("a"),it=a("Server side rendering with SvelteKit"),oe=r(),ls=o("h2"),rt=a("TypeScript"),le=r(),ps=o("h3"),ut=a("Exported types"),pe=r(),B=o("p"),Us=o("code"),kt=a("@svelteuidev/core"),ft=a(" package export all types to help you build components and styles with TypeScript. Some notable ones are:"),ce=r(),f=o("ul"),I=o("li"),Ps=o("code"),dt=a("ColorScheme"),vt=a(" – union of "),Ts=o("code"),mt=a("'light' | 'dark'"),ht=a("."),yt=r(),cs=o("li"),Ds=o("code"),Et=a("SvelteUIColor"),_t=a(" – union of all default colors."),wt=r(),E=o("li"),Os=o("code"),bt=a("SvelteUIGradient"),St=a(" – gradient interface used in "),is=o("a"),gt=a("Button"),It=a(", "),rs=o("a"),Ct=a("ThemeIcon"),Ut=a(" and other components."),Pt=r(),us=o("li"),Hs=o("code"),Tt=a("SvelteUIShadow"),Dt=a(" – union of all default shadows."),Ot=r(),C=o("li"),xs=o("code"),Ht=a("SvelteUISize"),xt=a(" – union of "),Bs=o("code"),Bt=a("'xs' | 'sm' | 'md' | 'lg' | 'xl'"),Lt=a("."),At=r(),U=o("li"),Ls=o("code"),jt=a("SvelteUINumberSize"),Rt=a(" – union of "),As=o("code"),Mt=a("SvelteUISize | number"),$t=a("."),ie=r(),ks=o("h3"),zt=a("Components props"),re=r(),P=o("p"),Gt=a("You can import the props type of any component by adding "),js=o("code"),Yt=a("Props"),Kt=a(" to the component name:"),ue=r(),L=o("pre"),ke=r(),fs=o("h1"),Nt=a("General concepts"),fe=r(),ds=o("p"),qt=a("Svelte works really well most of the time, however there are some specific component level and library level concepts you must understand before you can get started developing."),de=r(),vs=o("h2"),Jt=a("Event forwarding"),ve=r(),ms=o("p"),Wt=a("This library will forward all events to the underlying elements, so you can add your own event handlers if necessary:"),me=r(),A=o("pre"),he=r(),_=o("p"),Xt=a("Event modifiers can also be used. However, instead of using the standard "),Rs=o("code"),Ft=a("|"),Qt=a(" (pipe operator), they must be separated by a "),Ms=o("code"),Vt=a("!"),Zt=a(" due to those limitations mentioned previously."),ye=r(),hs=o("h2"),sa=a("Svelte Actions"),Ee=r(),w=o("p"),ea=a("Under normal circumstances you wouldn’t be able to use actions on components because of a Svelte limitation. To support forwarding actions to a Component’s top level element, SvelteUI provides a special syntax. If you’re familiar with "),j=o("a"),ta=a("Svelte Headless UI"),aa=a(", this concept should be familiar to you. Components support the "),$s=o("code"),na=a("use"),oa=a(" prop syntax for this purpose:"),_e=r(),R=o("pre"),we=r(),h=o("p"),zs=o("code"),la=a("use"),pa=a(" takes an array of "),Gs=o("code"),ca=a("[action]"),ia=a(" or "),Ys=o("code"),ra=a("[action, options]"),ua=a(" arrays (so nested arrays). These actions will be applied to the underlying element that the component eventually renders."),be=r(),ys=o("h2"),ka=a("Bindings"),Se=r(),v=o("p"),fa=a("All components support binding their top-level element via the "),Ks=o("code"),da=a("element"),va=a(" prop instead of "),Ns=o("code"),ma=a("this"),ha=a(". This allows you to get a reference to a DOM node (as a supplement to "),qs=o("code"),ya=a("bind:this"),Ea=a("):"),ge=r(),M=o("pre"),Ie=r(),Es=o("h2"),_a=a("Classes"),Ce=r(),T=o("p"),wa=a("All components support a class prop which is useful for things like global styling or "),$=o("a"),ba=a("Tailwind"),Sa=a(" classes:"),Ue=r(),z=o("pre"),Pe=r(),Yn(G.$$.fragment),this.h()},l(s){Kn("svelte-mcggb3",document.head).forEach(e),q=u(s),b=l(s,"P",{});var De=p(b);Le=n(De,"This guide will help you get familiar with core SvelteUI concepts. Please read this guide and the "),J=l(De,"A",{href:!0});var Da=p(J);Ae=n(Da,"theming"),Da.forEach(e),je=n(De," section before starting development to learn about all available theming features and component behaviors."),De.forEach(e),Fs=u(s),W=l(s,"H2",{});var Oa=p(W);Re=n(Oa,"SvelteUI packages"),Oa.forEach(e),Qs=u(s),d=l(s,"UL",{});var D=p(d);X=l(D,"LI",{});var ga=p(X);bs=l(ga,"CODE",{});var Ha=p(bs);Me=n(Ha,"@svelteuidev/core"),Ha.forEach(e),$e=n(ga," – core components library with 40+ components"),ga.forEach(e),ze=u(D),F=l(D,"LI",{});var Ia=p(F);Ss=l(Ia,"CODE",{});var xa=p(Ss);Ge=n(xa,"@svelteuidev/composables"),xa.forEach(e),Ye=n(Ia," – collection of 20+ useful actions and utilities"),Ia.forEach(e),Ke=u(D),Q=l(D,"LI",{});var Ca=p(Q);gs=l(Ca,"CODE",{});var Ba=p(gs);Ne=n(Ba,"@svelteui/motion"),Ba.forEach(e),qe=n(Ca," - collection of transitions and animations"),Ca.forEach(e),Je=u(D),y=l(D,"LI",{});var Y=p(y);Is=l(Y,"CODE",{});var La=p(Is);We=n(La,"@svelteuidev/prism"),La.forEach(e),Xe=n(Y," – "),V=l(Y,"A",{href:!0});var Aa=p(V);Fe=n(Aa,"code highlight"),Aa.forEach(e),Qe=n(Y," built with "),H=l(Y,"A",{href:!0,rel:!0});var ja=p(H);Ve=n(ja,"PrismJS"),ja.forEach(e),Ze=n(Y,"."),Y.forEach(e),D.forEach(e),Vs=u(s),Z=l(s,"H2",{});var Ra=p(Z);st=n(Ra,"Dark Theme"),Ra.forEach(e),Zs=u(s),S=l(s,"P",{});var Oe=p(S);et=n(Oe,"All SvelteUI components support light and dark color themes out of the box. You can edit the details of each color scheme via "),ss=l(Oe,"A",{href:!0});var Ma=p(ss);tt=n(Ma,"SvelteUIProvider"),Ma.forEach(e),at=n(Oe,":"),Oe.forEach(e),se=u(s),x=l(s,"PRE",{class:!0});var Bn=p(x);Bn.forEach(e),ee=u(s),g=l(s,"P",{});var He=p(g);nt=n(He,"To learn how to dynamically change the theme by reading the "),es=l(He,"A",{href:!0});var $a=p(es);ot=n($a,"dark theme guide"),$a.forEach(e),lt=n(He,"."),He.forEach(e),te=u(s),ts=l(s,"H2",{});var za=p(ts);pt=n(za,"Server side rendering"),za.forEach(e),ae=u(s),as=l(s,"P",{});var Ga=p(as);ct=n(Ga,"SvelteUI components work in SvelteKit environments without any configuration needed. However, they aren’t SSR compatible by default. To setup SSR, follow the server side rendering guide below. It’s really easy to set up!"),Ga.forEach(e),ne=u(s),ns=l(s,"UL",{});var Ya=p(ns);Cs=l(Ya,"LI",{});var Ka=p(Cs);os=l(Ka,"A",{href:!0});var Na=p(os);it=n(Na,"Server side rendering with SvelteKit"),Na.forEach(e),Ka.forEach(e),Ya.forEach(e),oe=u(s),ls=l(s,"H2",{});var qa=p(ls);rt=n(qa,"TypeScript"),qa.forEach(e),le=u(s),ps=l(s,"H3",{});var Ja=p(ps);ut=n(Ja,"Exported types"),Ja.forEach(e),pe=u(s),B=l(s,"P",{});var Ua=p(B);Us=l(Ua,"CODE",{});var Wa=p(Us);kt=n(Wa,"@svelteuidev/core"),Wa.forEach(e),ft=n(Ua," package export all types to help you build components and styles with TypeScript. Some notable ones are:"),Ua.forEach(e),ce=u(s),f=l(s,"UL",{});var m=p(f);I=l(m,"LI",{});var Js=p(I);Ps=l(Js,"CODE",{});var Xa=p(Ps);dt=n(Xa,"ColorScheme"),Xa.forEach(e),vt=n(Js," – union of "),Ts=l(Js,"CODE",{});var Fa=p(Ts);mt=n(Fa,"'light' | 'dark'"),Fa.forEach(e),ht=n(Js,"."),Js.forEach(e),yt=u(m),cs=l(m,"LI",{});var Pa=p(cs);Ds=l(Pa,"CODE",{});var Qa=p(Ds);Et=n(Qa,"SvelteUIColor"),Qa.forEach(e),_t=n(Pa," – union of all default colors."),Pa.forEach(e),wt=u(m),E=l(m,"LI",{});var K=p(E);Os=l(K,"CODE",{});var Va=p(Os);bt=n(Va,"SvelteUIGradient"),Va.forEach(e),St=n(K," – gradient interface used in "),is=l(K,"A",{href:!0});var Za=p(is);gt=n(Za,"Button"),Za.forEach(e),It=n(K,", "),rs=l(K,"A",{href:!0});var sn=p(rs);Ct=n(sn,"ThemeIcon"),sn.forEach(e),Ut=n(K," and other components."),K.forEach(e),Pt=u(m),us=l(m,"LI",{});var Ta=p(us);Hs=l(Ta,"CODE",{});var en=p(Hs);Tt=n(en,"SvelteUIShadow"),en.forEach(e),Dt=n(Ta," – union of all default shadows."),Ta.forEach(e),Ot=u(m),C=l(m,"LI",{});var Ws=p(C);xs=l(Ws,"CODE",{});var tn=p(xs);Ht=n(tn,"SvelteUISize"),tn.forEach(e),xt=n(Ws," – union of "),Bs=l(Ws,"CODE",{});var an=p(Bs);Bt=n(an,"'xs' | 'sm' | 'md' | 'lg' | 'xl'"),an.forEach(e),Lt=n(Ws,"."),Ws.forEach(e),At=u(m),U=l(m,"LI",{});var Xs=p(U);Ls=l(Xs,"CODE",{});var nn=p(Ls);jt=n(nn,"SvelteUINumberSize"),nn.forEach(e),Rt=n(Xs," – union of "),As=l(Xs,"CODE",{});var on=p(As);Mt=n(on,"SvelteUISize | number"),on.forEach(e),$t=n(Xs,"."),Xs.forEach(e),m.forEach(e),ie=u(s),ks=l(s,"H3",{});var ln=p(ks);zt=n(ln,"Components props"),ln.forEach(e),re=u(s),P=l(s,"P",{});var xe=p(P);Gt=n(xe,"You can import the props type of any component by adding "),js=l(xe,"CODE",{});var pn=p(js);Yt=n(pn,"Props"),pn.forEach(e),Kt=n(xe," to the component name:"),xe.forEach(e),ue=u(s),L=l(s,"PRE",{class:!0});var Ln=p(L);Ln.forEach(e),ke=u(s),fs=l(s,"H1",{});var cn=p(fs);Nt=n(cn,"General concepts"),cn.forEach(e),fe=u(s),ds=l(s,"P",{});var rn=p(ds);qt=n(rn,"Svelte works really well most of the time, however there are some specific component level and library level concepts you must understand before you can get started developing."),rn.forEach(e),de=u(s),vs=l(s,"H2",{});var un=p(vs);Jt=n(un,"Event forwarding"),un.forEach(e),ve=u(s),ms=l(s,"P",{});var kn=p(ms);Wt=n(kn,"This library will forward all events to the underlying elements, so you can add your own event handlers if necessary:"),kn.forEach(e),me=u(s),A=l(s,"PRE",{class:!0});var An=p(A);An.forEach(e),he=u(s),_=l(s,"P",{});var _s=p(_);Xt=n(_s,"Event modifiers can also be used. However, instead of using the standard "),Rs=l(_s,"CODE",{});var fn=p(Rs);Ft=n(fn,"|"),fn.forEach(e),Qt=n(_s," (pipe operator), they must be separated by a "),Ms=l(_s,"CODE",{});var dn=p(Ms);Vt=n(dn,"!"),dn.forEach(e),Zt=n(_s," due to those limitations mentioned previously."),_s.forEach(e),ye=u(s),hs=l(s,"H2",{});var vn=p(hs);sa=n(vn,"Svelte Actions"),vn.forEach(e),Ee=u(s),w=l(s,"P",{});var ws=p(w);ea=n(ws,"Under normal circumstances you wouldn’t be able to use actions on components because of a Svelte limitation. To support forwarding actions to a Component’s top level element, SvelteUI provides a special syntax. If you’re familiar with "),j=l(ws,"A",{href:!0,rel:!0});var mn=p(j);ta=n(mn,"Svelte Headless UI"),mn.forEach(e),aa=n(ws,", this concept should be familiar to you. Components support the "),$s=l(ws,"CODE",{});var hn=p($s);na=n(hn,"use"),hn.forEach(e),oa=n(ws," prop syntax for this purpose:"),ws.forEach(e),_e=u(s),R=l(s,"PRE",{class:!0});var jn=p(R);jn.forEach(e),we=u(s),h=l(s,"P",{});var N=p(h);zs=l(N,"CODE",{});var yn=p(zs);la=n(yn,"use"),yn.forEach(e),pa=n(N," takes an array of "),Gs=l(N,"CODE",{});var En=p(Gs);ca=n(En,"[action]"),En.forEach(e),ia=n(N," or "),Ys=l(N,"CODE",{});var _n=p(Ys);ra=n(_n,"[action, options]"),_n.forEach(e),ua=n(N," arrays (so nested arrays). These actions will be applied to the underlying element that the component eventually renders."),N.forEach(e),be=u(s),ys=l(s,"H2",{});var wn=p(ys);ka=n(wn,"Bindings"),wn.forEach(e),Se=u(s),v=l(s,"P",{});var O=p(v);fa=n(O,"All components support binding their top-level element via the "),Ks=l(O,"CODE",{});var bn=p(Ks);da=n(bn,"element"),bn.forEach(e),va=n(O," prop instead of "),Ns=l(O,"CODE",{});var Sn=p(Ns);ma=n(Sn,"this"),Sn.forEach(e),ha=n(O,". This allows you to get a reference to a DOM node (as a supplement to "),qs=l(O,"CODE",{});var gn=p(qs);ya=n(gn,"bind:this"),gn.forEach(e),Ea=n(O,"):"),O.forEach(e),ge=u(s),M=l(s,"PRE",{class:!0});var Rn=p(M);Rn.forEach(e),Ie=u(s),Es=l(s,"H2",{});var In=p(Es);_a=n(In,"Classes"),In.forEach(e),Ce=u(s),T=l(s,"P",{});var Be=p(T);wa=n(Be,"All components support a class prop which is useful for things like global styling or "),$=l(Be,"A",{href:!0,rel:!0});var Cn=p($);ba=n(Cn,"Tailwind"),Cn.forEach(e),Sa=n(Be," classes:"),Be.forEach(e),Ue=u(s),z=l(s,"PRE",{class:!0});var Mn=p(z);Mn.forEach(e),Pe=u(s),Nn(G.$$.fragment,s),this.h()},h(){document.title="Learn the basics - SvelteUI",k(J,"href","/theming/svelteui-provider"),k(V,"href","/others/prism"),k(H,"href","https://prismjs.com/"),k(H,"rel","nofollow"),k(ss,"href","/theming/svelteui-provider"),k(x,"class","language-svelte"),k(es,"href","/theming/dark-theme"),k(os,"href","/theming/ssr"),k(is,"href","/core/button"),k(rs,"href","/core/theme-icon"),k(L,"class","language-svelte"),k(A,"class","language-svelte"),k(j,"href","https://github.com/rgossiaux/svelte-headlessui"),k(j,"rel","nofollow"),k(R,"class","language-svelte"),k(M,"class","language-svelte"),k($,"href","https://tailwindcss.com/"),k($,"rel","nofollow"),k(z,"class","language-svelte")},m(s,c){i(s,q,c),i(s,b,c),t(b,Le),t(b,J),t(J,Ae),t(b,je),i(s,Fs,c),i(s,W,c),t(W,Re),i(s,Qs,c),i(s,d,c),t(d,X),t(X,bs),t(bs,Me),t(X,$e),t(d,ze),t(d,F),t(F,Ss),t(Ss,Ge),t(F,Ye),t(d,Ke),t(d,Q),t(Q,gs),t(gs,Ne),t(Q,qe),t(d,Je),t(d,y),t(y,Is),t(Is,We),t(y,Xe),t(y,V),t(V,Fe),t(y,Qe),t(y,H),t(H,Ve),t(y,Ze),i(s,Vs,c),i(s,Z,c),t(Z,st),i(s,Zs,c),i(s,S,c),t(S,et),t(S,ss),t(ss,tt),t(S,at),i(s,se,c),i(s,x,c),x.innerHTML=Pn,i(s,ee,c),i(s,g,c),t(g,nt),t(g,es),t(es,ot),t(g,lt),i(s,te,c),i(s,ts,c),t(ts,pt),i(s,ae,c),i(s,as,c),t(as,ct),i(s,ne,c),i(s,ns,c),t(ns,Cs),t(Cs,os),t(os,it),i(s,oe,c),i(s,ls,c),t(ls,rt),i(s,le,c),i(s,ps,c),t(ps,ut),i(s,pe,c),i(s,B,c),t(B,Us),t(Us,kt),t(B,ft),i(s,ce,c),i(s,f,c),t(f,I),t(I,Ps),t(Ps,dt),t(I,vt),t(I,Ts),t(Ts,mt),t(I,ht),t(f,yt),t(f,cs),t(cs,Ds),t(Ds,Et),t(cs,_t),t(f,wt),t(f,E),t(E,Os),t(Os,bt),t(E,St),t(E,is),t(is,gt),t(E,It),t(E,rs),t(rs,Ct),t(E,Ut),t(f,Pt),t(f,us),t(us,Hs),t(Hs,Tt),t(us,Dt),t(f,Ot),t(f,C),t(C,xs),t(xs,Ht),t(C,xt),t(C,Bs),t(Bs,Bt),t(C,Lt),t(f,At),t(f,U),t(U,Ls),t(Ls,jt),t(U,Rt),t(U,As),t(As,Mt),t(U,$t),i(s,ie,c),i(s,ks,c),t(ks,zt),i(s,re,c),i(s,P,c),t(P,Gt),t(P,js),t(js,Yt),t(P,Kt),i(s,ue,c),i(s,L,c),L.innerHTML=Tn,i(s,ke,c),i(s,fs,c),t(fs,Nt),i(s,fe,c),i(s,ds,c),t(ds,qt),i(s,de,c),i(s,vs,c),t(vs,Jt),i(s,ve,c),i(s,ms,c),t(ms,Wt),i(s,me,c),i(s,A,c),A.innerHTML=Dn,i(s,he,c),i(s,_,c),t(_,Xt),t(_,Rs),t(Rs,Ft),t(_,Qt),t(_,Ms),t(Ms,Vt),t(_,Zt),i(s,ye,c),i(s,hs,c),t(hs,sa),i(s,Ee,c),i(s,w,c),t(w,ea),t(w,j),t(j,ta),t(w,aa),t(w,$s),t($s,na),t(w,oa),i(s,_e,c),i(s,R,c),R.innerHTML=On,i(s,we,c),i(s,h,c),t(h,zs),t(zs,la),t(h,pa),t(h,Gs),t(Gs,ca),t(h,ia),t(h,Ys),t(Ys,ra),t(h,ua),i(s,be,c),i(s,ys,c),t(ys,ka),i(s,Se,c),i(s,v,c),t(v,fa),t(v,Ks),t(Ks,da),t(v,va),t(v,Ns),t(Ns,ma),t(v,ha),t(v,qs),t(qs,ya),t(v,Ea),i(s,ge,c),i(s,M,c),M.innerHTML=Hn,i(s,Ie,c),i(s,Es,c),t(Es,_a),i(s,Ce,c),i(s,T,c),t(T,wa),t(T,$),t($,ba),t(T,Sa),i(s,Ue,c),i(s,z,c),z.innerHTML=xn,i(s,Pe,c),qn(G,s,c),Te=!0},p:Jn,i(s){Te||(Wn(G.$$.fragment,s),Te=!0)},o(s){Xn(G.$$.fragment,s),Te=!1},d(s){s&&e(q),s&&e(b),s&&e(Fs),s&&e(W),s&&e(Qs),s&&e(d),s&&e(Vs),s&&e(Z),s&&e(Zs),s&&e(S),s&&e(se),s&&e(x),s&&e(ee),s&&e(g),s&&e(te),s&&e(ts),s&&e(ae),s&&e(as),s&&e(ne),s&&e(ns),s&&e(oe),s&&e(ls),s&&e(le),s&&e(ps),s&&e(pe),s&&e(B),s&&e(ce),s&&e(f),s&&e(ie),s&&e(ks),s&&e(re),s&&e(P),s&&e(ue),s&&e(L),s&&e(ke),s&&e(fs),s&&e(fe),s&&e(ds),s&&e(de),s&&e(vs),s&&e(ve),s&&e(ms),s&&e(me),s&&e(A),s&&e(he),s&&e(_),s&&e(ye),s&&e(hs),s&&e(Ee),s&&e(w),s&&e(_e),s&&e(R),s&&e(we),s&&e(h),s&&e(be),s&&e(ys),s&&e(Se),s&&e(v),s&&e(ge),s&&e(M),s&&e(Ie),s&&e(Es),s&&e(Ce),s&&e(T),s&&e(Ue),s&&e(z),s&&e(Pe),Fn(G,s)}}}const to={title:"Learn the basics"};class ao extends $n{constructor(q){super(),zn(this,q,null,Vn,Gn,{})}}export{ao as default,to as metadata};
