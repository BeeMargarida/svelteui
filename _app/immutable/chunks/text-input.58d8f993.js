import{S as M,i as L,s as W,D as Ee,y as i,z as c,A as f,J as Se,a6 as Ye,g as $,d as m,B as d,a as g,c as v,b as u,X as R,h as r,k as b,q as y,l as x,m as k,r as I,n as ke,W as T}from"./index.b4f0bbdc.js";import{D as B}from"./Demo.9cccb4ab.js";import{T as z}from"./TextInput.1349bcfb.js";import{C as le}from"./Center.c93e1a75.js";import{S as Te}from"./Stack.545b11b0.js";import{E as Ve}from"./EnvelopeClosed.ea600c81.js";import{L as je}from"./Loader.8c55b2d7.js";function ze(p){let t,s;const e=[p[0]];let l={};for(let a=0;a<e.length;a+=1)l=Ee(l,e[a]);return t=new z({props:l}),{c(){i(t.$$.fragment)},l(a){c(t.$$.fragment,a)},m(a,_){f(t,a,_),s=!0},p(a,[_]){const q=_&1?Se(e,[Ye(a[0])]):{};t.$set(q)},i(a){s||($(t.$$.fragment,a),s=!0)},o(a){m(t.$$.fragment,a),s=!1},d(a){d(t,a)}}}const Oe=p=>`
<script>
  import { TextInput } from '@svelteuidev/core';
<\/script>

<TextInput${p}/>
`,De="configurator",Pe={codeTemplate:Oe,configurator:[{name:"placeholder",type:"string",initialValue:"Your name"},{name:"label",type:"string",initialValue:"Full name"},{name:"description",type:"string"},{name:"error",type:"string"},{name:"variant",type:"select",data:[{label:"default",value:"default"},{label:"filled",value:"filled"},{label:"unstyled",value:"unstyled"},{label:"headless",value:"headless"}],initialValue:"default",defaultValue:"default"},{name:"radius",type:"size",initialValue:"sm",defaultValue:"sm"},{name:"size",type:"size",initialValue:"sm",defaultValue:"sm"},{name:"disabled",type:"boolean",initialValue:!1,defaultValue:!1},{name:"required",type:"boolean",initialValue:!0,defaultValue:!0},{name:"invalid",type:"boolean",initialValue:!1,defaultValue:!1}],multiline:!0};function He(p,t,s){let{props:e={}}=t;return p.$$set=l=>{"props"in l&&s(0,e=l.props)},[e]}class Ce extends M{constructor(t){super(),L(this,t,He,ze,W,{props:0})}}const Me=Object.freeze(Object.defineProperty({__proto__:null,configuration:Pe,default:Ce,type:De},Symbol.toStringTag,{value:"Module"}));function Le(p){let t,s,e,l;return t=new z({props:{error:!0,label:"Your email",value:"you@email.com"}}),e=new z({props:{error:"Invalid email",label:"Your email",value:"you@email.com"}}),{c(){i(t.$$.fragment),s=g(),i(e.$$.fragment)},l(a){c(t.$$.fragment,a),s=v(a),c(e.$$.fragment,a)},m(a,_){f(t,a,_),u(a,s,_),f(e,a,_),l=!0},p:R,i(a){l||($(t.$$.fragment,a),$(e.$$.fragment,a),l=!0)},o(a){m(t.$$.fragment,a),m(e.$$.fragment,a),l=!1},d(a){d(t,a),a&&r(s),d(e,a)}}}function We(p){let t,s;return t=new Te({props:{position:"center",$$slots:{default:[Le]},$$scope:{ctx:p}}}),{c(){i(t.$$.fragment)},l(e){c(t.$$.fragment,e)},m(e,l){f(t,e,l),s=!0},p(e,l){const a={};l&1&&(a.$$scope={dirty:l,ctx:e}),t.$set(a)},i(e){s||($(t.$$.fragment,e),s=!0)},o(e){m(t.$$.fragment,e),s=!1},d(e){d(t,e)}}}function qe(p){let t,s;return t=new le({props:{$$slots:{default:[We]},$$scope:{ctx:p}}}),{c(){i(t.$$.fragment)},l(e){c(t.$$.fragment,e)},m(e,l){f(t,e,l),s=!0},p(e,[l]){const a={};l&1&&(a.$$scope={dirty:l,ctx:e}),t.$set(a)},i(e){s||($(t.$$.fragment,e),s=!0)},o(e){m(t.$$.fragment,e),s=!1},d(e){d(t,e)}}}const Ae=`
<script>
    import { TextInput } from '@svelteuidev/core';
<\/script>

<TextInput error label='Your email' value='you@email.com' />
<TextInput error='Invalid email' label='Your email' value='you@email.com' />
`,Be="demo",Re={code:Ae};class Ue extends M{constructor(t){super(),L(this,t,null,qe,W,{})}}const Fe=Object.freeze(Object.defineProperty({__proto__:null,configuration:Re,default:Ue,type:Be},Symbol.toStringTag,{value:"Module"}));function Ge(p){let t,s,e,l;return t=new z({props:{disabled:!0,label:"Disabled without value",placeholder:"Your email"}}),e=new z({props:{disabled:!0,label:"Disabled with value",value:"you@email.com"}}),{c(){i(t.$$.fragment),s=g(),i(e.$$.fragment)},l(a){c(t.$$.fragment,a),s=v(a),c(e.$$.fragment,a)},m(a,_){f(t,a,_),u(a,s,_),f(e,a,_),l=!0},p:R,i(a){l||($(t.$$.fragment,a),$(e.$$.fragment,a),l=!0)},o(a){m(t.$$.fragment,a),m(e.$$.fragment,a),l=!1},d(a){d(t,a),a&&r(s),d(e,a)}}}function Je(p){let t,s;return t=new Te({props:{position:"center",$$slots:{default:[Ge]},$$scope:{ctx:p}}}),{c(){i(t.$$.fragment)},l(e){c(t.$$.fragment,e)},m(e,l){f(t,e,l),s=!0},p(e,l){const a={};l&1&&(a.$$scope={dirty:l,ctx:e}),t.$set(a)},i(e){s||($(t.$$.fragment,e),s=!0)},o(e){m(t.$$.fragment,e),s=!1},d(e){d(t,e)}}}function Xe(p){let t,s;return t=new le({props:{$$slots:{default:[Je]},$$scope:{ctx:p}}}),{c(){i(t.$$.fragment)},l(e){c(t.$$.fragment,e)},m(e,l){f(t,e,l),s=!0},p(e,[l]){const a={};l&1&&(a.$$scope={dirty:l,ctx:e}),t.$set(a)},i(e){s||($(t.$$.fragment,e),s=!0)},o(e){m(t.$$.fragment,e),s=!1},d(e){d(t,e)}}}const Ke=`
<script>
    import { TextInput } from '@svelteuidev/core';
<\/script>

<TextInput disabled label='Disabled without value' placeholder='Your email' />
<TextInput disabled label='Disabled with value' value='you@email.com' />
`,Ne="demo",Qe={code:Ke};class Ze extends M{constructor(t){super(),L(this,t,null,Xe,W,{})}}const et=Object.freeze(Object.defineProperty({__proto__:null,configuration:Qe,default:Ze,type:Ne},Symbol.toStringTag,{value:"Module"}));function tt(p){let t,s;return t=new z({props:{label:"Your email",placeholder:"Your email",icon:Ve}}),{c(){i(t.$$.fragment)},l(e){c(t.$$.fragment,e)},m(e,l){f(t,e,l),s=!0},p:R,i(e){s||($(t.$$.fragment,e),s=!0)},o(e){m(t.$$.fragment,e),s=!1},d(e){d(t,e)}}}function nt(p){let t,s;return t=new le({props:{$$slots:{default:[tt]},$$scope:{ctx:p}}}),{c(){i(t.$$.fragment)},l(e){c(t.$$.fragment,e)},m(e,l){f(t,e,l),s=!0},p(e,[l]){const a={};l&1&&(a.$$scope={dirty:l,ctx:e}),t.$set(a)},i(e){s||($(t.$$.fragment,e),s=!0)},o(e){m(t.$$.fragment,e),s=!1},d(e){d(t,e)}}}const at=`
<script>
    import { TextInput } from '@svelteuidev/core';
    import { EnvelopeClosed } from 'radix-icons-svelte';
<\/script>

<TextInput
    label='Your email'
    placeholder='Your email'
    icon={EnvelopeClosed}
/>
`,st="demo",lt={code:at};class rt extends M{constructor(t){super(),L(this,t,null,nt,W,{})}}const ot=Object.freeze(Object.defineProperty({__proto__:null,configuration:lt,default:rt,type:st},Symbol.toStringTag,{value:"Module"}));function pt(p){let t,s;return t=new je({props:{color:"blue",size:"xs"}}),{c(){i(t.$$.fragment)},l(e){c(t.$$.fragment,e)},m(e,l){f(t,e,l),s=!0},p:R,i(e){s||($(t.$$.fragment,e),s=!0)},o(e){m(t.$$.fragment,e),s=!1},d(e){d(t,e)}}}function ut(p){let t,s;return t=new z({props:{label:"Your email",placeholder:"Your email",$$slots:{rightSection:[pt]},$$scope:{ctx:p}}}),{c(){i(t.$$.fragment)},l(e){c(t.$$.fragment,e)},m(e,l){f(t,e,l),s=!0},p(e,l){const a={};l&1&&(a.$$scope={dirty:l,ctx:e}),t.$set(a)},i(e){s||($(t.$$.fragment,e),s=!0)},o(e){m(t.$$.fragment,e),s=!1},d(e){d(t,e)}}}function it(p){let t,s;return t=new le({props:{$$slots:{default:[ut]},$$scope:{ctx:p}}}),{c(){i(t.$$.fragment)},l(e){c(t.$$.fragment,e)},m(e,l){f(t,e,l),s=!0},p(e,[l]){const a={};l&1&&(a.$$scope={dirty:l,ctx:e}),t.$set(a)},i(e){s||($(t.$$.fragment,e),s=!0)},o(e){m(t.$$.fragment,e),s=!1},d(e){d(t,e)}}}const ct=`
<script>
    import { Loader, TextInput } from '@svelteuidev/core';
<\/script>

<TextInput
    label='Your email'
    placeholder='Your email'
>
    <svelte:fragment slot='rightSection'>
        <Loader color='blue' size='xs' />
    </svelte:fragment>
</TextInput>
`,ft="demo",$t={code:ct};class mt extends M{constructor(t){super(),L(this,t,null,it,W,{})}}const dt=Object.freeze(Object.defineProperty({__proto__:null,configuration:$t,default:mt,type:ft},Symbol.toStringTag,{value:"Module"}));function _t(p){let t,s,e,l,a,_,q,U,h,ye=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> TextInput <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@svelteuidev/core'</span><span class="token punctuation">;</span>

	<span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextInput</span> <span class="token attr-name"><span class="token namespace">bind:</span>value</span> <span class="token punctuation">/></span></span></code>`,F,O,re,G,E,J,D,oe,X,S,K,P,pe,N,Y,Q,H,ue,Z,V,ee,C,ie,te,w,ce,A,fe,$e,ne,j,Ie=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextInput</span> <span class="token punctuation">/></span></span> // -> not ok, input is not labeled
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextInput</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Your age<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span> // -> ok, input and label are connected
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextInput</span> <span class="token attr-name">aria-label</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Your age<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span> // -> ok, label is not visible but will be announced by screen reader</code>`,ae;return l=new B({props:{demo:Me}}),E=new B({props:{demo:Fe}}),S=new B({props:{demo:et}}),Y=new B({props:{demo:ot}}),V=new B({props:{demo:dt}}),{c(){t=b("h2"),s=y("Usage"),e=g(),i(l.$$.fragment),a=g(),_=b("h2"),q=y("Bindings"),U=g(),h=b("pre"),F=g(),O=b("h2"),re=y("Invalid state and error"),G=g(),i(E.$$.fragment),J=g(),D=b("h2"),oe=y("Disabled state"),X=g(),i(S.$$.fragment),K=g(),P=b("h2"),pe=y("With icon"),N=g(),i(Y.$$.fragment),Q=g(),H=b("h2"),ue=y("With right section"),Z=g(),i(V.$$.fragment),ee=g(),C=b("h2"),ie=y("Accessibility"),te=g(),w=b("p"),ce=y("Provide "),A=b("code"),fe=y("aria-label"),$e=y(" in case you use component without label for screen reader support:"),ne=g(),j=b("pre"),this.h()},l(n){t=x(n,"H2",{});var o=k(t);s=I(o,"Usage"),o.forEach(r),e=v(n),c(l.$$.fragment,n),a=v(n),_=x(n,"H2",{});var me=k(_);q=I(me,"Bindings"),me.forEach(r),U=v(n),h=x(n,"PRE",{class:!0});var we=k(h);we.forEach(r),F=v(n),O=x(n,"H2",{});var de=k(O);re=I(de,"Invalid state and error"),de.forEach(r),G=v(n),c(E.$$.fragment,n),J=v(n),D=x(n,"H2",{});var _e=k(D);oe=I(_e,"Disabled state"),_e.forEach(r),X=v(n),c(S.$$.fragment,n),K=v(n),P=x(n,"H2",{});var ge=k(P);pe=I(ge,"With icon"),ge.forEach(r),N=v(n),c(Y.$$.fragment,n),Q=v(n),H=x(n,"H2",{});var ve=k(H);ue=I(ve,"With right section"),ve.forEach(r),Z=v(n),c(V.$$.fragment,n),ee=v(n),C=x(n,"H2",{});var be=k(C);ie=I(be,"Accessibility"),be.forEach(r),te=v(n),w=x(n,"P",{});var se=k(w);ce=I(se,"Provide "),A=x(se,"CODE",{});var xe=k(A);fe=I(xe,"aria-label"),xe.forEach(r),$e=I(se," in case you use component without label for screen reader support:"),se.forEach(r),ne=v(n),j=x(n,"PRE",{class:!0});var he=k(j);he.forEach(r),this.h()},h(){ke(h,"class","language-svelte"),ke(j,"class","language-svelte")},m(n,o){u(n,t,o),T(t,s),u(n,e,o),f(l,n,o),u(n,a,o),u(n,_,o),T(_,q),u(n,U,o),u(n,h,o),h.innerHTML=ye,u(n,F,o),u(n,O,o),T(O,re),u(n,G,o),f(E,n,o),u(n,J,o),u(n,D,o),T(D,oe),u(n,X,o),f(S,n,o),u(n,K,o),u(n,P,o),T(P,pe),u(n,N,o),f(Y,n,o),u(n,Q,o),u(n,H,o),T(H,ue),u(n,Z,o),f(V,n,o),u(n,ee,o),u(n,C,o),T(C,ie),u(n,te,o),u(n,w,o),T(w,ce),T(w,A),T(A,fe),T(w,$e),u(n,ne,o),u(n,j,o),j.innerHTML=Ie,ae=!0},p:R,i(n){ae||($(l.$$.fragment,n),$(E.$$.fragment,n),$(S.$$.fragment,n),$(Y.$$.fragment,n),$(V.$$.fragment,n),ae=!0)},o(n){m(l.$$.fragment,n),m(E.$$.fragment,n),m(S.$$.fragment,n),m(Y.$$.fragment,n),m(V.$$.fragment,n),ae=!1},d(n){n&&r(t),n&&r(e),d(l,n),n&&r(a),n&&r(_),n&&r(U),n&&r(h),n&&r(F),n&&r(O),n&&r(G),d(E,n),n&&r(J),n&&r(D),n&&r(X),d(S,n),n&&r(K),n&&r(P),n&&r(N),d(Y,n),n&&r(Q),n&&r(H),n&&r(Z),d(V,n),n&&r(ee),n&&r(C),n&&r(te),n&&r(w),n&&r(ne),n&&r(j)}}}const It={title:"TextInput",group:"svelteuidev-core",packageGroup:"@svelteuidev/core",slug:"/core/text-input/",category:"inputs",description:"Text input with descriptions",importCode:"import { TextInput } from '@svelteuidev/core';",source:"svelteui-core/src/components/TextInput/TextInput.svelte",docs:"core/text-input.md"};class wt extends M{constructor(t){super(),L(this,t,null,_t,W,{})}}export{wt as default,It as metadata};
