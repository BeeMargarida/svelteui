import{S as K,i as L,s as N,y as k,z as I,A as O,g as S,d as A,B as j,q as i,r as u,b as f,h as a,a as C,c as E,k as x,l as g,m as v,n as te,W as p,X as oe}from"./index.b4f0bbdc.js";import{D as ee}from"./Demo.9cccb4ab.js";import{B as J}from"./Box.195443f6.js";import{G as re}from"./Group.db734d69.js";import{C as se}from"./Code.676a8d72.js";function ne(m){let e;return{c(){e=i("Box lets you add inline styles with the css prop")},l(r){e=u(r,"Box lets you add inline styles with the css prop")},m(r,t){f(r,e,t)},d(r){r&&a(e)}}}function ae(m){let e,r;return e=new J({props:{css:{backgroundColor:"$gray50",textAlign:"center",padding:"$20",borderRadius:"$md",cursor:"pointer","&:hover":{backgroundColor:"$gray100"}},$$slots:{default:[ne]},$$scope:{ctx:m}}}),{c(){k(e.$$.fragment)},l(t){I(e.$$.fragment,t)},m(t,n){O(e,t,n),r=!0},p(t,[n]){const s={};n&1&&(s.$$scope={dirty:n,ctx:t}),e.$set(s)},i(t){r||(S(e.$$.fragment,t),r=!0)},o(t){A(e.$$.fragment,t),r=!1},d(t){j(e,t)}}}const le=`
<script>
	import { Box } from '@svelteuidev/core';
<\/script>

<Box
    css={{
        backgroundColor: '$gray50',
        textAlign: 'center',
        padding: '$20',
        borderRadius: '$md',
        cursor: 'pointer',

        '&:hover': {
            backgroundColor: '$gray100',
        },
    }}
>
    Box lets you add inline styles with the css prop
</Box>`,ce="demo",me={code:le};class pe extends K{constructor(e){super(),L(this,e,null,ae,N,{})}}const ie=Object.freeze(Object.defineProperty({__proto__:null,configuration:me,default:pe,type:ce},Symbol.toStringTag,{value:"Module"}));function ue(m){let e;return{c(){e=i("I am a code component now")},l(r){e=u(r,"I am a code component now")},m(r,t){f(r,e,t)},d(r){r&&a(e)}}}function fe(m){let e;return{c(){e=i("I am a span tag")},l(r){e=u(r,"I am a span tag")},m(r,t){f(r,e,t)},d(r){r&&a(e)}}}function $e(m){let e,r,t,n;return e=new J({props:{root:se,$$slots:{default:[ue]},$$scope:{ctx:m}}}),t=new J({props:{root:"span",$$slots:{default:[fe]},$$scope:{ctx:m}}}),{c(){k(e.$$.fragment),r=C(),k(t.$$.fragment)},l(s){I(e.$$.fragment,s),r=E(s),I(t.$$.fragment,s)},m(s,l){O(e,s,l),f(s,r,l),O(t,s,l),n=!0},p(s,l){const B={};l&1&&(B.$$scope={dirty:l,ctx:s}),e.$set(B);const y={};l&1&&(y.$$scope={dirty:l,ctx:s}),t.$set(y)},i(s){n||(S(e.$$.fragment,s),S(t.$$.fragment,s),n=!0)},o(s){A(e.$$.fragment,s),A(t.$$.fragment,s),n=!1},d(s){j(e,s),s&&a(r),j(t,s)}}}function de(m){let e,r;return e=new re({props:{position:"center",$$slots:{default:[$e]},$$scope:{ctx:m}}}),{c(){k(e.$$.fragment)},l(t){I(e.$$.fragment,t)},m(t,n){O(e,t,n),r=!0},p(t,[n]){const s={};n&1&&(s.$$scope={dirty:n,ctx:t}),e.$set(s)},i(t){r||(S(e.$$.fragment,t),r=!0)},o(t){A(e.$$.fragment,t),r=!1},d(t){j(e,t)}}}const _e=`
<script>
	import { Box, Code } from '@svelteuidev/core';
<\/script>

<Box root={Code}>I am a code component now</Box>
<Box root='span'>I am a span tag</Box>`,xe="demo",ge={code:_e};class ve extends K{constructor(e){super(),L(this,e,null,de,N,{})}}const Be=Object.freeze(Object.defineProperty({__proto__:null,configuration:ge,default:ve,type:xe},Symbol.toStringTag,{value:"Module"}));function ye(m){let e,r,t,n,s,l,B,y,h,M,R,P,d,T,b,U,z,$,W,D,X,F,G,_,q;return d=new ee({props:{demo:ie}}),_=new ee({props:{demo:Be}}),{c(){e=x("h2"),r=i("Usage"),t=C(),n=x("p"),s=i("Box allows you to use the "),l=x("code"),B=i("css"),y=i(" prop ("),h=x("a"),M=i("like override"),R=i(") with any element or component. Box itself does not include any styles."),P=C(),k(d.$$.fragment),T=C(),b=x("h2"),U=i("Custom component"),z=C(),$=x("p"),W=i("To use Box with custom component or element set "),D=x("code"),X=i("root"),F=i(" prop to tag name or a svelte component:"),G=C(),k(_.$$.fragment),this.h()},l(o){e=g(o,"H2",{});var c=v(e);r=u(c,"Usage"),c.forEach(a),t=E(o),n=g(o,"P",{});var w=v(n);s=u(w,"Box allows you to use the "),l=g(w,"CODE",{});var Q=v(l);B=u(Q,"css"),Q.forEach(a),y=u(w," prop ("),h=g(w,"A",{href:!0});var V=v(h);M=u(V,"like override"),V.forEach(a),R=u(w,") with any element or component. Box itself does not include any styles."),w.forEach(a),P=E(o),I(d.$$.fragment,o),T=E(o),b=g(o,"H2",{});var Y=v(b);U=u(Y,"Custom component"),Y.forEach(a),z=E(o),$=g(o,"P",{});var H=v($);W=u(H,"To use Box with custom component or element set "),D=g(H,"CODE",{});var Z=v(D);X=u(Z,"root"),Z.forEach(a),F=u(H," prop to tag name or a svelte component:"),H.forEach(a),G=E(o),I(_.$$.fragment,o),this.h()},h(){te(h,"href","/theming/override")},m(o,c){f(o,e,c),p(e,r),f(o,t,c),f(o,n,c),p(n,s),p(n,l),p(l,B),p(n,y),p(n,h),p(h,M),p(n,R),f(o,P,c),O(d,o,c),f(o,T,c),f(o,b,c),p(b,U),f(o,z,c),f(o,$,c),p($,W),p($,D),p(D,X),p($,F),f(o,G,c),O(_,o,c),q=!0},p:oe,i(o){q||(S(d.$$.fragment,o),S(_.$$.fragment,o),q=!0)},o(o){A(d.$$.fragment,o),A(_.$$.fragment,o),q=!1},d(o){o&&a(e),o&&a(t),o&&a(n),o&&a(P),j(d,o),o&&a(T),o&&a(b),o&&a(z),o&&a($),o&&a(G),j(_,o)}}}const ke={title:"Box",group:"svelteuidev-core",packageGroup:"@svelteuidev/core",slug:"/core/box/",category:"misc",description:"Add inline styles to any element or component with css prop",importCode:"import { Box } from '@svelteuidev/core';",source:"svelteui-core/src/components/Box/Box.svelte",docs:"core/box.md"};class Ie extends K{constructor(e){super(),L(this,e,null,ye,N,{})}}export{Ie as default,ke as metadata};
