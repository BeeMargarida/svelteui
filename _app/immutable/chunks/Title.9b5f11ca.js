import{S as H,i as T,s as k,H as c,w as N,a5 as j,y as q,z as A,A as B,N as C,a7 as G,a6 as K,g as z,d as p,B as L,O as h,T as M,G as O,K as P,L as D,M as E}from"./index.b0fe5a0f.js";import{f as F,T as I}from"./navigation.de1d24b4.js";const S={1:{fontSize:34,lineHeight:1.3},2:{fontSize:26,lineHeight:1.35},3:{fontSize:22,lineHeight:1.4},4:{fontSize:18,lineHeight:1.45},5:{fontSize:16,lineHeight:1.5},6:{fontSize:14,lineHeight:1.5}},J=F(()=>({root:{margin:0}}));function Q(o){let t;const l=o[8].default,s=O(l,o,o[10],null);return{c(){s&&s.c()},l(n){s&&s.l(n)},m(n,r){s&&s.m(n,r),t=!0},p(n,r){s&&s.p&&(!t||r&1024)&&P(s,l,n,n[10],t?E(l,n[10],r,null):D(n[10]),null)},i(n){t||(z(s,n),t=!0)},o(n){p(s,n),t=!1},d(n){s&&s.d(n)}}}function R(o){let t,l,s;const n=[{class:o[5](o[1],o[4].root)},{root:o[3]},{size:S[o[2]].fontSize},o[6]];function r(e){o[9](e)}let u={$$slots:{default:[Q]},$$scope:{ctx:o}};for(let e=0;e<n.length;e+=1)u=c(u,n[e]);return o[0]!==void 0&&(u.element=o[0]),t=new I({props:u}),N.push(()=>j(t,"element",r)),{c(){q(t.$$.fragment)},l(e){A(t.$$.fragment,e)},m(e,i){B(t,e,i),s=!0},p(e,[i]){const f=i&126?C(n,[i&50&&{class:e[5](e[1],e[4].root)},i&8&&{root:e[3]},i&4&&{size:S[e[2]].fontSize},i&64&&G(e[6])]):{};i&1024&&(f.$$scope={dirty:i,ctx:e}),!l&&i&1&&(l=!0,f.element=e[0],K(()=>l=!1)),t.$set(f)},i(e){s||(z(t.$$.fragment,e),s=!0)},o(e){p(t.$$.fragment,e),s=!1},d(e){L(t,e)}}}function U(o,t,l){let s,n;const r=["element","class","override","order"];let u=h(t,r),{$$slots:e={},$$scope:i}=t,{element:f=void 0,class:g="",override:_={},order:m=1}=t,d;function b(a){f=a,l(0,f)}return o.$$set=a=>{t=c(c({},t),M(a)),l(6,u=h(t,r)),"element"in a&&l(0,f=a.element),"class"in a&&l(1,g=a.class),"override"in a&&l(7,_=a.override),"order"in a&&l(2,m=a.order),"$$scope"in a&&l(10,i=a.$$scope)},o.$$.update=()=>{o.$$.dirty&4&&l(3,d=`h${m}`),o.$$.dirty&128&&l(5,{cx:s,classes:n}=J(null,{override:_,name:"Title"}),s,(l(4,n),l(7,_)))},[f,g,m,d,n,s,u,_,e,b,i]}class V extends H{constructor(t){super(),T(this,t,U,R,k,{element:0,class:1,override:7,order:2})}}const Y=V;export{Y as T};
