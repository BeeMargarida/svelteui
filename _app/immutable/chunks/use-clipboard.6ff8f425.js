import{S as wt,i as Ct,s as Dt,y as rt,z as lt,A as ct,g as it,d as ut,B as ft,q as f,r as d,b as l,u as Bt,h as s,k as c,a as m,l as i,m as u,c as k,n as xt,W as n,X as Mt}from"./index.b4f0bbdc.js";import{D as Ot}from"./Demo.9cccb4ab.js";import{C as Rt}from"./Center.c93e1a75.js";import{B as At}from"./Button.b50e74fc.js";import{c as Lt}from"./use-clipboard.e2ea98fc.js";function St(b){let a=b[0]?"Copied":"Click me to copy text",p;return{c(){p=f(a)},l(e){p=d(e,a)},m(e,o){l(e,p,o)},p(e,o){o&1&&a!==(a=e[0]?"Copied":"Click me to copy text")&&Bt(p,a)},d(e){e&&s(p)}}}function Ut(b){let a,p;return a=new At({props:{use:[[Lt,Xt]],color:b[0]?"green":"blue",$$slots:{default:[St]},$$scope:{ctx:b}}}),a.$on("useclipboard",b[1]),{c(){rt(a.$$.fragment)},l(e){lt(a.$$.fragment,e)},m(e,o){ct(a,e,o),p=!0},p(e,o){const _={};o&1&&(_.color=e[0]?"green":"blue"),o&5&&(_.$$scope={dirty:o,ctx:e}),a.$set(_)},i(e){p||(it(a.$$.fragment,e),p=!0)},o(e){ut(a.$$.fragment,e),p=!1},d(e){ft(a,e)}}}function Wt(b){let a,p;return a=new Rt({props:{$$slots:{default:[Ut]},$$scope:{ctx:b}}}),{c(){rt(a.$$.fragment)},l(e){lt(a.$$.fragment,e)},m(e,o){ct(a,e,o),p=!0},p(e,[o]){const _={};o&5&&(_.$$scope={dirty:o,ctx:e}),a.$set(_)},i(e){p||(it(a.$$.fragment,e),p=!0)},o(e){ut(a.$$.fragment,e),p=!1},d(e){ft(a,e)}}}const qt=`
<script>
    import { Button } from '@svelteuidev/core';
	import { clipboard } from '@svelteuidev/composables';

    let textToCopy = 'This message was copied';
    let copied = false;
    let onCopy = () => {
        copied = true;
        setTimeout(function () {
            copied = false;
        }, 1000);
    }
<\/script>

<Button
    use={[[clipboard, textToCopy]]}
    on:useclipboard={onCopy}
    color={copied ? 'green' : 'blue'}
>
    {copied ? 'copied' : 'Click me to copy text'}
</Button>`,zt="demo",Gt={code:qt};let Xt="This message was copied";function Yt(b,a,p){let e=!1;return[e,()=>{p(0,e=!0),setTimeout(function(){p(0,e=!1)},1e3)}]}class Ft extends wt{constructor(a){super(),Ct(this,a,Yt,Wt,Dt,{})}}const It=Object.freeze(Object.defineProperty({__proto__:null,configuration:Gt,default:Ft,type:zt},Symbol.toStringTag,{value:"Module"}));function Jt(b){let a,p,e,o,_,g,J,K,R,v,A,x,N,L,h,H,$,P,Q,V,j,Z,tt,B,y,M,et,st,O,at,S,w,ot,U,C,nt,W,E,gt=`<code class="language-js"><span class="token literal-property property">on</span><span class="token operator">:</span>useclipboard<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">any</span><span class="token punctuation">)</span> <span class="token operator">=></span> unknown<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token literal-property property">on</span><span class="token operator">:</span>useclipboard<span class="token operator">-</span>error<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">any</span><span class="token punctuation">)</span> <span class="token operator">=></span> unknown<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span></code>`,q,D,pt,z,T,Ht='<code class="language-js"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">clipboard</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">node</span><span class="token operator">:</span> HTMLElement<span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> string <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> string</span><span class="token punctuation">)</span><span class="token operator">:</span> ReturnType<span class="token operator">&lt;</span>Action<span class="token operator">></span><span class="token punctuation">;</span></code>',G;return v=new Ot({props:{demo:It}}),{c(){a=c("h2"),p=f("Usage"),e=m(),o=c("p"),_=f("With the "),g=c("code"),J=f("use-clipboard"),K=f(" action, text passed into the text param will be copied to the users clipboard."),R=m(),rt(v.$$.fragment),A=m(),x=c("h2"),N=f("Params"),L=m(),h=c("table"),H=c("thead"),$=c("tr"),P=c("th"),Q=f("Param"),V=m(),j=c("th"),Z=f("Description"),tt=m(),B=c("tbody"),y=c("tr"),M=c("td"),et=f("text"),st=m(),O=c("td"),at=f("The text (or function that returns text) that will be copied when the action is triggered"),S=m(),w=c("h2"),ot=f("Events"),U=m(),C=c("p"),nt=f("The use-clipboard action dispatches custom events. Each custom event takes a callback function just like other events."),W=m(),E=c("pre"),q=m(),D=c("h2"),pt=f("Definition"),z=m(),T=c("pre"),this.h()},l(t){a=i(t,"H2",{});var r=u(a);p=d(r,"Usage"),r.forEach(s),e=k(t),o=i(t,"P",{});var X=u(o);_=d(X,"With the "),g=i(X,"CODE",{});var dt=u(g);J=d(dt,"use-clipboard"),dt.forEach(s),K=d(X," action, text passed into the text param will be copied to the users clipboard."),X.forEach(s),R=k(t),lt(v.$$.fragment,t),A=k(t),x=i(t,"H2",{});var mt=u(x);N=d(mt,"Params"),mt.forEach(s),L=k(t),h=i(t,"TABLE",{});var Y=u(h);H=i(Y,"THEAD",{});var kt=u(H);$=i(kt,"TR",{});var F=u($);P=i(F,"TH",{});var bt=u(P);Q=d(bt,"Param"),bt.forEach(s),V=k(F),j=i(F,"TH",{});var _t=u(j);Z=d(_t,"Description"),_t.forEach(s),F.forEach(s),kt.forEach(s),tt=k(Y),B=i(Y,"TBODY",{});var ht=u(B);y=i(ht,"TR",{});var I=u(y);M=i(I,"TD",{});var vt=u(M);et=d(vt,"text"),vt.forEach(s),st=k(I),O=i(I,"TD",{});var $t=u(O);at=d($t,"The text (or function that returns text) that will be copied when the action is triggered"),$t.forEach(s),I.forEach(s),ht.forEach(s),Y.forEach(s),S=k(t),w=i(t,"H2",{});var yt=u(w);ot=d(yt,"Events"),yt.forEach(s),U=k(t),C=i(t,"P",{});var Et=u(C);nt=d(Et,"The use-clipboard action dispatches custom events. Each custom event takes a callback function just like other events."),Et.forEach(s),W=k(t),E=i(t,"PRE",{class:!0});var Pt=u(E);Pt.forEach(s),q=k(t),D=i(t,"H2",{});var Tt=u(D);pt=d(Tt,"Definition"),Tt.forEach(s),z=k(t),T=i(t,"PRE",{class:!0});var jt=u(T);jt.forEach(s),this.h()},h(){xt(E,"class","language-js"),xt(T,"class","language-js")},m(t,r){l(t,a,r),n(a,p),l(t,e,r),l(t,o,r),n(o,_),n(o,g),n(g,J),n(o,K),l(t,R,r),ct(v,t,r),l(t,A,r),l(t,x,r),n(x,N),l(t,L,r),l(t,h,r),n(h,H),n(H,$),n($,P),n(P,Q),n($,V),n($,j),n(j,Z),n(h,tt),n(h,B),n(B,y),n(y,M),n(M,et),n(y,st),n(y,O),n(O,at),l(t,S,r),l(t,w,r),n(w,ot),l(t,U,r),l(t,C,r),n(C,nt),l(t,W,r),l(t,E,r),E.innerHTML=gt,l(t,q,r),l(t,D,r),n(D,pt),l(t,z,r),l(t,T,r),T.innerHTML=Ht,G=!0},p:Mt,i(t){G||(it(v.$$.fragment,t),G=!0)},o(t){ut(v.$$.fragment,t),G=!1},d(t){t&&s(a),t&&s(e),t&&s(o),t&&s(R),ft(v,t),t&&s(A),t&&s(x),t&&s(L),t&&s(h),t&&s(S),t&&s(w),t&&s(U),t&&s(C),t&&s(W),t&&s(E),t&&s(q),t&&s(D),t&&s(z),t&&s(T)}}}const te={title:"use-clipboard",group:"svelteuidev-composables",packageGroup:"@svelteuidev/composables",slug:"/composables/use-clipboard/",description:"Copies text to the clipboard when DOM element is clicked",importCode:"import { clipboard } from '@svelteuidev/composables';",docs:"composables/use-clipboard.md",source:"svelteui-composables/src/actions/use-clipboard/use-clipboard.ts"};class ee extends wt{constructor(a){super(),Ct(this,a,null,Jt,Dt,{})}}export{ee as default,te as metadata};
