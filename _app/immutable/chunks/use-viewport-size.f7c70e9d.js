import{S as j,i as U,s as C,y as O,z as P,A as q,g as G,d as M,B as A,N,q as u,r as m,b as c,u as W,h as p,k as v,a as S,l as $,m as b,c as T,n as R,W as _,X}from"./index.b4f0bbdc.js";import{D as F}from"./Demo.9cccb4ab.js";import{T as I}from"./Text.d4cabcdc.js";import{u as J}from"./use-viewport-size.b1274a7d.js";function K(r){let s,n,o,a;return{c(){s=u("Width: "),n=u(r[1]),o=u(", Height: "),a=u(r[0])},l(t){s=m(t,"Width: "),n=m(t,r[1]),o=m(t,", Height: "),a=m(t,r[0])},m(t,i){c(t,s,i),c(t,n,i),c(t,o,i),c(t,a,i)},p(t,i){i&2&&W(n,t[1]),i&1&&W(a,t[0])},d(t){t&&p(s),t&&p(n),t&&p(o),t&&p(a)}}}function Q(r){let s,n;return s=new I({props:{align:"center",$$slots:{default:[K]},$$scope:{ctx:r}}}),{c(){O(s.$$.fragment)},l(o){P(s.$$.fragment,o)},m(o,a){q(s,o,a),n=!0},p(o,[a]){const t={};a&19&&(t.$$scope={dirty:a,ctx:o}),s.$set(t)},i(o){n||(G(s.$$.fragment,o),n=!0)},o(o){M(s.$$.fragment,o),n=!1},d(o){A(s,o)}}}const Y=`
<script>
	import { Text } from '@svelteuidev/core';
	import { useViewportSize } from '@svelteuidev/composables';

	const viewport = useViewportSize();
	$: ({ width, height } = $viewport);
<\/script>

<Text>Width: {width}, Height: {height}</Text>
`,Z="demo",ee={code:Y};function te(r,s,n){let o,a,t;const i=J();return N(r,i,d=>n(3,t=d)),r.$$.update=()=>{r.$$.dirty&8&&n(1,{width:o,height:a}=t,o,(n(0,a),n(3,t)))},[a,o,i,t]}class se extends j{constructor(s){super(),U(this,s,te,Q,C,{})}}const oe=Object.freeze(Object.defineProperty({__proto__:null,configuration:ee,default:se,type:Z},Symbol.toStringTag,{value:"Module"}));function ae(r){let s,n,o,a,t,i,d,E,k,f,g,w,H,z,h,B=`<code class="language-js"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">useViewportSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Writable<span class="token operator">&lt;</span><span class="token punctuation">&#123;</span>
	<span class="token literal-property property">width</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
	<span class="token literal-property property">height</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token operator">></span><span class="token punctuation">;</span></code>`,y;return f=new F({props:{demo:oe}}),{c(){s=v("h2"),n=u("Usage"),o=S(),a=v("p"),t=u("The "),i=v("code"),d=u("use-viewport-size"),E=u(" composable allows you get access to the current with and height of the viewport, and it also subscribes to viewport changes."),k=S(),O(f.$$.fragment),g=S(),w=v("h2"),H=u("Definition"),z=S(),h=v("pre"),this.h()},l(e){s=$(e,"H2",{});var l=b(s);n=m(l,"Usage"),l.forEach(p),o=T(e),a=$(e,"P",{});var x=b(a);t=m(x,"The "),i=$(x,"CODE",{});var D=b(i);d=m(D,"use-viewport-size"),D.forEach(p),E=m(x," composable allows you get access to the current with and height of the viewport, and it also subscribes to viewport changes."),x.forEach(p),k=T(e),P(f.$$.fragment,e),g=T(e),w=$(e,"H2",{});var V=b(w);H=m(V,"Definition"),V.forEach(p),z=T(e),h=$(e,"PRE",{class:!0});var L=b(h);L.forEach(p),this.h()},h(){R(h,"class","language-js")},m(e,l){c(e,s,l),_(s,n),c(e,o,l),c(e,a,l),_(a,t),_(a,i),_(i,d),_(a,E),c(e,k,l),q(f,e,l),c(e,g,l),c(e,w,l),_(w,H),c(e,z,l),c(e,h,l),h.innerHTML=B,y=!0},p:X,i(e){y||(G(f.$$.fragment,e),y=!0)},o(e){M(f.$$.fragment,e),y=!1},d(e){e&&p(s),e&&p(o),e&&p(a),e&&p(k),A(f,e),e&&p(g),e&&p(w),e&&p(z),e&&p(h)}}}const le={title:"use-viewport-size",group:"svelteuidev-composables",packageGroup:"@svelteuidev/composables",slug:"/composables/use-viewport-size/",description:"Get viewport width and height.",importCode:"import { useViewportSize } from '@svelteuidev/composables';",docs:"composables/use-viewport-size.md",source:"svelteui-composables/src/utilities/use-viewport-size/use-viewport-size.ts"};class ce extends j{constructor(s){super(),U(this,s,null,ae,C,{})}}export{ce as default,le as metadata};
