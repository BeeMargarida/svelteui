import{S as Ee,i as Te,s as ge,y as re,z as le,A as ne,g as ie,d as ce,B as pe,k as i,q as u,a as $,l as c,m as p,r as f,h as s,c as k,n as Se,b as _,W as a,F as xe,K as De,X as je}from"./index.b4f0bbdc.js";import{D as Pe}from"./Demo.9cccb4ab.js";import{S as Be}from"./Stack.545b11b0.js";import{B as Oe}from"./Button.b50e74fc.js";function Re(d,t){return Object.entries(t).forEach(([r,o])=>{d.style.setProperty(`--${r}`,`${o}`)}),{update(r){Object.entries(r).forEach(([o,l])=>{d.style.setProperty(`--${o}`,`${l}`),delete t[o]}),Object.keys(t).forEach(o=>d.style.removeProperty(`--${o}`)),t=r}}}function He(d){let t;return{c(){t=u("Click to switch colors")},l(r){t=f(r,"Click to switch colors")},m(r,o){_(r,t,o)},d(r){r&&s(t)}}}function Ue(d){let t,r,o,l,h,T,g,S,b,C,j,w;return b=new Oe({props:{$$slots:{default:[He]},$$scope:{ctx:d}}}),b.$on("click",d[2]),{c(){t=i("div"),r=i("p"),o=u("This text is normal"),l=$(),h=i("p"),T=u("This text is using the variable"),S=$(),re(b.$$.fragment),this.h()},l(n){t=c(n,"DIV",{});var m=p(t);r=c(m,"P",{});var y=p(r);o=f(y,"This text is normal"),y.forEach(s),l=k(m),h=c(m,"P",{class:!0});var E=p(h);T=f(E,"This text is using the variable"),E.forEach(s),m.forEach(s),S=k(n),le(b.$$.fragment,n),this.h()},h(){Se(h,"class","example svelte-6a5x3u")},m(n,m){_(n,t,m),a(t,r),a(r,o),a(t,l),a(t,h),a(h,T),_(n,S,m),ne(b,n,m),C=!0,j||(w=xe(g=Re.call(null,t,d[1])),j=!0)},p(n,m){g&&De(g.update)&&m&2&&g.update.call(null,n[1]);const y={};m&8&&(y.$$scope={dirty:m,ctx:n}),b.$set(y)},i(n){C||(ie(b.$$.fragment,n),C=!0)},o(n){ce(b.$$.fragment,n),C=!1},d(n){n&&s(t),n&&s(S),pe(b,n),j=!1,w()}}}function Ae(d){let t,r;return t=new Be({props:{align:"center",$$slots:{default:[Ue]},$$scope:{ctx:d}}}),{c(){re(t.$$.fragment)},l(o){le(t.$$.fragment,o)},m(o,l){ne(t,o,l),r=!0},p(o,[l]){const h={};l&11&&(h.$$scope={dirty:l,ctx:o}),t.$set(h)},i(o){r||(ie(t.$$.fragment,o),r=!0)},o(o){ce(t.$$.fragment,o),r=!1},d(o){pe(t,o)}}}const Ve=`
<script>
	import { Button, Stack } from '@svelteuidev/core';
	import { cssvariable } from '@svelteuidev/composables';

	let isRed = true;
	$: styleVars = {
		titleColor: isRed ? 'red' : 'blue'
	};
<\/script>

<Stack align="center">
	<div use:cssvariable={styleVars}>
		<!-- anything here will have access to var(--titleColor) -->
		<p>This text is normal</p>
		<p class="example">This text is using the variable</p>
	</div>
	<Button on:click={() => (isRed = !isRed)}>Click to switch colors</Button>
</Stack>

<style>
	.example {
		color: var(--titleColor);
	}
</style>
`,We="demo",Le={code:Ve};function Me(d,t,r){let o,l=!0;const h=()=>r(0,l=!l);return d.$$.update=()=>{d.$$.dirty&1&&r(1,o={titleColor:l?"red":"blue"})},[l,o,h]}class qe extends Ee{constructor(t){super(),Te(this,t,Me,Ae,ge,{})}}const ze=Object.freeze(Object.defineProperty({__proto__:null,configuration:Le,default:qe,type:We},Symbol.toStringTag,{value:"Module"}));function Ke(d){let t,r,o,l,h,T,g,S,b,C,j,w,n,m,y,E,q,R,J,z,x,U,P,A,N,Q,V,Z,ee,W,B,L,te,se,M,ae,K,H,oe,F,O,Ce='<code class="language-js"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">cssvariable</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">node</span><span class="token operator">:</span> HTMLElement<span class="token punctuation">,</span> <span class="token literal-property property">props</span><span class="token operator">:</span> UnknownKeyString<span class="token operator">&lt;</span>string<span class="token operator">></span></span><span class="token punctuation">)</span><span class="token operator">:</span> ReturnType<span class="token operator">&lt;</span>Action<span class="token operator">></span><span class="token punctuation">;</span></code>',G;return E=new Pe({props:{demo:ze}}),{c(){t=i("h2"),r=u("Usage"),o=$(),l=i("p"),h=u("With the "),T=i("code"),g=u("use-css-variable"),S=u(" action, an object of properties will be treated as CSS custom variables. By defining this object inside of a "),b=i("code"),C=u("$:"),j=u(" reactive block, "),w=i("code"),n=u("use-css-variable"),m=u(" can update those CSS properties on the fly whenever some of its values change."),y=$(),re(E.$$.fragment),q=$(),R=i("h2"),J=u("Params"),z=$(),x=i("table"),U=i("thead"),P=i("tr"),A=i("th"),N=u("Param"),Q=$(),V=i("th"),Z=u("Description"),ee=$(),W=i("tbody"),B=i("tr"),L=i("td"),te=u("props"),se=$(),M=i("td"),ae=u("The object that possesses the variables, and their associated values"),K=$(),H=i("h2"),oe=u("Definition"),F=$(),O=i("pre"),this.h()},l(e){t=c(e,"H2",{});var v=p(t);r=f(v,"Usage"),v.forEach(s),o=k(e),l=c(e,"P",{});var D=p(l);h=f(D,"With the "),T=c(D,"CODE",{});var ue=p(T);g=f(ue,"use-css-variable"),ue.forEach(s),S=f(D," action, an object of properties will be treated as CSS custom variables. By defining this object inside of a "),b=c(D,"CODE",{});var fe=p(b);C=f(fe,"$:"),fe.forEach(s),j=f(D," reactive block, "),w=c(D,"CODE",{});var de=p(w);n=f(de,"use-css-variable"),de.forEach(s),m=f(D," can update those CSS properties on the fly whenever some of its values change."),D.forEach(s),y=k(e),le(E.$$.fragment,e),q=k(e),R=c(e,"H2",{});var me=p(R);J=f(me,"Params"),me.forEach(s),z=k(e),x=c(e,"TABLE",{});var I=p(x);U=c(I,"THEAD",{});var ve=p(U);P=c(ve,"TR",{});var X=p(P);A=c(X,"TH",{});var he=p(A);N=f(he,"Param"),he.forEach(s),Q=k(X),V=c(X,"TH",{});var be=p(V);Z=f(be,"Description"),be.forEach(s),X.forEach(s),ve.forEach(s),ee=k(I),W=c(I,"TBODY",{});var _e=p(W);B=c(_e,"TR",{});var Y=p(B);L=c(Y,"TD",{});var $e=p(L);te=f($e,"props"),$e.forEach(s),se=k(Y),M=c(Y,"TD",{});var ke=p(M);ae=f(ke,"The object that possesses the variables, and their associated values"),ke.forEach(s),Y.forEach(s),_e.forEach(s),I.forEach(s),K=k(e),H=c(e,"H2",{});var ye=p(H);oe=f(ye,"Definition"),ye.forEach(s),F=k(e),O=c(e,"PRE",{class:!0});var we=p(O);we.forEach(s),this.h()},h(){Se(O,"class","language-js")},m(e,v){_(e,t,v),a(t,r),_(e,o,v),_(e,l,v),a(l,h),a(l,T),a(T,g),a(l,S),a(l,b),a(b,C),a(l,j),a(l,w),a(w,n),a(l,m),_(e,y,v),ne(E,e,v),_(e,q,v),_(e,R,v),a(R,J),_(e,z,v),_(e,x,v),a(x,U),a(U,P),a(P,A),a(A,N),a(P,Q),a(P,V),a(V,Z),a(x,ee),a(x,W),a(W,B),a(B,L),a(L,te),a(B,se),a(B,M),a(M,ae),_(e,K,v),_(e,H,v),a(H,oe),_(e,F,v),_(e,O,v),O.innerHTML=Ce,G=!0},p:je,i(e){G||(ie(E.$$.fragment,e),G=!0)},o(e){ce(E.$$.fragment,e),G=!1},d(e){e&&s(t),e&&s(o),e&&s(l),e&&s(y),pe(E,e),e&&s(q),e&&s(R),e&&s(z),e&&s(x),e&&s(K),e&&s(H),e&&s(F),e&&s(O)}}}const Ye={title:"use-css-variable",group:"svelteuidev-composables",packageGroup:"@svelteuidev/composables",slug:"/composables/use-css-variable/",description:"Whenever some of their values change, update css properties on the fly",importCode:"import { cssvariable } from '@svelteuidev/composables';",docs:"composables/use-css-variable.md",source:"svelteui-composables/src/actions/use-css-variable/use-css-variable.ts"};class Je extends Ee{constructor(t){super(),Te(this,t,null,Ke,ge,{})}}export{Je as default,Ye as metadata};
