import{S as ee,i as te,s as oe,y as B,z as b,A as h,g as _,d as v,B as w,D as rt,J as at,a6 as lt,C as ft,G as ct,H as ut,I as dt,q as c,r as u,b as $,h as s,a as y,c as x,X as Le,k as p,l as g,m,W as i}from"./index.b4f0bbdc.js";import{D as de}from"./Demo.9cccb4ab.js";import{C as nt}from"./Center.c93e1a75.js";import{B as M}from"./Badge.e4be72ab.js";import{G as st}from"./Group.db734d69.js";import{B as ot}from"./Box.195443f6.js";import{C as it}from"./CloseButton.f973e5b2.js";function $t(n){let e;const r=n[1].default,t=ft(r,n,n[2],null);return{c(){t&&t.c()},l(a){t&&t.l(a)},m(a,o){t&&t.m(a,o),e=!0},p(a,o){t&&t.p&&(!e||o&4)&&ct(t,r,a,a[2],e?dt(r,a[2],o,null):ut(a[2]),null)},i(a){e||(_(t,a),e=!0)},o(a){v(t,a),e=!1},d(a){t&&t.d(a)}}}function pt(n){let e,r;const t=[n[0]];let a={$$slots:{default:[$t]},$$scope:{ctx:n}};for(let o=0;o<t.length;o+=1)a=rt(a,t[o]);return e=new M({props:a}),{c(){B(e.$$.fragment)},l(o){b(e.$$.fragment,o)},m(o,f){h(e,o,f),r=!0},p(o,f){const E=f&1?at(t,[lt(o[0])]):{};f&4&&(E.$$scope={dirty:f,ctx:o}),e.$set(E)},i(o){r||(_(e.$$.fragment,o),r=!0)},o(o){v(e.$$.fragment,o),r=!1},d(o){w(e,o)}}}function gt(n){let e,r;return e=new nt({props:{$$slots:{default:[pt]},$$scope:{ctx:n}}}),{c(){B(e.$$.fragment)},l(t){b(e.$$.fragment,t)},m(t,a){h(e,t,a),r=!0},p(t,[a]){const o={};a&5&&(o.$$scope={dirty:a,ctx:t}),e.$set(o)},i(t){r||(_(e.$$.fragment,t),r=!0)},o(t){v(e.$$.fragment,t),r=!1},d(t){w(e,t)}}}const mt=(n,e)=>`<script>
  import { Badge } from '@svelteuidev/core';
<\/script>

<Badge${n}>
  ${e}
</Badge>`,_t="configurator",vt={codeTemplate:mt,configurator:[{name:"color",type:"color",initialValue:"blue",defaultValue:"blue"},{name:"size",type:"size",initialValue:"sm",defaultValue:"md"},{name:"radius",type:"size",initialValue:"sm",defaultValue:"xl"},{name:"variant",type:"select",data:[{label:"light",value:"light"},{label:"filled",value:"filled"},{label:"outline",value:"outline"},{label:"dot",value:"dot"},{label:"gradient",value:"gradient"}],initialValue:"light",defaultValue:"light"},{name:"gradient",type:"composite",controls:[{name:"from",type:"color",initialValue:"indigo",defaultValue:"indigo"},{name:"to",type:"color",initialValue:"cyan",defaultValue:"cyan"},{name:"deg",type:"number",initialValue:45,defaultValue:45}],when:{control:"variant",comparator:"===",value:"gradient"}},{name:"children",type:"string",initialValue:"Badge"}]};function Bt(n,e,r){let{$$slots:t={},$$scope:a}=e,{props:o={}}=e;return n.$$set=f=>{"props"in f&&r(0,o=f.props),"$$scope"in f&&r(2,a=f.$$scope)},[o,t,a]}class bt extends ee{constructor(e){super(),te(this,e,Bt,gt,oe,{props:0})}}const ht=Object.freeze(Object.defineProperty({__proto__:null,configuration:vt,default:bt,type:_t},Symbol.toStringTag,{value:"Module"}));function wt(n){let e;return{c(){e=c("Badge")},l(r){e=u(r,"Badge")},m(r,t){$(r,e,t)},d(r){r&&s(e)}}}function Et(n){let e,r;const t=[{variant:"gradient"},n[0]];let a={$$slots:{default:[wt]},$$scope:{ctx:n}};for(let o=0;o<t.length;o+=1)a=rt(a,t[o]);return e=new M({props:a}),{c(){B(e.$$.fragment)},l(o){b(e.$$.fragment,o)},m(o,f){h(e,o,f),r=!0},p(o,f){const E=f&1?at(t,[t[0],lt(o[0])]):{};f&2&&(E.$$scope={dirty:f,ctx:o}),e.$set(E)},i(o){r||(_(e.$$.fragment,o),r=!0)},o(o){v(e.$$.fragment,o),r=!1},d(o){w(e,o)}}}function yt(n){let e,r;return e=new nt({props:{$$slots:{default:[Et]},$$scope:{ctx:n}}}),{c(){B(e.$$.fragment)},l(t){b(e.$$.fragment,t)},m(t,a){h(e,t,a),r=!0},p(t,[a]){const o={};a&3&&(o.$$scope={dirty:a,ctx:t}),e.$set(o)},i(t){r||(_(e.$$.fragment,t),r=!0)},o(t){v(e.$$.fragment,t),r=!1},d(t){w(e,t)}}}const xt=(n,e)=>`<script>
  import { Badge } from '@svelteuidev/core';
<\/script>

<Badge variant='gradient' ${n}>
    Badge
</Badge>`,Vt="configurator",Ct={codeTemplate:xt,configurator:[{name:"gradient",type:"composite",controls:[{name:"from",type:"color",initialValue:"indigo",defaultValue:"indigo"},{name:"to",type:"color",initialValue:"cyan",defaultValue:"cyan"},{name:"deg",type:"number",initialValue:45,defaultValue:45}]}]};function St(n,e,r){let{props:t={}}=e;return n.$$set=a=>{"props"in a&&r(0,t=a.props)},[t]}class Ot extends ee{constructor(e){super(),te(this,e,St,yt,oe,{props:0})}}const zt=Object.freeze(Object.defineProperty({__proto__:null,configuration:Ct,default:Ot,type:Vt},Symbol.toStringTag,{value:"Module"}));function Dt(n){let e;return{c(){e=c("Full width badge")},l(r){e=u(r,"Full width badge")},m(r,t){$(r,e,t)},d(r){r&&s(e)}}}function jt(n){let e,r;return e=new M({props:{variant:"filled",fullWidth:!0,$$slots:{default:[Dt]},$$scope:{ctx:n}}}),{c(){B(e.$$.fragment)},l(t){b(e.$$.fragment,t)},m(t,a){h(e,t,a),r=!0},p(t,a){const o={};a&1&&(o.$$scope={dirty:a,ctx:t}),e.$set(o)},i(t){r||(_(e.$$.fragment,t),r=!0)},o(t){v(e.$$.fragment,t),r=!1},d(t){w(e,t)}}}function Tt(n){let e;return{c(){e=c("Badge with overflow")},l(r){e=u(r,"Badge with overflow")},m(r,t){$(r,e,t)},d(r){r&&s(e)}}}function It(n){let e,r;return e=new M({props:{variant:"filled",fullWidth:!0,$$slots:{default:[Tt]},$$scope:{ctx:n}}}),{c(){B(e.$$.fragment)},l(t){b(e.$$.fragment,t)},m(t,a){h(e,t,a),r=!0},p(t,a){const o={};a&1&&(o.$$scope={dirty:a,ctx:t}),e.$set(o)},i(t){r||(_(e.$$.fragment,t),r=!0)},o(t){v(e.$$.fragment,t),r=!1},d(t){w(e,t)}}}function Wt(n){let e,r,t,a;return e=new ot({props:{css:{width:200},$$slots:{default:[jt]},$$scope:{ctx:n}}}),t=new ot({props:{css:{width:120},$$slots:{default:[It]},$$scope:{ctx:n}}}),{c(){B(e.$$.fragment),r=y(),B(t.$$.fragment)},l(o){b(e.$$.fragment,o),r=x(o),b(t.$$.fragment,o)},m(o,f){h(e,o,f),$(o,r,f),h(t,o,f),a=!0},p(o,f){const E={};f&1&&(E.$$scope={dirty:f,ctx:o}),e.$set(E);const S={};f&1&&(S.$$scope={dirty:f,ctx:o}),t.$set(S)},i(o){a||(_(e.$$.fragment,o),_(t.$$.fragment,o),a=!0)},o(o){v(e.$$.fragment,o),v(t.$$.fragment,o),a=!1},d(o){w(e,o),o&&s(r),w(t,o)}}}function kt(n){let e,r;return e=new st({props:{position:"center",$$slots:{default:[Wt]},$$scope:{ctx:n}}}),{c(){B(e.$$.fragment)},l(t){b(e.$$.fragment,t)},m(t,a){h(e,t,a),r=!0},p(t,[a]){const o={};a&1&&(o.$$scope={dirty:a,ctx:t}),e.$set(o)},i(t){r||(_(e.$$.fragment,t),r=!0)},o(t){v(e.$$.fragment,t),r=!1},d(t){w(e,t)}}}const Gt=`<script>
  import { Badge, Box } from '@svelteuidev/core';
<\/script>

<Box>
    <Badge variant="filled" fullWidth>
        Full width badge
    </Badge>
</Box>

<Box>
    <Badge variant="filled" fullWidth>
        Badge with overflow
    </Badge>
</Box>`,Pt="demo",Ft={code:Gt,toggle:!0};class Ht extends ee{constructor(e){super(),te(this,e,null,kt,oe,{})}}const Lt=Object.freeze(Object.defineProperty({__proto__:null,configuration:Ft,default:Ht,type:Pt},Symbol.toStringTag,{value:"Module"}));function Mt(n){let e;return{c(){e=c("Badge with right section")},l(r){e=u(r,"Badge with right section")},m(r,t){$(r,e,t)},d(r){r&&s(e)}}}function Ut(n){let e,r;return e=new it({props:{size:"xs",iconSize:"xs",color:"blue",variant:"transparent"}}),{c(){B(e.$$.fragment)},l(t){b(e.$$.fragment,t)},m(t,a){h(e,t,a),r=!0},p:Le,i(t){r||(_(e.$$.fragment,t),r=!0)},o(t){v(e.$$.fragment,t),r=!1},d(t){w(e,t)}}}function qt(n){let e;return{c(){e=c("Badge with left section")},l(r){e=u(r,"Badge with left section")},m(r,t){$(r,e,t)},d(r){r&&s(e)}}}function Rt(n){let e,r;return e=new it({props:{size:"xs",iconSize:"xs",color:"blue",variant:"transparent"}}),{c(){B(e.$$.fragment)},l(t){b(e.$$.fragment,t)},m(t,a){h(e,t,a),r=!0},p:Le,i(t){r||(_(e.$$.fragment,t),r=!0)},o(t){v(e.$$.fragment,t),r=!1},d(t){w(e,t)}}}function At(n){let e,r,t,a;return e=new M({props:{$$slots:{rightSection:[Ut],default:[Mt]},$$scope:{ctx:n}}}),t=new M({props:{$$slots:{leftSection:[Rt],default:[qt]},$$scope:{ctx:n}}}),{c(){B(e.$$.fragment),r=y(),B(t.$$.fragment)},l(o){b(e.$$.fragment,o),r=x(o),b(t.$$.fragment,o)},m(o,f){h(e,o,f),$(o,r,f),h(t,o,f),a=!0},p(o,f){const E={};f&1&&(E.$$scope={dirty:f,ctx:o}),e.$set(E);const S={};f&1&&(S.$$scope={dirty:f,ctx:o}),t.$set(S)},i(o){a||(_(e.$$.fragment,o),_(t.$$.fragment,o),a=!0)},o(o){v(e.$$.fragment,o),v(t.$$.fragment,o),a=!1},d(o){w(e,o),o&&s(r),w(t,o)}}}function Jt(n){let e,r;return e=new st({props:{position:"center",$$slots:{default:[At]},$$scope:{ctx:n}}}),{c(){B(e.$$.fragment)},l(t){b(e.$$.fragment,t)},m(t,a){h(e,t,a),r=!0},p(t,[a]){const o={};a&1&&(o.$$scope={dirty:a,ctx:t}),e.$set(o)},i(t){r||(_(e.$$.fragment,t),r=!0)},o(t){v(e.$$.fragment,t),r=!1},d(t){w(e,t)}}}const Xt=`<script>
  import { Badge, CloseButton } from '@svelteuidev/core';
<\/script>

<Badge>
    Badge with right section
    <svelte:fragment slot='rightSection'>
        <CloseButton size='xs' iconSize='xs' color='blue' variant='transparent' />
    </svelte:fragment>
</Badge>

<Badge>
    Badge with left section
    <svelte:fragment slot='leftSection'>
        <CloseButton size='xs' iconSize='xs' color='blue' variant='transparent' />
    </svelte:fragment>
</Badge>`,Kt="demo",Nt={code:Xt,toggle:!0};class Qt extends ee{constructor(e){super(),te(this,e,null,Jt,oe,{})}}const Yt=Object.freeze(Object.defineProperty({__proto__:null,configuration:Nt,default:Qt,type:Kt},Symbol.toStringTag,{value:"Module"}));function Zt(n){let e,r,t,a,o,f,E,S,G,$e,re,V,z,pe,U,ge,me,q,_e,ve,T,Be,R,be,he,we,C,A,Ee,ye,J,xe,Ve,X,Ce,Se,K,Oe,ze,P,N,De,je,ae,I,le,F,Te,ne,O,Ie,Q,We,ke,Y,Ge,Pe,se,W,ie,H,Fe,fe,k,ce;return a=new de({props:{demo:ht}}),I=new de({props:{demo:zt}}),W=new de({props:{demo:Lt}}),k=new de({props:{demo:Yt}}),{c(){e=p("h2"),r=c("Usage"),t=y(),B(a.$$.fragment),o=y(),f=p("h2"),E=c("Gradient variant"),S=y(),G=p("p"),$e=c("To use gradient as Badge background:"),re=y(),V=p("ul"),z=p("li"),pe=c("set "),U=p("code"),ge=c("variant"),me=c(" prop to "),q=p("code"),_e=c("gradient"),ve=y(),T=p("li"),Be=c("set "),R=p("code"),be=c("gradient"),he=c(" prop"),we=y(),C=p("li"),A=p("code"),Ee=c("color-from"),ye=c(" and "),J=p("code"),xe=c("color-to"),Ve=c(" options in "),X=p("code"),Ce=c("gradient"),Se=c(" prop are colors from "),K=p("code"),Oe=c("theme.colors"),ze=y(),P=p("li"),N=p("code"),De=c("deg"),je=c(" is linear gradient degree"),ae=y(),B(I.$$.fragment),le=y(),F=p("h2"),Te=c("Full width and overflow"),ne=y(),O=p("p"),Ie=c("Badge will take full width of container if "),Q=p("code"),We=c("fullWidth"),ke=c(" prop is "),Y=p("code"),Ge=c("true"),Pe=c(`.
If Badge cannot fit in its container, overflow content will be hidden with ellipsis:`),se=y(),B(W.$$.fragment),ie=y(),H=p("h2"),Fe=c("Right and left sections"),fe=y(),B(k.$$.fragment)},l(l){e=g(l,"H2",{});var d=m(e);r=u(d,"Usage"),d.forEach(s),t=x(l),b(a.$$.fragment,l),o=x(l),f=g(l,"H2",{});var Me=m(f);E=u(Me,"Gradient variant"),Me.forEach(s),S=x(l),G=g(l,"P",{});var Ue=m(G);$e=u(Ue,"To use gradient as Badge background:"),Ue.forEach(s),re=x(l),V=g(l,"UL",{});var D=m(V);z=g(D,"LI",{});var Z=m(z);pe=u(Z,"set "),U=g(Z,"CODE",{});var qe=m(U);ge=u(qe,"variant"),qe.forEach(s),me=u(Z," prop to "),q=g(Z,"CODE",{});var Re=m(q);_e=u(Re,"gradient"),Re.forEach(s),Z.forEach(s),ve=x(D),T=g(D,"LI",{});var ue=m(T);Be=u(ue,"set "),R=g(ue,"CODE",{});var Ae=m(R);be=u(Ae,"gradient"),Ae.forEach(s),he=u(ue," prop"),ue.forEach(s),we=x(D),C=g(D,"LI",{});var j=m(C);A=g(j,"CODE",{});var Je=m(A);Ee=u(Je,"color-from"),Je.forEach(s),ye=u(j," and "),J=g(j,"CODE",{});var Xe=m(J);xe=u(Xe,"color-to"),Xe.forEach(s),Ve=u(j," options in "),X=g(j,"CODE",{});var Ke=m(X);Ce=u(Ke,"gradient"),Ke.forEach(s),Se=u(j," prop are colors from "),K=g(j,"CODE",{});var Ne=m(K);Oe=u(Ne,"theme.colors"),Ne.forEach(s),j.forEach(s),ze=x(D),P=g(D,"LI",{});var He=m(P);N=g(He,"CODE",{});var Qe=m(N);De=u(Qe,"deg"),Qe.forEach(s),je=u(He," is linear gradient degree"),He.forEach(s),D.forEach(s),ae=x(l),b(I.$$.fragment,l),le=x(l),F=g(l,"H2",{});var Ye=m(F);Te=u(Ye,"Full width and overflow"),Ye.forEach(s),ne=x(l),O=g(l,"P",{});var L=m(O);Ie=u(L,"Badge will take full width of container if "),Q=g(L,"CODE",{});var Ze=m(Q);We=u(Ze,"fullWidth"),Ze.forEach(s),ke=u(L," prop is "),Y=g(L,"CODE",{});var et=m(Y);Ge=u(et,"true"),et.forEach(s),Pe=u(L,`.
If Badge cannot fit in its container, overflow content will be hidden with ellipsis:`),L.forEach(s),se=x(l),b(W.$$.fragment,l),ie=x(l),H=g(l,"H2",{});var tt=m(H);Fe=u(tt,"Right and left sections"),tt.forEach(s),fe=x(l),b(k.$$.fragment,l)},m(l,d){$(l,e,d),i(e,r),$(l,t,d),h(a,l,d),$(l,o,d),$(l,f,d),i(f,E),$(l,S,d),$(l,G,d),i(G,$e),$(l,re,d),$(l,V,d),i(V,z),i(z,pe),i(z,U),i(U,ge),i(z,me),i(z,q),i(q,_e),i(V,ve),i(V,T),i(T,Be),i(T,R),i(R,be),i(T,he),i(V,we),i(V,C),i(C,A),i(A,Ee),i(C,ye),i(C,J),i(J,xe),i(C,Ve),i(C,X),i(X,Ce),i(C,Se),i(C,K),i(K,Oe),i(V,ze),i(V,P),i(P,N),i(N,De),i(P,je),$(l,ae,d),h(I,l,d),$(l,le,d),$(l,F,d),i(F,Te),$(l,ne,d),$(l,O,d),i(O,Ie),i(O,Q),i(Q,We),i(O,ke),i(O,Y),i(Y,Ge),i(O,Pe),$(l,se,d),h(W,l,d),$(l,ie,d),$(l,H,d),i(H,Fe),$(l,fe,d),h(k,l,d),ce=!0},p:Le,i(l){ce||(_(a.$$.fragment,l),_(I.$$.fragment,l),_(W.$$.fragment,l),_(k.$$.fragment,l),ce=!0)},o(l){v(a.$$.fragment,l),v(I.$$.fragment,l),v(W.$$.fragment,l),v(k.$$.fragment,l),ce=!1},d(l){l&&s(e),l&&s(t),w(a,l),l&&s(o),l&&s(f),l&&s(S),l&&s(G),l&&s(re),l&&s(V),l&&s(ae),w(I,l),l&&s(le),l&&s(F),l&&s(ne),l&&s(O),l&&s(se),w(W,l),l&&s(ie),l&&s(H),l&&s(fe),w(k,l)}}}const so={title:"Badge",group:"svelteuidev-core",packageGroup:"@svelteuidev/core",slug:"/core/badge/",category:"data-display",description:"Display badge, pill or tag",importCode:"import { Badge } from '@svelteuidev/core';",source:"svelteui-core/src/components/Badge/Badge.svelte",docs:"core/badge.md"};class io extends ee{constructor(e){super(),te(this,e,null,Zt,oe,{})}}export{io as default,so as metadata};
