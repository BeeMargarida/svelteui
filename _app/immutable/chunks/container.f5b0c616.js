import{S as He,i as Ne,s as Ue,y as J,a as v,z as K,c as C,A as Q,b as m,g as V,d as Z,B as ee,h as s,q as o,r,k as l,l as i,m as c,n as We,W as t,X as Xe}from"./index.b4f0bbdc.js";import{D as Ye}from"./Demo.9cccb4ab.js";import{C as we}from"./Container.d907b478.js";import{t as Fe}from"./Box.195443f6.js";function Je(g){let a;return{c(){a=o("Default container")},l(p){a=r(p,"Default container")},m(p,u){m(p,a,u)},d(p){p&&s(a)}}}function Ke(g){let a;return{c(){a=o("xs container with xs horizontal padding")},l(p){a=r(p,"xs container with xs horizontal padding")},m(p,u){m(p,a,u)},d(p){p&&s(a)}}}function Qe(g){let a;return{c(){a=o("200px container with 0px horizontal padding")},l(p){a=r(p,"200px container with 0px horizontal padding")},m(p,u){m(p,a,u)},d(p){p&&s(a)}}}function Ve(g){let a,p,u,_,h,x;return a=new we({props:{override:{backgroundColor:g[0],height:50},$$slots:{default:[Je]},$$scope:{ctx:g}}}),u=new we({props:{size:"xs",override:{backgroundColor:g[0],height:50,px:"$sm",mt:20},mt:20,$$slots:{default:[Ke]},$$scope:{ctx:g}}}),h=new we({props:{size:200,override:{backgroundColor:g[0],height:50,px:0,mt:20},$$slots:{default:[Qe]},$$scope:{ctx:g}}}),{c(){J(a.$$.fragment),p=v(),J(u.$$.fragment),_=v(),J(h.$$.fragment)},l(n){K(a.$$.fragment,n),p=C(n),K(u.$$.fragment,n),_=C(n),K(h.$$.fragment,n)},m(n,d){Q(a,n,d),m(n,p,d),Q(u,n,d),m(n,_,d),Q(h,n,d),x=!0},p(n,[d]){const z={};d&2&&(z.$$scope={dirty:d,ctx:n}),a.$set(z);const D={};d&2&&(D.$$scope={dirty:d,ctx:n}),u.$set(D);const O={};d&2&&(O.$$scope={dirty:d,ctx:n}),h.$set(O)},i(n){x||(V(a.$$.fragment,n),V(u.$$.fragment,n),V(h.$$.fragment,n),x=!0)},o(n){Z(a.$$.fragment,n),Z(u.$$.fragment,n),Z(h.$$.fragment,n),x=!1},d(n){ee(a,n),n&&s(p),ee(u,n),n&&s(_),ee(h,n)}}}const Ze=`
    <script>
        import { Container } from '@svelteuidev/core'
    <\/script>

    <Container override={{bc: 'AliceBlue'}}>
        Default container
    </Container>

    <Container size="xs" override={{px: 'xs', bc: 'AliceBlue'}}>
        xs container with xs horizontal padding
    </Container>

    <Container size={200} override={{px: 0, bc: 'AliceBlue'}}>
        200px container with 0px horizontal padding
    </Container>
    
	`,et="demo",tt={code:Ze};function nt(g){return[Fe.colors.blue50.value]}class st extends He{constructor(a){super(),Ne(this,a,nt,Ve,Ue,{})}}const at=Object.freeze(Object.defineProperty({__proto__:null,configuration:tt,default:st,type:et},Symbol.toStringTag,{value:"Module"}));function ot(g){let a,p,u,_,h,x,n,d,z,D,O,te,f,I,ne,se,L,ae,oe,j,re,pe,A,le,ie,B,ce,ue,G,de,fe,P,me,ke,$e,E,R,ge,he,H,_e,ve,q,w,M,T,Ce,W,y,xe,N,ze,Ee,X,b,qe=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Container <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@svelteuidev/core'</span><span class="token punctuation">;</span>

    <span class="token literal-property property">sizes</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
        <span class="token literal-property property">xs</span><span class="token operator">:</span> <span class="token number">540</span><span class="token punctuation">,</span>
        <span class="token literal-property property">sm</span><span class="token operator">:</span> <span class="token number">720</span><span class="token punctuation">,</span>
        <span class="token literal-property property">md</span><span class="token operator">:</span> <span class="token number">960</span><span class="token punctuation">,</span>
        <span class="token literal-property property">lg</span><span class="token operator">:</span> <span class="token number">1140</span><span class="token punctuation">,</span>
        <span class="token literal-property property">xl</span><span class="token operator">:</span> <span class="token number">1320</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Container</span> <span class="token language-javascript"><span class="token punctuation">&#123;</span>sizes<span class="token punctuation">&#125;</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Your app<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Container</span><span class="token punctuation">></span></span></code>`,Y;return w=new Ye({props:{demo:at}}),{c(){a=l("h2"),p=o("Usage"),u=v(),_=l("p"),h=o(`Container is the most basic layout element. It centers content horizontally and adds horizontal padding from theme.
The component accepts these props:`),x=v(),n=l("ul"),d=l("li"),z=l("strong"),D=o("size"),O=o(" - controls default max width"),te=v(),f=l("li"),I=l("strong"),ne=o("padding"),se=o(" - controls horizontal padding of container, use "),L=l("code"),ae=o("xs"),oe=o(", "),j=l("code"),re=o("sm"),pe=o(", "),A=l("code"),le=o("md"),ie=o(", "),B=l("code"),ce=o("lg"),ue=o(", "),G=l("code"),de=o("xl"),fe=o(" for value defined in "),P=l("code"),me=o("theme.spacing"),ke=o(" or number to set horizontal padding in px"),$e=v(),E=l("li"),R=l("strong"),ge=o("fluid"),he=o(" - overwrites "),H=l("code"),_e=o("size"),ve=o(" prop and sets max-width to 100%"),q=v(),J(w.$$.fragment),M=v(),T=l("h2"),Ce=o("Configure sizes"),W=v(),y=l("p"),xe=o("To configure container sizes, use the "),N=l("code"),ze=o("sizes"),Ee=o(" prop:"),X=v(),b=l("pre"),this.h()},l(e){a=i(e,"H2",{});var k=c(a);p=r(k,"Usage"),k.forEach(s),u=C(e),_=i(e,"P",{});var be=c(_);h=r(be,`Container is the most basic layout element. It centers content horizontally and adds horizontal padding from theme.
The component accepts these props:`),be.forEach(s),x=C(e),n=i(e,"UL",{});var S=c(n);d=i(S,"LI",{});var ye=c(d);z=i(ye,"STRONG",{});var De=c(z);D=r(De,"size"),De.forEach(s),O=r(ye," - controls default max width"),ye.forEach(s),te=C(S),f=i(S,"LI",{});var $=c(f);I=i($,"STRONG",{});var Oe=c(I);ne=r(Oe,"padding"),Oe.forEach(s),se=r($," - controls horizontal padding of container, use "),L=i($,"CODE",{});var Te=c(L);ae=r(Te,"xs"),Te.forEach(s),oe=r($,", "),j=i($,"CODE",{});var Se=c(j);re=r(Se,"sm"),Se.forEach(s),pe=r($,", "),A=i($,"CODE",{});var Ie=c(A);le=r(Ie,"md"),Ie.forEach(s),ie=r($,", "),B=i($,"CODE",{});var Le=c(B);ce=r(Le,"lg"),Le.forEach(s),ue=r($,", "),G=i($,"CODE",{});var je=c(G);de=r(je,"xl"),je.forEach(s),fe=r($," for value defined in "),P=i($,"CODE",{});var Ae=c(P);me=r(Ae,"theme.spacing"),Ae.forEach(s),ke=r($," or number to set horizontal padding in px"),$.forEach(s),$e=C(S),E=i(S,"LI",{});var U=c(E);R=i(U,"STRONG",{});var Be=c(R);ge=r(Be,"fluid"),Be.forEach(s),he=r(U," - overwrites "),H=i(U,"CODE",{});var Ge=c(H);_e=r(Ge,"size"),Ge.forEach(s),ve=r(U," prop and sets max-width to 100%"),U.forEach(s),S.forEach(s),q=C(e),K(w.$$.fragment,e),M=C(e),T=i(e,"H2",{});var Pe=c(T);Ce=r(Pe,"Configure sizes"),Pe.forEach(s),W=C(e),y=i(e,"P",{});var F=c(y);xe=r(F,"To configure container sizes, use the "),N=i(F,"CODE",{});var Re=c(N);ze=r(Re,"sizes"),Re.forEach(s),Ee=r(F," prop:"),F.forEach(s),X=C(e),b=i(e,"PRE",{class:!0});var Me=c(b);Me.forEach(s),this.h()},h(){We(b,"class","language-svelte")},m(e,k){m(e,a,k),t(a,p),m(e,u,k),m(e,_,k),t(_,h),m(e,x,k),m(e,n,k),t(n,d),t(d,z),t(z,D),t(d,O),t(n,te),t(n,f),t(f,I),t(I,ne),t(f,se),t(f,L),t(L,ae),t(f,oe),t(f,j),t(j,re),t(f,pe),t(f,A),t(A,le),t(f,ie),t(f,B),t(B,ce),t(f,ue),t(f,G),t(G,de),t(f,fe),t(f,P),t(P,me),t(f,ke),t(n,$e),t(n,E),t(E,R),t(R,ge),t(E,he),t(E,H),t(H,_e),t(E,ve),m(e,q,k),Q(w,e,k),m(e,M,k),m(e,T,k),t(T,Ce),m(e,W,k),m(e,y,k),t(y,xe),t(y,N),t(N,ze),t(y,Ee),m(e,X,k),m(e,b,k),b.innerHTML=qe,Y=!0},p:Xe,i(e){Y||(V(w.$$.fragment,e),Y=!0)},o(e){Z(w.$$.fragment,e),Y=!1},d(e){e&&s(a),e&&s(u),e&&s(_),e&&s(x),e&&s(n),e&&s(q),ee(w,e),e&&s(M),e&&s(T),e&&s(W),e&&s(y),e&&s(X),e&&s(b)}}}const ct={title:"Container",group:"svelteuidev-core",packageGroup:"@svelteuidev/core",slug:"/core/container/",category:"layout",description:"Center content horizontally with predefined max-width",importCode:"import { Container } from '@svelteuidev/core';",source:"svelteui-core/src/components/Container/Container.svelte",docs:"core/container.md"};class ut extends He{constructor(a){super(),Ne(this,a,null,ot,Ue,{})}}export{ut as default,ct as metadata};
