import{S as Fs,i as Js,s as Ks,H as Ot,y as U,z as R,A as T,N as Pt,a7 as Wt,g as y,d as x,B as M,e as Me,b as u,C as Ve,a3 as bt,h as s,q as r,r as i,a as v,k as m,al as Dt,c as _,l as f,m as d,n as D,Y as a}from"../chunks/index.b0fe5a0f.js";import"../chunks/navigation.fd10cd14.js";import{H as Lt}from"../chunks/Heading.bb67d8e2.js";import{b as Ht}from"../chunks/paths.605af923.js";import{D as $t}from"../chunks/Demo.e6142117.js";import{S as wt}from"../chunks/SimpleGrid.0b74b85f.js";import{C as Et}from"../chunks/Center.d0c4d84f.js";function jt(h,o,l){const t=h.slice();return t[1]=o[l],t[3]=l,t}function Bt(h){let o=h[3]+1+"",l;return{c(){l=r(o)},l(t){l=i(t,o)},m(t,p){u(t,l,p)},p:Ve,d(t){t&&s(l)}}}function At(h){let o,l;return o=new Et({props:{override:{bc:"AliceBlue",padding:"$12",color:"$blue600"},$$slots:{default:[Bt]},$$scope:{ctx:h}}}),{c(){U(o.$$.fragment)},l(t){R(o.$$.fragment,t)},m(t,p){T(o,t,p),l=!0},p(t,p){const n={};p&16&&(n.$$scope={dirty:p,ctx:t}),o.$set(n)},i(t){l||(y(o.$$.fragment,t),l=!0)},o(t){x(o.$$.fragment,t),l=!1},d(t){M(o,t)}}}function qt(h){let o,l,t=[...Array(5).keys()],p=[];for(let n=0;n<t.length;n+=1)p[n]=At(jt(h,t,n));return{c(){for(let n=0;n<p.length;n+=1)p[n].c();o=Me()},l(n){for(let k=0;k<p.length;k+=1)p[k].l(n);o=Me()},m(n,k){for(let g=0;g<p.length;g+=1)p[g]&&p[g].m(n,k);u(n,o,k),l=!0},p:Ve,i(n){if(!l){for(let k=0;k<t.length;k+=1)y(p[k]);l=!0}},o(n){p=p.filter(Boolean);for(let k=0;k<p.length;k+=1)x(p[k]);l=!1},d(n){bt(p,n),n&&s(o)}}}function zt(h){let o,l;const t=[h[0]];let p={$$slots:{default:[qt]},$$scope:{ctx:h}};for(let n=0;n<t.length;n+=1)p=Ot(p,t[n]);return o=new wt({props:p}),{c(){U(o.$$.fragment)},l(n){R(o.$$.fragment,n)},m(n,k){T(o,n,k),l=!0},p(n,[k]){const g=k&1?Pt(t,[Wt(n[0])]):{};k&16&&(g.$$scope={dirty:k,ctx:n}),o.$set(g)},i(n){l||(y(o.$$.fragment,n),l=!0)},o(n){x(o.$$.fragment,n),l=!1},d(n){M(o,n)}}}const Ut=(h,o)=>`<script>
  import { SimpleGrid } from '@svelteuidev/core';
<\/script>

<SimpleGrid ${h}>
    <div>1</div>
    <div>2</div>
    <div>3</div>
    <div>4</div>
    <div>5</div>
</SimpleGrid>`,Rt="configurator",Tt={codeTemplate:Ut,configurator:[{name:"cols",type:"number",initialValue:3,min:1,max:5},{name:"spacing",type:"size",initialValue:"md",defaultValue:"md"}]};function Mt(h,o,l){let{props:t={}}=o;return h.$$set=p=>{"props"in p&&l(0,t=p.props)},[t]}class Vt extends Fs{constructor(o){super(),Js(this,o,Mt,zt,Ks,{props:0})}}const Yt=Object.freeze(Object.defineProperty({__proto__:null,configuration:Tt,default:Vt,type:Rt},Symbol.toStringTag,{value:"Module"}));function Nt(h,o,l){const t=h.slice();return t[0]=o[l],t[2]=l,t}function Ft(h){let o=h[2]+1+"",l;return{c(){l=r(o)},l(t){l=i(t,o)},m(t,p){u(t,l,p)},p:Ve,d(t){t&&s(l)}}}function Jt(h){let o,l;return o=new Et({props:{override:{bc:"AliceBlue",padding:"$12",color:"$blue600"},$$slots:{default:[Ft]},$$scope:{ctx:h}}}),{c(){U(o.$$.fragment)},l(t){R(o.$$.fragment,t)},m(t,p){T(o,t,p),l=!0},p(t,p){const n={};p&8&&(n.$$scope={dirty:p,ctx:t}),o.$set(n)},i(t){l||(y(o.$$.fragment,t),l=!0)},o(t){x(o.$$.fragment,t),l=!1},d(t){M(o,t)}}}function Kt(h){let o,l,t=[...Array(5).keys()],p=[];for(let n=0;n<t.length;n+=1)p[n]=Jt(Nt(h,t,n));return{c(){for(let n=0;n<p.length;n+=1)p[n].c();o=Me()},l(n){for(let k=0;k<p.length;k+=1)p[k].l(n);o=Me()},m(n,k){for(let g=0;g<p.length;g+=1)p[g]&&p[g].m(n,k);u(n,o,k),l=!0},p:Ve,i(n){if(!l){for(let k=0;k<t.length;k+=1)y(p[k]);l=!0}},o(n){p=p.filter(Boolean);for(let k=0;k<p.length;k+=1)x(p[k]);l=!1},d(n){bt(p,n),n&&s(o)}}}function Qt(h){let o,l;return o=new wt({props:{breakpoints:[{maxWidth:980,cols:3,spacing:"md"},{maxWidth:755,cols:2,spacing:"sm"},{maxWidth:600,cols:1,spacing:"sm"}],cols:3,$$slots:{default:[Kt]},$$scope:{ctx:h}}}),{c(){U(o.$$.fragment)},l(t){R(o.$$.fragment,t)},m(t,p){T(o,t,p),l=!0},p(t,[p]){const n={};p&8&&(n.$$scope={dirty:p,ctx:t}),o.$set(n)},i(t){l||(y(o.$$.fragment,t),l=!0)},o(t){x(o.$$.fragment,t),l=!1},d(t){M(o,t)}}}const Xt=`<script>
	import { SimpleGrid } from '@svelteuidev/core';
<\/script>

<SimpleGrid
    breakpoints={[
        { maxWidth: 980, cols: 3, spacing: 'md' },
        { maxWidth: 755, cols: 2, spacing: 'sm' },
        { maxWidth: 600, cols: 1, spacing: 'sm' }
    ]}
    cols={3}
>
    <div>1</div>
    <div>2</div>
    <div>3</div>
    <div>4</div>
    <div>5</div>
</SimpleGrid>
`,Zt="demo",ea={code:Xt};class sa extends Fs{constructor(o){super(),Js(this,o,null,Qt,Ks,{})}}const ta=Object.freeze(Object.defineProperty({__proto__:null,configuration:ea,default:sa,type:Zt},Symbol.toStringTag,{value:"Module"}));function aa(h){let o,l,t,p,n,k,g,S,Ye,V,Ne,Fe,be,L,we,Y,Je,Ee,G,Ke,pe,Qe,Xe,ye,b,C,le,Ze,es,re,ss,ts,as,N,ie,ns,os,ps,F,ce,ls,rs,xe,J,is,Se,H,Ge,K,cs,Ce,$,E,us,ue,ms,fs,me,ds,ks,hs,Q,vs,fe,_s,gs,X,$s,de,bs,ws,Z,Es,ke,ys,Ie,ee,xs,Oe,I,Ss,he,Gs,Cs,Pe,j,yt=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SimpleGrid</span>
	<span class="token attr-name">breakpoints=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">[</span>
		<span class="token punctuation">&#123;</span> <span class="token literal-property property">minWidth</span><span class="token operator">:</span> <span class="token string">'sm'</span><span class="token punctuation">,</span> <span class="token literal-property property">cols</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
		<span class="token punctuation">&#123;</span> <span class="token literal-property property">minWidth</span><span class="token operator">:</span> <span class="token string">'md'</span><span class="token punctuation">,</span> <span class="token literal-property property">cols</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
		<span class="token punctuation">&#123;</span> <span class="token literal-property property">minWidth</span><span class="token operator">:</span> <span class="token number">1200</span><span class="token punctuation">,</span> <span class="token literal-property property">cols</span><span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">&#125;</span>
	<span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span>
<span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SimpleGrid</span><span class="token punctuation">></span></span></code>`,We,se,Is,De,O,Os,ve,Ps,Ws,Le,B,xt=`<code class="language-svelte">// xl spacing from theme.spacing
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SimpleGrid</span> <span class="token attr-name">spacing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>xl<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>; // 12px spacing
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SimpleGrid</span> <span class="token attr-name">spacing=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token number">12</span><span class="token punctuation">&#125;</span></span> <span class="token punctuation">/></span></span>;</code>`,He,P,Ds,_e,Ls,Hs,je,A,St=`<code class="language-svelte">// theme.spacing.xl
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SimpleGrid</span> <span class="token attr-name">breakpoints=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">maxWidth</span><span class="token operator">:</span> <span class="token number">755</span><span class="token punctuation">,</span> <span class="token literal-property property">cols</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">spacing</span><span class="token operator">:</span> <span class="token string">'xl'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span> <span class="token punctuation">/></span></span>; // 12px spacing
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SimpleGrid</span> <span class="token attr-name">breakpoints=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">maxWidth</span><span class="token operator">:</span> <span class="token number">755</span><span class="token punctuation">,</span> <span class="token literal-property property">cols</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">spacing</span><span class="token operator">:</span> <span class="token number">12</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span> <span class="token punctuation">/></span></span>;</code>`,Be,te,js,Ae,w,Bs,q,As,qs,z,zs,Us,ge;return document.title=o=Ns+" - SvelteUI",t=new Lt({props:{title:Ns,group:oa,packageGroup:pa,slug:la,category:ra,description:ia,importCode:ca,source:ua,docs:ma}}),L=new $t({props:{demo:Yt}}),H=new $t({props:{demo:ta}}),{c(){l=v(),U(t.$$.fragment),p=v(),n=m("h2"),k=r("Usage"),g=v(),S=m("p"),Ye=r("SimpleGrid is a simple flexbox container where each child is treated as a column. Each column takes equal amount of space and unlike "),V=m("a"),Ne=r("Grid"),Fe=r(" component, you do not control column span. Instead, you specify number of columns per row:"),be=v(),U(L.$$.fragment),we=v(),Y=m("h2"),Je=r("Breakpoints"),Ee=v(),G=m("p"),Ke=r("Provide an array to "),pe=m("code"),Qe=r("breakpoints"),Xe=r(" prop to define responsive behavior:"),ye=v(),b=m("ul"),C=m("li"),le=m("code"),Ze=r("maxWidth"),es=r(" or "),re=m("code"),ss=r("minWidth"),ts=r(" - max-width or min-width at which media query will work"),as=v(),N=m("li"),ie=m("code"),ns=r("cols"),os=r(" - number of columns per row at given max-width"),ps=v(),F=m("li"),ce=m("code"),ls=r("spacing"),rs=r(" - optional spacing at given max-width, if not provided spacing from component prop will be used instead"),xe=v(),J=m("p"),is=r("Resize browser to see breakpoints behavior:"),Se=v(),U(H.$$.fragment),Ge=v(),K=m("p"),cs=r("In this example:"),Ce=v(),$=m("ul"),E=m("li"),us=r("If screen width is more than 980px then component "),ue=m("code"),ms=r("cols"),fs=r(" and "),me=m("code"),ds=r("spacing"),ks=r(" is used - 4 columns, lg spacing"),hs=v(),Q=m("li"),vs=r("If screen width is less than 980px, more than 755px and the no of columns is 3, then the spacing will be "),fe=m("code"),_s=r("sm"),gs=v(),X=m("li"),$s=r("If screen width is less than 755px, more than 600px and the no of columns is 2, then the spacing will be "),de=m("code"),bs=r("sm"),ws=v(),Z=m("li"),Es=r("If screen width is less than 600px and the no of columns is 1, then the spacing will be "),ke=m("code"),ys=r("sm"),Ie=v(),ee=m("h2"),xs=r("min-width breakpoints"),Oe=v(),I=m("p"),Ss=r("If you prefer a mobile first approach, you can use "),he=m("code"),Gs=r("min-width"),Cs=r(" breakpoints:"),Pe=v(),j=m("pre"),We=v(),se=m("h2"),Is=r("Spacing"),De=v(),O=m("p"),Os=r("You can use either "),ve=m("code"),Ps=r("theme.spacing"),Ws=r(" value or number value for spacing in px:"),Le=v(),B=m("pre"),He=v(),P=m("p"),Ds=r("Spacing also works in "),_e=m("code"),Ls=r("breakpoints"),Hs=r(":"),je=v(),A=m("pre"),Be=v(),te=m("h2"),js=r("Browser support"),Ae=v(),w=m("p"),Bs=r("Simple grid uses "),q=m("a"),As=r("CSS Grid Layout"),qs=r(`,
check `),z=m("a"),zs=r("caniuse"),Us=r(" to find out information about browser support."),this.h()},l(e){Dt("svelte-pki6ul",document.head).forEach(s),l=_(e),R(t.$$.fragment,e),p=_(e),n=f(e,"H2",{});var Qs=d(n);k=i(Qs,"Usage"),Qs.forEach(s),g=_(e),S=f(e,"P",{});var qe=d(S);Ye=i(qe,"SimpleGrid is a simple flexbox container where each child is treated as a column. Each column takes equal amount of space and unlike "),V=f(qe,"A",{href:!0});var Xs=d(V);Ne=i(Xs,"Grid"),Xs.forEach(s),Fe=i(qe," component, you do not control column span. Instead, you specify number of columns per row:"),qe.forEach(s),be=_(e),R(L.$$.fragment,e),we=_(e),Y=f(e,"H2",{});var Zs=d(Y);Je=i(Zs,"Breakpoints"),Zs.forEach(s),Ee=_(e),G=f(e,"P",{});var ze=d(G);Ke=i(ze,"Provide an array to "),pe=f(ze,"CODE",{});var et=d(pe);Qe=i(et,"breakpoints"),et.forEach(s),Xe=i(ze," prop to define responsive behavior:"),ze.forEach(s),ye=_(e),b=f(e,"UL",{});var ae=d(b);C=f(ae,"LI",{});var $e=d(C);le=f($e,"CODE",{});var st=d(le);Ze=i(st,"maxWidth"),st.forEach(s),es=i($e," or "),re=f($e,"CODE",{});var tt=d(re);ss=i(tt,"minWidth"),tt.forEach(s),ts=i($e," - max-width or min-width at which media query will work"),$e.forEach(s),as=_(ae),N=f(ae,"LI",{});var Rs=d(N);ie=f(Rs,"CODE",{});var at=d(ie);ns=i(at,"cols"),at.forEach(s),os=i(Rs," - number of columns per row at given max-width"),Rs.forEach(s),ps=_(ae),F=f(ae,"LI",{});var Ts=d(F);ce=f(Ts,"CODE",{});var nt=d(ce);ls=i(nt,"spacing"),nt.forEach(s),rs=i(Ts," - optional spacing at given max-width, if not provided spacing from component prop will be used instead"),Ts.forEach(s),ae.forEach(s),xe=_(e),J=f(e,"P",{});var ot=d(J);is=i(ot,"Resize browser to see breakpoints behavior:"),ot.forEach(s),Se=_(e),R(H.$$.fragment,e),Ge=_(e),K=f(e,"P",{});var pt=d(K);cs=i(pt,"In this example:"),pt.forEach(s),Ce=_(e),$=f(e,"UL",{});var W=d($);E=f(W,"LI",{});var ne=d(E);us=i(ne,"If screen width is more than 980px then component "),ue=f(ne,"CODE",{});var lt=d(ue);ms=i(lt,"cols"),lt.forEach(s),fs=i(ne," and "),me=f(ne,"CODE",{});var rt=d(me);ds=i(rt,"spacing"),rt.forEach(s),ks=i(ne," is used - 4 columns, lg spacing"),ne.forEach(s),hs=_(W),Q=f(W,"LI",{});var Ms=d(Q);vs=i(Ms,"If screen width is less than 980px, more than 755px and the no of columns is 3, then the spacing will be "),fe=f(Ms,"CODE",{});var it=d(fe);_s=i(it,"sm"),it.forEach(s),Ms.forEach(s),gs=_(W),X=f(W,"LI",{});var Vs=d(X);$s=i(Vs,"If screen width is less than 755px, more than 600px and the no of columns is 2, then the spacing will be "),de=f(Vs,"CODE",{});var ct=d(de);bs=i(ct,"sm"),ct.forEach(s),Vs.forEach(s),ws=_(W),Z=f(W,"LI",{});var Ys=d(Z);Es=i(Ys,"If screen width is less than 600px and the no of columns is 1, then the spacing will be "),ke=f(Ys,"CODE",{});var ut=d(ke);ys=i(ut,"sm"),ut.forEach(s),Ys.forEach(s),W.forEach(s),Ie=_(e),ee=f(e,"H2",{});var mt=d(ee);xs=i(mt,"min-width breakpoints"),mt.forEach(s),Oe=_(e),I=f(e,"P",{});var Ue=d(I);Ss=i(Ue,"If you prefer a mobile first approach, you can use "),he=f(Ue,"CODE",{});var ft=d(he);Gs=i(ft,"min-width"),ft.forEach(s),Cs=i(Ue," breakpoints:"),Ue.forEach(s),Pe=_(e),j=f(e,"PRE",{class:!0});var Gt=d(j);Gt.forEach(s),We=_(e),se=f(e,"H2",{});var dt=d(se);Is=i(dt,"Spacing"),dt.forEach(s),De=_(e),O=f(e,"P",{});var Re=d(O);Os=i(Re,"You can use either "),ve=f(Re,"CODE",{});var kt=d(ve);Ps=i(kt,"theme.spacing"),kt.forEach(s),Ws=i(Re," value or number value for spacing in px:"),Re.forEach(s),Le=_(e),B=f(e,"PRE",{class:!0});var Ct=d(B);Ct.forEach(s),He=_(e),P=f(e,"P",{});var Te=d(P);Ds=i(Te,"Spacing also works in "),_e=f(Te,"CODE",{});var ht=d(_e);Ls=i(ht,"breakpoints"),ht.forEach(s),Hs=i(Te,":"),Te.forEach(s),je=_(e),A=f(e,"PRE",{class:!0});var It=d(A);It.forEach(s),Be=_(e),te=f(e,"H2",{});var vt=d(te);js=i(vt,"Browser support"),vt.forEach(s),Ae=_(e),w=f(e,"P",{});var oe=d(w);Bs=i(oe,"Simple grid uses "),q=f(oe,"A",{href:!0,rel:!0});var _t=d(q);As=i(_t,"CSS Grid Layout"),_t.forEach(s),qs=i(oe,`,
check `),z=f(oe,"A",{href:!0,rel:!0});var gt=d(z);zs=i(gt,"caniuse"),gt.forEach(s),Us=i(oe," to find out information about browser support."),oe.forEach(s),this.h()},h(){D(V,"href",Ht+"/core/grid/"),D(j,"class","language-svelte"),D(B,"class","language-svelte"),D(A,"class","language-svelte"),D(q,"href","https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout"),D(q,"rel","nofollow"),D(z,"href","https://caniuse.com/css-grid"),D(z,"rel","nofollow")},m(e,c){u(e,l,c),T(t,e,c),u(e,p,c),u(e,n,c),a(n,k),u(e,g,c),u(e,S,c),a(S,Ye),a(S,V),a(V,Ne),a(S,Fe),u(e,be,c),T(L,e,c),u(e,we,c),u(e,Y,c),a(Y,Je),u(e,Ee,c),u(e,G,c),a(G,Ke),a(G,pe),a(pe,Qe),a(G,Xe),u(e,ye,c),u(e,b,c),a(b,C),a(C,le),a(le,Ze),a(C,es),a(C,re),a(re,ss),a(C,ts),a(b,as),a(b,N),a(N,ie),a(ie,ns),a(N,os),a(b,ps),a(b,F),a(F,ce),a(ce,ls),a(F,rs),u(e,xe,c),u(e,J,c),a(J,is),u(e,Se,c),T(H,e,c),u(e,Ge,c),u(e,K,c),a(K,cs),u(e,Ce,c),u(e,$,c),a($,E),a(E,us),a(E,ue),a(ue,ms),a(E,fs),a(E,me),a(me,ds),a(E,ks),a($,hs),a($,Q),a(Q,vs),a(Q,fe),a(fe,_s),a($,gs),a($,X),a(X,$s),a(X,de),a(de,bs),a($,ws),a($,Z),a(Z,Es),a(Z,ke),a(ke,ys),u(e,Ie,c),u(e,ee,c),a(ee,xs),u(e,Oe,c),u(e,I,c),a(I,Ss),a(I,he),a(he,Gs),a(I,Cs),u(e,Pe,c),u(e,j,c),j.innerHTML=yt,u(e,We,c),u(e,se,c),a(se,Is),u(e,De,c),u(e,O,c),a(O,Os),a(O,ve),a(ve,Ps),a(O,Ws),u(e,Le,c),u(e,B,c),B.innerHTML=xt,u(e,He,c),u(e,P,c),a(P,Ds),a(P,_e),a(_e,Ls),a(P,Hs),u(e,je,c),u(e,A,c),A.innerHTML=St,u(e,Be,c),u(e,te,c),a(te,js),u(e,Ae,c),u(e,w,c),a(w,Bs),a(w,q),a(q,As),a(w,qs),a(w,z),a(z,zs),a(w,Us),ge=!0},p(e,[c]){(!ge||c&0)&&o!==(o=Ns+" - SvelteUI")&&(document.title=o)},i(e){ge||(y(t.$$.fragment,e),y(L.$$.fragment,e),y(H.$$.fragment,e),ge=!0)},o(e){x(t.$$.fragment,e),x(L.$$.fragment,e),x(H.$$.fragment,e),ge=!1},d(e){e&&s(l),M(t,e),e&&s(p),e&&s(n),e&&s(g),e&&s(S),e&&s(be),M(L,e),e&&s(we),e&&s(Y),e&&s(Ee),e&&s(G),e&&s(ye),e&&s(b),e&&s(xe),e&&s(J),e&&s(Se),M(H,e),e&&s(Ge),e&&s(K),e&&s(Ce),e&&s($),e&&s(Ie),e&&s(ee),e&&s(Oe),e&&s(I),e&&s(Pe),e&&s(j),e&&s(We),e&&s(se),e&&s(De),e&&s(O),e&&s(Le),e&&s(B),e&&s(He),e&&s(P),e&&s(je),e&&s(A),e&&s(Be),e&&s(te),e&&s(Ae),e&&s(w)}}}const na={title:"SimpleGrid",group:"svelteuidev-core",packageGroup:"@svelteuidev/core",slug:"/core/simple-grid/",category:"layout",description:"Responsive grid where each item takes equal amount of space",importCode:"import { SimpleGrid } from '@svelteuidev/core';",source:"svelteui-core/src/components/SimpleGrid/SimpleGrid.svelte",docs:"core/simple-grid.md"},{title:Ns,group:oa,packageGroup:pa,slug:la,category:ra,description:ia,importCode:ca,source:ua,docs:ma}=na;class $a extends Fs{constructor(o){super(),Js(this,o,null,aa,Ks,{})}}export{$a as default,na as metadata};
