import{S as F,i as R,s as J,y,a as d,z as b,c as g,A as k,b as i,g as p,d as m,B as h,h as a,v as Re,f as Je,q as f,r as $,u as Ke,k as w,al as Ze,l as O,m as T,n as ue,Y as v}from"../chunks/index.b0fe5a0f.js";import{B as Ie,G as Qe,T as je}from"../chunks/navigation.9bd98935.js";import{H as et}from"../chunks/Heading.19c03976.js";import{D as pe}from"../chunks/Demo.82a35c94.js";import{O as fe}from"../chunks/Overlay.9eb95081.js";import{B as $e}from"../chunks/Button.36168772.js";function qe(c){let t,o;return t=new fe({props:{opacity:.6,color:"#000",zIndex:5}}),{c(){y(t.$$.fragment)},l(e){b(t.$$.fragment,e)},m(e,s){k(t,e,s),o=!0},i(e){o||(p(t.$$.fragment,e),o=!0)},o(e){m(t.$$.fragment,e),o=!1},d(e){h(t,e)}}}function tt(c){let t=c[0]?"Won't click, haha":"Click as much as you like",o;return{c(){o=f(t)},l(e){o=$(e,t)},m(e,s){i(e,o,s)},p(e,s){s&1&&t!==(t=e[0]?"Won't click, haha":"Click as much as you like")&&Ke(o,t)},d(e){e&&a(o)}}}function nt(c){let t,o,e,s=c[0]&&qe();return o=new $e({props:{color:c[0]?"red":"teal",$$slots:{default:[tt]},$$scope:{ctx:c}}}),o.$on("click",c[2]),{c(){s&&s.c(),t=d(),y(o.$$.fragment)},l(n){s&&s.l(n),t=g(n),b(o.$$.fragment,n)},m(n,r){s&&s.m(n,r),i(n,t,r),k(o,n,r),e=!0},p(n,r){n[0]?s?r&1&&p(s,1):(s=qe(),s.c(),p(s,1),s.m(t.parentNode,t)):s&&(Re(),m(s,1,1,()=>{s=null}),Je());const _={};r&1&&(_.color=n[0]?"red":"teal"),r&17&&(_.$$scope={dirty:r,ctx:n}),o.$set(_)},i(n){e||(p(s),p(o.$$.fragment,n),e=!0)},o(n){m(s),m(o.$$.fragment,n),e=!1},d(n){s&&s.d(n),n&&a(t),h(o,n)}}}function ot(c){let t,o;return{c(){t=f("Count: "),o=f(c[1])},l(e){t=$(e,"Count: "),o=$(e,c[1])},m(e,s){i(e,t,s),i(e,o,s)},p(e,s){s&2&&Ke(o,e[1])},d(e){e&&a(t),e&&a(o)}}}function lt(c){let t;return{c(){t=f("Toggle overlay")},l(o){t=$(o,"Toggle overlay")},m(o,e){i(o,t,e)},d(o){o&&a(t)}}}function st(c){let t,o,e,s;return t=new je({props:{$$slots:{default:[ot]},$$scope:{ctx:c}}}),e=new $e({props:{$$slots:{default:[lt]},$$scope:{ctx:c}}}),e.$on("click",c[3]),{c(){y(t.$$.fragment),o=d(),y(e.$$.fragment)},l(n){b(t.$$.fragment,n),o=g(n),b(e.$$.fragment,n)},m(n,r){k(t,n,r),i(n,o,r),k(e,n,r),s=!0},p(n,r){const _={};r&18&&(_.$$scope={dirty:r,ctx:n}),t.$set(_);const x={};r&16&&(x.$$scope={dirty:r,ctx:n}),e.$set(x)},i(n){s||(p(t.$$.fragment,n),p(e.$$.fragment,n),s=!0)},o(n){m(t.$$.fragment,n),m(e.$$.fragment,n),s=!1},d(n){h(t,n),n&&a(o),h(e,n)}}}function at(c){let t,o,e,s;return t=new Ie({props:{css:{display:"flex",justifyContent:"center",height:60,position:"relative",textAlign:"center"},$$slots:{default:[nt]},$$scope:{ctx:c}}}),e=new Qe({props:{children:2,direction:"column",position:"center",$$slots:{default:[st]},$$scope:{ctx:c}}}),{c(){y(t.$$.fragment),o=d(),y(e.$$.fragment)},l(n){b(t.$$.fragment,n),o=g(n),b(e.$$.fragment,n)},m(n,r){k(t,n,r),i(n,o,r),k(e,n,r),s=!0},p(n,[r]){const _={};r&19&&(_.$$scope={dirty:r,ctx:n}),t.$set(_);const x={};r&19&&(x.$$scope={dirty:r,ctx:n}),e.$set(x)},i(n){s||(p(t.$$.fragment,n),p(e.$$.fragment,n),s=!0)},o(n){m(t.$$.fragment,n),m(e.$$.fragment,n),s=!1},d(n){h(t,n),n&&a(o),h(e,n)}}}const rt=`
<script>
	import { Box, Button, Group, Overlay, Text } from '@svelteuidev/core';

  let visible = false;
  let count = 0;
<\/script>

<Box>
    {#if visible}
        <Overlay opacity={0.6} color="#000" zIndex={5} />
    {/if}
    <Button on:click={() => count++} color={visible ? 'red' : 'teal'}>
        {!visible ? 'Click as much as you like' : "Won't click, haha"}
    </Button>
</Box>
<Group children={2} direction='column' position="center">
    <Text>Count: {count}</Text>
    <Button on:click={() => visible = !visible}>Toggle overlay</Button>
</Group>`,ct="demo",it={code:rt};function ut(c,t,o){let e=!1,s=0;return[e,s,()=>o(1,s++,s),()=>o(0,e=!e)]}class pt extends F{constructor(t){super(),R(this,t,ut,at,J,{})}}const ft=Object.freeze(Object.defineProperty({__proto__:null,configuration:it,default:pt,type:ct},Symbol.toStringTag,{value:"Module"}));function $t(c){let t;return{c(){t=f("This text is now selectable")},l(o){t=$(o,"This text is now selectable")},m(o,e){i(o,t,e)},d(o){o&&a(t)}}}function mt(c){let t,o;return t=new je({props:{override:{color:"white",marginTop:"10px"},$$slots:{default:[$t]},$$scope:{ctx:c}}}),{c(){y(t.$$.fragment)},l(e){b(t.$$.fragment,e)},m(e,s){k(t,e,s),o=!0},p(e,s){const n={};s&1&&(n.$$scope={dirty:s,ctx:e}),t.$set(n)},i(e){o||(p(t.$$.fragment,e),o=!0)},o(e){m(t.$$.fragment,e),o=!1},d(e){h(t,e)}}}function _t(c){let t,o;return t=new fe({props:{opacity:.6,color:"#000",zIndex:5,center:!0,$$slots:{default:[mt]},$$scope:{ctx:c}}}),{c(){y(t.$$.fragment)},l(e){b(t.$$.fragment,e)},m(e,s){k(t,e,s),o=!0},p(e,[s]){const n={};s&1&&(n.$$scope={dirty:s,ctx:e}),t.$set(n)},i(e){o||(p(t.$$.fragment,e),o=!0)},o(e){m(t.$$.fragment,e),o=!1},d(e){h(t,e)}}}const vt=`<script>
	import { Overlay, Text } from '@svelteuidev/core';
<\/script>

<Overlay opacity={0.6} color="#000" zIndex={5} center>
	<Text>This text is now selectable</Text>
</Overlay>
`,dt="demo",gt={code:vt};class yt extends F{constructor(t){super(),R(this,t,null,_t,J,{})}}const bt=Object.freeze(Object.defineProperty({__proto__:null,configuration:gt,default:yt,type:dt},Symbol.toStringTag,{value:"Module"}));function kt(c){let t;return{c(){t=f("Under overlay")},l(o){t=$(o,"Under overlay")},m(o,e){i(o,t,e)},d(o){o&&a(t)}}}function ht(c){let t,o,e,s;return t=new $e({props:{$$slots:{default:[kt]},$$scope:{ctx:c}}}),e=new fe({props:{gradient:"linear-gradient(105deg, black 20%, #312f2f 50%, $gray400 100%)"}}),{c(){y(t.$$.fragment),o=d(),y(e.$$.fragment)},l(n){b(t.$$.fragment,n),o=g(n),b(e.$$.fragment,n)},m(n,r){k(t,n,r),i(n,o,r),k(e,n,r),s=!0},p(n,r){const _={};r&1&&(_.$$scope={dirty:r,ctx:n}),t.$set(_)},i(n){s||(p(t.$$.fragment,n),p(e.$$.fragment,n),s=!0)},o(n){m(t.$$.fragment,n),m(e.$$.fragment,n),s=!1},d(n){h(t,n),n&&a(o),h(e,n)}}}function xt(c){let t,o;return t=new Ie({props:{css:{position:"relative",height:200,width:"100%",maxWidth:400,marginLeft:"auto",marginRight:"auto",display:"flex",alignItems:"center",justifyContent:"center"},$$slots:{default:[ht]},$$scope:{ctx:c}}}),{c(){y(t.$$.fragment)},l(e){b(t.$$.fragment,e)},m(e,s){k(t,e,s),o=!0},p(e,[s]){const n={};s&1&&(n.$$scope={dirty:s,ctx:e}),t.$set(n)},i(e){o||(p(t.$$.fragment,e),o=!0)},o(e){m(t.$$.fragment,e),o=!1},d(e){h(t,e)}}}const wt=`<script>
	import { Box, Button, Overlay } from '@svelteuidev/core';
<\/script>

<Box>
    <Button>Under overlay</Button>
    <Overlay gradient={'linear-gradient(105deg, black 20%, #312f2f 50%, $gray400 100%)''} />
</Box>`,Ot="demo",Tt={code:wt};class Bt extends F{constructor(t){super(),R(this,t,null,xt,J,{})}}const Ct=Object.freeze(Object.defineProperty({__proto__:null,configuration:Tt,default:Bt,type:Ot},Symbol.toStringTag,{value:"Module"}));function Fe(c){let t,o;return t=new fe({props:{opacity:.6,color:"#000",zIndex:5,blur:2}}),{c(){y(t.$$.fragment)},l(e){b(t.$$.fragment,e)},m(e,s){k(t,e,s),o=!0},i(e){o||(p(t.$$.fragment,e),o=!0)},o(e){m(t.$$.fragment,e),o=!1},d(e){h(t,e)}}}function Et(c){let t;return{c(){t=f("Overlay with a blur")},l(o){t=$(o,"Overlay with a blur")},m(o,e){i(o,t,e)},d(o){o&&a(t)}}}function St(c){let t,o,e,s=c[0]&&Fe();return o=new je({props:{align:"center",$$slots:{default:[Et]},$$scope:{ctx:c}}}),{c(){s&&s.c(),t=d(),y(o.$$.fragment)},l(n){s&&s.l(n),t=g(n),b(o.$$.fragment,n)},m(n,r){s&&s.m(n,r),i(n,t,r),k(o,n,r),e=!0},p(n,r){n[0]?s?r&1&&p(s,1):(s=Fe(),s.c(),p(s,1),s.m(t.parentNode,t)):s&&(Re(),m(s,1,1,()=>{s=null}),Je());const _={};r&4&&(_.$$scope={dirty:r,ctx:n}),o.$set(_)},i(n){e||(p(s),p(o.$$.fragment,n),e=!0)},o(n){m(s),m(o.$$.fragment,n),e=!1},d(n){s&&s.d(n),n&&a(t),h(o,n)}}}function zt(c){let t;return{c(){t=f("Toggle overlay")},l(o){t=$(o,"Toggle overlay")},m(o,e){i(o,t,e)},d(o){o&&a(t)}}}function It(c){let t,o;return t=new $e({props:{$$slots:{default:[zt]},$$scope:{ctx:c}}}),t.$on("click",c[1]),{c(){y(t.$$.fragment)},l(e){b(t.$$.fragment,e)},m(e,s){k(t,e,s),o=!0},p(e,s){const n={};s&4&&(n.$$scope={dirty:s,ctx:e}),t.$set(n)},i(e){o||(p(t.$$.fragment,e),o=!0)},o(e){m(t.$$.fragment,e),o=!1},d(e){h(t,e)}}}function jt(c){let t,o,e,s;return t=new Ie({props:{css:{height:50,position:"relative"},$$slots:{default:[St]},$$scope:{ctx:c}}}),e=new Qe({props:{children:1,position:"center",$$slots:{default:[It]},$$scope:{ctx:c}}}),{c(){y(t.$$.fragment),o=d(),y(e.$$.fragment)},l(n){b(t.$$.fragment,n),o=g(n),b(e.$$.fragment,n)},m(n,r){k(t,n,r),i(n,o,r),k(e,n,r),s=!0},p(n,[r]){const _={};r&5&&(_.$$scope={dirty:r,ctx:n}),t.$set(_);const x={};r&5&&(x.$$scope={dirty:r,ctx:n}),e.$set(x)},i(n){s||(p(t.$$.fragment,n),p(e.$$.fragment,n),s=!0)},o(n){m(t.$$.fragment,n),m(e.$$.fragment,n),s=!1},d(n){h(t,n),n&&a(o),h(e,n)}}}const Pt=`<script>
	import { Box, Button, Group, Overlay } from '@svelteuidev/core';

  let visible = false;
<\/script>

<Box>
    {#if visible}
        <Overlay opacity={0.6} color="#000" zIndex={5} blur={2} />
    {/if}
    Overlay with a blur
</Box>

<Group children={1} position="center">
    <Button on:click={() => visible = !visible}>Toggle overlay</Button>
</Group>`,Gt="demo",Ut={code:Pt};function At(c,t,o){let e=!1;return[e,()=>o(0,e=!e)]}class Ht extends F{constructor(t){super(),R(this,t,At,jt,J,{})}}const Wt=Object.freeze(Object.defineProperty({__proto__:null,configuration:Ut,default:Ht,type:Gt},Symbol.toStringTag,{value:"Module"}));function Mt(c){let t,o,e,s,n,r,_,x,me,G,_e,ve,K,U,de,Q,E,V,A,ge,X,C,ye,L,be,ke,Z,S,ee,H,he,te,z,ne,W,xe,oe,B,we,N,Oe,Te,I,Be,Ce,le,j,se,M,Ee,ae,D,Se,re,P,Ve=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Overlay<span class="token punctuation">,</span> Anchor <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@svelteuidev/core'</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Overlay</span> <span class="token attr-name">root</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>a<span class="token punctuation">'</span></span><span class="token punctuation">></span></span> href="#" />
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Overlay</span> <span class="token attr-name">root=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span>Anchor<span class="token punctuation">&#125;</span></span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/hello<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code>`,q;return document.title=t=ze+" - SvelteUI",e=new et({props:{title:ze,group:Yt,packageGroup:Lt,slug:Nt,category:qt,description:Ft,importCode:Rt,source:Jt,docs:Kt}}),E=new pe({props:{demo:ft}}),S=new pe({props:{demo:bt}}),z=new pe({props:{demo:Ct}}),j=new pe({props:{demo:Wt}}),{c(){o=d(),y(e.$$.fragment),s=d(),n=w("h2"),r=f("Usage"),_=d(),x=w("p"),me=f(`Overlay has absolute position and will take 100% of width and height of parent container.
It is used to build components like `),G=w("a"),_e=f("Modal"),ve=f(" and LoadingOverlay (not yet implemented)."),K=d(),U=w("p"),de=f("You can change overlay opacity (from 0 to 1), color (CSS color value, not connected to SvelteUI theme) and z-index (number)."),Q=d(),y(E.$$.fragment),V=d(),A=w("h2"),ge=f("Display Content"),X=d(),C=w("p"),ye=f("Overlay has a default slot that allows you to display any content over the overlay. A "),L=w("code"),be=f("center"),ke=f(" prop can be used to center the content horizontally."),Z=d(),y(S.$$.fragment),ee=d(),H=w("h2"),he=f("With gradient"),te=d(),y(z.$$.fragment),ne=d(),W=w("h2"),xe=f("With blur"),oe=d(),B=w("p"),we=f("To blur the overlay backdrop, set the "),N=w("code"),Oe=f("blur"),Te=f(` prop with a number. This will set the backdrop blur in px.
Note that blur `),I=w("a"),Be=f("is not supported in Firefox"),Ce=f("."),le=d(),y(j.$$.fragment),se=d(),M=w("h2"),Ee=f("Custom component"),ae=d(),D=w("p"),Se=f("You can pass custom tag or component that will be used as root element:"),re=d(),P=w("pre"),this.h()},l(l){Ze("svelte-pki6ul",document.head).forEach(a),o=g(l),b(e.$$.fragment,l),s=g(l),n=O(l,"H2",{});var Pe=T(n);r=$(Pe,"Usage"),Pe.forEach(a),_=g(l),x=O(l,"P",{});var ce=T(x);me=$(ce,`Overlay has absolute position and will take 100% of width and height of parent container.
It is used to build components like `),G=O(ce,"A",{href:!0});var Ge=T(G);_e=$(Ge,"Modal"),Ge.forEach(a),ve=$(ce," and LoadingOverlay (not yet implemented)."),ce.forEach(a),K=g(l),U=O(l,"P",{});var Ue=T(U);de=$(Ue,"You can change overlay opacity (from 0 to 1), color (CSS color value, not connected to SvelteUI theme) and z-index (number)."),Ue.forEach(a),Q=g(l),b(E.$$.fragment,l),V=g(l),A=O(l,"H2",{});var Ae=T(A);ge=$(Ae,"Display Content"),Ae.forEach(a),X=g(l),C=O(l,"P",{});var ie=T(C);ye=$(ie,"Overlay has a default slot that allows you to display any content over the overlay. A "),L=O(ie,"CODE",{});var He=T(L);be=$(He,"center"),He.forEach(a),ke=$(ie," prop can be used to center the content horizontally."),ie.forEach(a),Z=g(l),b(S.$$.fragment,l),ee=g(l),H=O(l,"H2",{});var We=T(H);he=$(We,"With gradient"),We.forEach(a),te=g(l),b(z.$$.fragment,l),ne=g(l),W=O(l,"H2",{});var Me=T(W);xe=$(Me,"With blur"),Me.forEach(a),oe=g(l),B=O(l,"P",{});var Y=T(B);we=$(Y,"To blur the overlay backdrop, set the "),N=O(Y,"CODE",{});var De=T(N);Oe=$(De,"blur"),De.forEach(a),Te=$(Y,` prop with a number. This will set the backdrop blur in px.
Note that blur `),I=O(Y,"A",{href:!0,rel:!0});var Ye=T(I);Be=$(Ye,"is not supported in Firefox"),Ye.forEach(a),Ce=$(Y,"."),Y.forEach(a),le=g(l),b(j.$$.fragment,l),se=g(l),M=O(l,"H2",{});var Le=T(M);Ee=$(Le,"Custom component"),Le.forEach(a),ae=g(l),D=O(l,"P",{});var Ne=T(D);Se=$(Ne,"You can pass custom tag or component that will be used as root element:"),Ne.forEach(a),re=g(l),P=O(l,"PRE",{class:!0});var Xe=T(P);Xe.forEach(a),this.h()},h(){ue(G,"href","/core/modal/"),ue(I,"href","https://caniuse.com/css-backdrop-filter"),ue(I,"rel","nofollow"),ue(P,"class","language-svelte")},m(l,u){i(l,o,u),k(e,l,u),i(l,s,u),i(l,n,u),v(n,r),i(l,_,u),i(l,x,u),v(x,me),v(x,G),v(G,_e),v(x,ve),i(l,K,u),i(l,U,u),v(U,de),i(l,Q,u),k(E,l,u),i(l,V,u),i(l,A,u),v(A,ge),i(l,X,u),i(l,C,u),v(C,ye),v(C,L),v(L,be),v(C,ke),i(l,Z,u),k(S,l,u),i(l,ee,u),i(l,H,u),v(H,he),i(l,te,u),k(z,l,u),i(l,ne,u),i(l,W,u),v(W,xe),i(l,oe,u),i(l,B,u),v(B,we),v(B,N),v(N,Oe),v(B,Te),v(B,I),v(I,Be),v(B,Ce),i(l,le,u),k(j,l,u),i(l,se,u),i(l,M,u),v(M,Ee),i(l,ae,u),i(l,D,u),v(D,Se),i(l,re,u),i(l,P,u),P.innerHTML=Ve,q=!0},p(l,[u]){(!q||u&0)&&t!==(t=ze+" - SvelteUI")&&(document.title=t)},i(l){q||(p(e.$$.fragment,l),p(E.$$.fragment,l),p(S.$$.fragment,l),p(z.$$.fragment,l),p(j.$$.fragment,l),q=!0)},o(l){m(e.$$.fragment,l),m(E.$$.fragment,l),m(S.$$.fragment,l),m(z.$$.fragment,l),m(j.$$.fragment,l),q=!1},d(l){l&&a(o),h(e,l),l&&a(s),l&&a(n),l&&a(_),l&&a(x),l&&a(K),l&&a(U),l&&a(Q),h(E,l),l&&a(V),l&&a(A),l&&a(X),l&&a(C),l&&a(Z),h(S,l),l&&a(ee),l&&a(H),l&&a(te),h(z,l),l&&a(ne),l&&a(W),l&&a(oe),l&&a(B),l&&a(le),h(j,l),l&&a(se),l&&a(M),l&&a(ae),l&&a(D),l&&a(re),l&&a(P)}}}const Dt={title:"Overlay",group:"svelteuidev-core",packageGroup:"@svelteuidev/core",slug:"/core/overlay/",category:"overlay",description:"Overlays given element with div element with any color and opacity",importCode:"import { Overlay } from '@svelteuidev/core';",source:"svelteui-core/src/components/Overlay/Overlay.svelte",docs:"core/overlay.md"},{title:ze,group:Yt,packageGroup:Lt,slug:Nt,category:qt,description:Ft,importCode:Rt,source:Jt,docs:Kt}=Dt;class nn extends F{constructor(t){super(),R(this,t,null,Mt,J,{})}}export{nn as default,Dt as metadata};
