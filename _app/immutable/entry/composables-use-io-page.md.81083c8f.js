import{S as za,i as Ga,s as Ja,y as He,z as Pe,A as Ie,g as Me,d as Re,B as Se,k as s,l as o,m as n,h as t,p as Ba,b as v,Y as e,J as es,a1 as ts,E as as,q as p,r as c,u as ss,a as i,al as os,c as d,n as Fa}from"../chunks/index.b0fe5a0f.js";import{T as ns}from"../chunks/navigation.618498c8.js";import{H as rs}from"../chunks/Heading.a23d207d.js";import"../chunks/paths.48415ce3.js";import{D as ls}from"../chunks/Demo.7e60bc72.js";import{P as Ka}from"../chunks/Paper.307217f5.js";import{i as ps}from"../chunks/use-io.276aac80.js";function cs(_){let l=_[0]?"Fully visible":"Obscured",u;return{c(){u=p(l)},l(r){u=c(r,l)},m(r,h){v(r,u,h)},p(r,h){h&1&&l!==(l=r[0]?"Fully visible":"Obscured")&&ss(u,l)},d(r){r&&t(u)}}}function is(_){let l,u;return l=new ns({props:{override:{color:"white"},weight:"extrabold",$$slots:{default:[cs]},$$scope:{ctx:_}}}),{c(){He(l.$$.fragment)},l(r){Pe(l.$$.fragment,r)},m(r,h){Ie(l,r,h),u=!0},p(r,h){const m={};h&5&&(m.$$scope={dirty:h,ctx:r}),l.$set(m)},i(r){u||(Me(l.$$.fragment,r),u=!0)},o(r){Re(l.$$.fragment,r),u=!1},d(r){Se(l,r)}}}function ds(_){let l,u,r,h,m,V;return r=new Ka({props:{override:{bc:_[0]?"$green900":"$red900",minW:"50%"},padding:"xl",$$slots:{default:[is]},$$scope:{ctx:_}}}),{c(){l=s("div"),u=s("div"),He(r.$$.fragment),this.h()},l(k){l=o(k,"DIV",{style:!0});var b=n(l);u=o(b,"DIV",{});var D=n(u);Pe(r.$$.fragment,D),D.forEach(t),b.forEach(t),this.h()},h(){Ba(l,"padding-top","260px"),Ba(l,"padding-bottom","280px")},m(k,b){v(k,l,b),e(l,u),Ie(r,u,null),h=!0,m||(V=[es(ps.call(null,u,{threshold:1})),ts(u,"change",_[1])],m=!0)},p(k,b){const D={};b&1&&(D.override={bc:k[0]?"$green900":"$red900",minW:"50%"}),b&5&&(D.$$scope={dirty:b,ctx:k}),r.$set(D)},i(k){h||(Me(r.$$.fragment,k),h=!0)},o(k){Re(r.$$.fragment,k),h=!1},d(k){k&&t(l),Se(r),m=!1,as(V)}}}function us(_){let l,u;return l=new Ka({props:{override:{overflowY:"scroll",h:300},$$slots:{default:[ds]},$$scope:{ctx:_}}}),{c(){He(l.$$.fragment)},l(r){Pe(l.$$.fragment,r)},m(r,h){Ie(l,r,h),u=!0},p(r,[h]){const m={};h&5&&(m.$$scope={dirty:h,ctx:r}),l.$set(m)},i(r){u||(Me(l.$$.fragment,r),u=!0)},o(r){Re(l.$$.fragment,r),u=!1},d(r){Se(l,r)}}}const fs=`
<script>
	import { Paper, Text } from '@svelteuidev/core';
	import { io } from '@svelteuidev/composables';

	let visible;
	const handleChange = ({ detail }) => (visible = detail.inView);
<\/script>

<Paper override={{ overflowY: 'scroll', h: 300 }}>
	<div style="padding-top: 260px; padding-bottom: 280px;">
		<div use:io={{ threshold: 1 }} on:change={handleChange}>
			<Paper override={{ bc: visible ? '$green900' : '$red900', minW: '50%' }} padding="xl">
				<Text override={{ color: 'white' }} weight="extrabold">
					{visible ? 'Fully visible' : 'Obscured'}
				</Text>
			</Paper>
		</div>
	</div>
</Paper>
`,hs="demo",vs={code:fs,spacing:!1};function ms(_,l,u){let r;return[r,({detail:m})=>u(0,r=m.inView)]}class ks extends za{constructor(l){super(),Ga(this,l,ms,us,Ja,{})}}const bs=Object.freeze(Object.defineProperty({__proto__:null,configuration:vs,default:ks,type:hs},Symbol.toStringTag,{value:"Module"}));function _s(_){let l,u,r,h,m,V,k,b,D,Y,Je,Ke,je,S,Ae,U,Ne,Le,I,B,E,F,Qe,Xe,z,Ze,et,G,tt,at,J,st,ot,K,nt,rt,T,y,N,lt,pt,Q,X,ct,it,Z,ee,dt,ut,te,ft,ht,ae,se,vt,mt,$,oe,kt,bt,ne,re,_t,Et,le,pe,yt,$t,ce,gt,wt,ie,de,Tt,Dt,g,ue,xt,Ct,j,fe,Ot,Ht,he,Pt,It,ve,me,Mt,Rt,ke,St,jt,be,_e,At,Lt,w,Ee,Vt,Ut,ye,$e,Wt,qt,ge,we,Yt,Bt,Te,Ft,zt,De,xe,Gt,Ve,W,Jt,Ue,M,Kt,Ce,Nt,Qt,We,A,Na=`<code class="language-js"><span class="token literal-property property">on</span><span class="token operator">:</span>useclipboard<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">any</span><span class="token punctuation">)</span> <span class="token operator">=></span> unknown<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token literal-property property">on</span><span class="token operator">:</span>change<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">any</span><span class="token punctuation">)</span> <span class="token operator">=></span> unknown<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token literal-property property">on</span><span class="token operator">:</span>enter<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">any</span><span class="token punctuation">)</span> <span class="token operator">=></span> unknown<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token literal-property property">on</span><span class="token operator">:</span>leave<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">any</span><span class="token punctuation">)</span> <span class="token operator">=></span> unknown<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token literal-property property">on</span><span class="token operator">:</span>init<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">any</span><span class="token punctuation">)</span> <span class="token operator">=></span> unknown<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span></code>`,qe,q,Xt,Ye,L,Qa='<code class="language-js"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">io</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">node</span><span class="token operator">:</span> HTMLElement<span class="token punctuation">,</span> options<span class="token operator">?</span><span class="token operator">:</span> Options</span><span class="token punctuation">)</span><span class="token operator">:</span> ReturnType<span class="token operator">&lt;</span>Action<span class="token operator">></span><span class="token punctuation">;</span></code>',Oe;return document.title=l=Zt+" - SvelteUI",r=new rs({props:{title:Zt,group:ys,packageGroup:$s,slug:gs,description:ws,importCode:Ts,docs:Ds,source:xs}}),S=new ls({props:{demo:bs}}),{c(){u=i(),He(r.$$.fragment),h=i(),m=s("h2"),V=p("Usage"),k=i(),b=s("p"),D=p("With the Intersection Observer API, "),Y=s("code"),Je=p("use-intersection"),Ke=p(" gets information about the intersection of a given element with its scroll container or body element:"),je=i(),He(S.$$.fragment),Ae=i(),U=s("h2"),Ne=p("Params"),Le=i(),I=s("table"),B=s("thead"),E=s("tr"),F=s("th"),Qe=p("me"),Xe=i(),z=s("th"),Ze=p("Type"),et=i(),G=s("th"),tt=p("Default"),at=i(),J=s("th"),st=p("Description"),ot=i(),K=s("th"),nt=p("Required"),rt=i(),T=s("tbody"),y=s("tr"),N=s("td"),lt=p("options.root"),pt=i(),Q=s("td"),X=s("code"),ct=p("HTMLElement"),it=i(),Z=s("td"),ee=s("code"),dt=p("window"),ut=i(),te=s("td"),ft=p("The element that is used as the viewport for checking visibility of the target. Must be the ancestor of the target."),ht=i(),ae=s("td"),se=s("code"),vt=p("false"),mt=i(),$=s("tr"),oe=s("td"),kt=p("options.rootMargin"),bt=i(),ne=s("td"),re=s("code"),_t=p("string"),Et=i(),le=s("td"),pe=s("code"),yt=p("0px"),$t=i(),ce=s("td"),gt=p("Margin around the root element. Values similar to the CSS margin property, e.g. “10px 20px 30px 40px”. Can also be a percentage."),wt=i(),ie=s("td"),de=s("code"),Tt=p("false"),Dt=i(),g=s("tr"),ue=s("td"),xt=p("options.threshold"),Ct=i(),j=s("td"),fe=s("code"),Ot=p("number"),Ht=p(" or "),he=s("code"),Pt=p("number[]"),It=i(),ve=s("td"),me=s("code"),Mt=p("0"),Rt=i(),ke=s("td"),St=p("Either a single number or an array of numbers which indicate at what percentage of the target’s visibility the observer’s callback should be executed. If you only want to detect when visibility passes the 50% mark, you can use a value of 0.5. If you want the callback to run every time visibility passes another 25%, you would specify the array [0, 0.25, 0.5, 0.75, 1]. The default is 0 (meaning as soon as even one pixel is visible, the callback will be run)"),jt=i(),be=s("td"),_e=s("code"),At=p("false"),Lt=i(),w=s("tr"),Ee=s("td"),Vt=p("options.unobserveOnEnter"),Ut=i(),ye=s("td"),$e=s("code"),Wt=p("boolean"),qt=i(),ge=s("td"),we=s("code"),Yt=p("false"),Bt=i(),Te=s("td"),Ft=p("If true, target element stops being observed after the first time it appears in the viewport. Can be used when you want to fire the callback only once."),zt=i(),De=s("td"),xe=s("code"),Gt=p("false"),Ve=i(),W=s("h2"),Jt=p("Events"),Ue=i(),M=s("p"),Kt=p("The "),Ce=s("code"),Nt=p("use-clipboard"),Qt=p(" action dispatches custom events. Each custom event takes a callback function just like other events."),We=i(),A=s("pre"),qe=i(),q=s("h2"),Xt=p("Definition"),Ye=i(),L=s("pre"),this.h()},l(a){os("svelte-pki6ul",document.head).forEach(t),u=d(a),Pe(r.$$.fragment,a),h=d(a),m=o(a,"H2",{});var ea=n(m);V=c(ea,"Usage"),ea.forEach(t),k=d(a),b=o(a,"P",{});var Be=n(b);D=c(Be,"With the Intersection Observer API, "),Y=o(Be,"CODE",{});var ta=n(Y);Je=c(ta,"use-intersection"),ta.forEach(t),Ke=c(Be," gets information about the intersection of a given element with its scroll container or body element:"),Be.forEach(t),je=d(a),Pe(S.$$.fragment,a),Ae=d(a),U=o(a,"H2",{});var aa=n(U);Ne=c(aa,"Params"),aa.forEach(t),Le=d(a),I=o(a,"TABLE",{});var Fe=n(I);B=o(Fe,"THEAD",{});var sa=n(B);E=o(sa,"TR",{});var x=n(E);F=o(x,"TH",{});var oa=n(F);Qe=c(oa,"me"),oa.forEach(t),Xe=d(x),z=o(x,"TH",{});var na=n(z);Ze=c(na,"Type"),na.forEach(t),et=d(x),G=o(x,"TH",{});var ra=n(G);tt=c(ra,"Default"),ra.forEach(t),at=d(x),J=o(x,"TH",{});var la=n(J);st=c(la,"Description"),la.forEach(t),ot=d(x),K=o(x,"TH",{});var pa=n(K);nt=c(pa,"Required"),pa.forEach(t),x.forEach(t),sa.forEach(t),rt=d(Fe),T=o(Fe,"TBODY",{});var R=n(T);y=o(R,"TR",{});var C=n(y);N=o(C,"TD",{});var ca=n(N);lt=c(ca,"options.root"),ca.forEach(t),pt=d(C),Q=o(C,"TD",{});var ia=n(Q);X=o(ia,"CODE",{});var da=n(X);ct=c(da,"HTMLElement"),da.forEach(t),ia.forEach(t),it=d(C),Z=o(C,"TD",{});var ua=n(Z);ee=o(ua,"CODE",{});var fa=n(ee);dt=c(fa,"window"),fa.forEach(t),ua.forEach(t),ut=d(C),te=o(C,"TD",{});var ha=n(te);ft=c(ha,"The element that is used as the viewport for checking visibility of the target. Must be the ancestor of the target."),ha.forEach(t),ht=d(C),ae=o(C,"TD",{});var va=n(ae);se=o(va,"CODE",{});var ma=n(se);vt=c(ma,"false"),ma.forEach(t),va.forEach(t),C.forEach(t),mt=d(R),$=o(R,"TR",{});var O=n($);oe=o(O,"TD",{});var ka=n(oe);kt=c(ka,"options.rootMargin"),ka.forEach(t),bt=d(O),ne=o(O,"TD",{});var ba=n(ne);re=o(ba,"CODE",{});var _a=n(re);_t=c(_a,"string"),_a.forEach(t),ba.forEach(t),Et=d(O),le=o(O,"TD",{});var Ea=n(le);pe=o(Ea,"CODE",{});var ya=n(pe);yt=c(ya,"0px"),ya.forEach(t),Ea.forEach(t),$t=d(O),ce=o(O,"TD",{});var $a=n(ce);gt=c($a,"Margin around the root element. Values similar to the CSS margin property, e.g. “10px 20px 30px 40px”. Can also be a percentage."),$a.forEach(t),wt=d(O),ie=o(O,"TD",{});var ga=n(ie);de=o(ga,"CODE",{});var wa=n(de);Tt=c(wa,"false"),wa.forEach(t),ga.forEach(t),O.forEach(t),Dt=d(R),g=o(R,"TR",{});var H=n(g);ue=o(H,"TD",{});var Ta=n(ue);xt=c(Ta,"options.threshold"),Ta.forEach(t),Ct=d(H),j=o(H,"TD",{});var ze=n(j);fe=o(ze,"CODE",{});var Da=n(fe);Ot=c(Da,"number"),Da.forEach(t),Ht=c(ze," or "),he=o(ze,"CODE",{});var xa=n(he);Pt=c(xa,"number[]"),xa.forEach(t),ze.forEach(t),It=d(H),ve=o(H,"TD",{});var Ca=n(ve);me=o(Ca,"CODE",{});var Oa=n(me);Mt=c(Oa,"0"),Oa.forEach(t),Ca.forEach(t),Rt=d(H),ke=o(H,"TD",{});var Ha=n(ke);St=c(Ha,"Either a single number or an array of numbers which indicate at what percentage of the target’s visibility the observer’s callback should be executed. If you only want to detect when visibility passes the 50% mark, you can use a value of 0.5. If you want the callback to run every time visibility passes another 25%, you would specify the array [0, 0.25, 0.5, 0.75, 1]. The default is 0 (meaning as soon as even one pixel is visible, the callback will be run)"),Ha.forEach(t),jt=d(H),be=o(H,"TD",{});var Pa=n(be);_e=o(Pa,"CODE",{});var Ia=n(_e);At=c(Ia,"false"),Ia.forEach(t),Pa.forEach(t),H.forEach(t),Lt=d(R),w=o(R,"TR",{});var P=n(w);Ee=o(P,"TD",{});var Ma=n(Ee);Vt=c(Ma,"options.unobserveOnEnter"),Ma.forEach(t),Ut=d(P),ye=o(P,"TD",{});var Ra=n(ye);$e=o(Ra,"CODE",{});var Sa=n($e);Wt=c(Sa,"boolean"),Sa.forEach(t),Ra.forEach(t),qt=d(P),ge=o(P,"TD",{});var ja=n(ge);we=o(ja,"CODE",{});var Aa=n(we);Yt=c(Aa,"false"),Aa.forEach(t),ja.forEach(t),Bt=d(P),Te=o(P,"TD",{});var La=n(Te);Ft=c(La,"If true, target element stops being observed after the first time it appears in the viewport. Can be used when you want to fire the callback only once."),La.forEach(t),zt=d(P),De=o(P,"TD",{});var Va=n(De);xe=o(Va,"CODE",{});var Ua=n(xe);Gt=c(Ua,"false"),Ua.forEach(t),Va.forEach(t),P.forEach(t),R.forEach(t),Fe.forEach(t),Ve=d(a),W=o(a,"H2",{});var Wa=n(W);Jt=c(Wa,"Events"),Wa.forEach(t),Ue=d(a),M=o(a,"P",{});var Ge=n(M);Kt=c(Ge,"The "),Ce=o(Ge,"CODE",{});var qa=n(Ce);Nt=c(qa,"use-clipboard"),qa.forEach(t),Qt=c(Ge," action dispatches custom events. Each custom event takes a callback function just like other events."),Ge.forEach(t),We=d(a),A=o(a,"PRE",{class:!0});var Xa=n(A);Xa.forEach(t),qe=d(a),q=o(a,"H2",{});var Ya=n(q);Xt=c(Ya,"Definition"),Ya.forEach(t),Ye=d(a),L=o(a,"PRE",{class:!0});var Za=n(L);Za.forEach(t),this.h()},h(){Fa(A,"class","language-js"),Fa(L,"class","language-js")},m(a,f){v(a,u,f),Ie(r,a,f),v(a,h,f),v(a,m,f),e(m,V),v(a,k,f),v(a,b,f),e(b,D),e(b,Y),e(Y,Je),e(b,Ke),v(a,je,f),Ie(S,a,f),v(a,Ae,f),v(a,U,f),e(U,Ne),v(a,Le,f),v(a,I,f),e(I,B),e(B,E),e(E,F),e(F,Qe),e(E,Xe),e(E,z),e(z,Ze),e(E,et),e(E,G),e(G,tt),e(E,at),e(E,J),e(J,st),e(E,ot),e(E,K),e(K,nt),e(I,rt),e(I,T),e(T,y),e(y,N),e(N,lt),e(y,pt),e(y,Q),e(Q,X),e(X,ct),e(y,it),e(y,Z),e(Z,ee),e(ee,dt),e(y,ut),e(y,te),e(te,ft),e(y,ht),e(y,ae),e(ae,se),e(se,vt),e(T,mt),e(T,$),e($,oe),e(oe,kt),e($,bt),e($,ne),e(ne,re),e(re,_t),e($,Et),e($,le),e(le,pe),e(pe,yt),e($,$t),e($,ce),e(ce,gt),e($,wt),e($,ie),e(ie,de),e(de,Tt),e(T,Dt),e(T,g),e(g,ue),e(ue,xt),e(g,Ct),e(g,j),e(j,fe),e(fe,Ot),e(j,Ht),e(j,he),e(he,Pt),e(g,It),e(g,ve),e(ve,me),e(me,Mt),e(g,Rt),e(g,ke),e(ke,St),e(g,jt),e(g,be),e(be,_e),e(_e,At),e(T,Lt),e(T,w),e(w,Ee),e(Ee,Vt),e(w,Ut),e(w,ye),e(ye,$e),e($e,Wt),e(w,qt),e(w,ge),e(ge,we),e(we,Yt),e(w,Bt),e(w,Te),e(Te,Ft),e(w,zt),e(w,De),e(De,xe),e(xe,Gt),v(a,Ve,f),v(a,W,f),e(W,Jt),v(a,Ue,f),v(a,M,f),e(M,Kt),e(M,Ce),e(Ce,Nt),e(M,Qt),v(a,We,f),v(a,A,f),A.innerHTML=Na,v(a,qe,f),v(a,q,f),e(q,Xt),v(a,Ye,f),v(a,L,f),L.innerHTML=Qa,Oe=!0},p(a,[f]){(!Oe||f&0)&&l!==(l=Zt+" - SvelteUI")&&(document.title=l)},i(a){Oe||(Me(r.$$.fragment,a),Me(S.$$.fragment,a),Oe=!0)},o(a){Re(r.$$.fragment,a),Re(S.$$.fragment,a),Oe=!1},d(a){a&&t(u),Se(r,a),a&&t(h),a&&t(m),a&&t(k),a&&t(b),a&&t(je),Se(S,a),a&&t(Ae),a&&t(U),a&&t(Le),a&&t(I),a&&t(Ve),a&&t(W),a&&t(Ue),a&&t(M),a&&t(We),a&&t(A),a&&t(qe),a&&t(q),a&&t(Ye),a&&t(L)}}}const Es={title:"use-io",group:"svelteuidev-composables",packageGroup:"@svelteuidev/composables",slug:"/composables/use-io/",description:"Detect when an element enters or leaves the viewport.",importCode:"import { io } from '@svelteuidev/composables';",docs:"composables/use-io.md",source:"svelteui-composables/src/actions/use-io/use-io.ts"},{title:Zt,group:ys,packageGroup:$s,slug:gs,description:ws,importCode:Ts,docs:Ds,source:xs}=Es;class Ss extends za{constructor(l){super(),Ga(this,l,null,_s,Ja,{})}}export{Ss as default,Es as metadata};
