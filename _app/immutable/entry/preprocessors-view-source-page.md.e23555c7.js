import{S as Bs,i as Ms,s as Us,a as v,y as Ls,k as t,q as a,al as Rs,h as o,c as y,z as Ys,l as p,m as c,r as n,n as ts,b as u,A as Gs,Y as s,g as zs,d as Fs,B as Js}from"../chunks/index.b0fe5a0f.js";import"../chunks/navigation.9bd98935.js";import{H as Ks}from"../chunks/Heading.19c03976.js";function Qs(xs){let D,W,w,X,O,re,Z,C,ue,I,ie,de,ee,E,Ps=`<code class="language-js"><span class="token comment">// svelte.config.js</span>
<span class="token keyword">import</span> adapter <span class="token keyword">from</span> <span class="token string">'@sveltejs/adapter-auto'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> preprocess <span class="token keyword">from</span> <span class="token string">'svelte-preprocess'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> viewSource <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@svelteuidev/preprocessors'</span><span class="token punctuation">;</span>

<span class="token comment">/** @type &#123;import('@sveltejs/kit').Config&#125; */</span>
<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
	<span class="token literal-property property">preprocess</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">preprocess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">viewSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
	<span class="token comment">// ...rest of the config</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> config<span class="token punctuation">;</span></code>`,se,f,b,ke,me,j,fe,ve,x,ye,he,oe,g,qs=`<code class="language-js"><span class="token function">viewSource</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
	<span class="token literal-property property">sourceTagName</span><span class="token operator">:</span> <span class="token string">'ComponentOne'</span><span class="token punctuation">,</span>
	<span class="token literal-property property">displayTagName</span><span class="token operator">:</span> <span class="token string">'ComponentTwo'</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,ae,T,Ce,ne,k,we,P,Ee,ge,q,_e,Se,N,De,Oe,$,Te,Ie,te,_,Ns=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> SourceCode<span class="token punctuation">,</span> DisplaySourceCode <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@svelteuidev/preprocessors'</span><span class="token punctuation">;</span>
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Button <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@svelteuidev/core'</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SourceCode</span> <span class="token attr-name">sourceId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>demo<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>Click Me<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SourceCode</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DisplaySourceCode</span> <span class="token attr-name">sourceId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>demo<span class="token punctuation">'</span></span> <span class="token attr-name"><span class="token namespace">let:</span>source</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span><span class="token language-javascript"><span class="token punctuation">&#123;</span>source<span class="token punctuation">&#125;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DisplaySourceCode</span><span class="token punctuation">></span></span></code>`,pe,i,be,H,je,xe,A,Pe,qe,B,Ne,$e,M,He,Ae,U,Be,Me,L,Ue,Le,ce,r,Re,R,Ye,Ge,Y,ze,Fe,G,Je,Ke,z,Qe,Ve,F,We,Xe,J,Ze,es,K,ss,os,Q,as,ns,V;return document.title=D=ps+" - SvelteUI",w=new Ks({props:{title:ps,group:Ws,packageGroup:Xs,slug:Zs,description:eo,importCode:so,source:oo,docs:ao}}),{c(){W=v(),Ls(w.$$.fragment),X=v(),O=t("h2"),re=a("Setup"),Z=v(),C=t("p"),ue=a("Setting up the preprocessor requires you to place it in an array of preprocessors. It should come after "),I=t("code"),ie=a("svelte-preprocess"),de=a(" but before others."),ee=v(),E=t("pre"),se=v(),f=t("p"),b=t("code"),ke=a("viewSource"),me=a(" optionally accepts an options object containing two keys: "),j=t("code"),fe=a("sourceTagName"),ve=a(" and "),x=t("code"),ye=a("displayTagName"),he=a(", which can be used to set the component the preprocessor looks for (in case you want to rename the components when you import them, or make your own)."),oe=v(),g=t("pre"),ae=v(),T=t("h2"),Ce=a("Usage"),ne=v(),k=t("p"),we=a("The view-source preprocessor exports two components, "),P=t("code"),Ee=a("SourceCode"),ge=a(" and "),q=t("code"),_e=a("DisplaySourceCode"),Se=a(". You can write any code in a "),N=t("code"),De=a("SourceCode"),Oe=a(" component anywhere in your app. Once you want to display your source code, you can use a "),$=t("code"),Te=a("DisplaySourceCode"),Ie=a(" component."),te=v(),_=t("pre"),pe=v(),i=t("p"),be=a("The "),H=t("code"),je=a("SourceCode"),xe=a(" element contains the source code you want to display. It accepts one required prop, "),A=t("code"),Pe=a("sourceId"),qe=a(", that will tie it to its display component(s). The "),B=t("code"),Ne=a("sourceId"),$e=a(" prop must be unique across the .svelte file. No other "),M=t("code"),He=a("SourceCode"),Ae=a(" component can share it. A "),U=t("code"),Be=a("SourceCode"),Me=a(" element must have at least one corresponding "),L=t("code"),Ue=a("DisplaySourceCode"),Le=a(" element."),ce=v(),r=t("p"),Re=a("The "),R=t("code"),Ye=a("DisplaySourceCode"),Ge=a(" element will display whatever source code appears between the opening and closing tags of the "),Y=t("code"),ze=a("SourceCode"),Fe=a(" element. It will trim any leading or trailing blank lines and unindent the source code before passing it to a child component. If "),G=t("code"),Je=a("DisplaySourceCode"),Ke=a(" does not receive a slot, it will display the source code in a "),z=t("code"),Qe=a("pre"),Ve=a(" element. If it does receive a slot, it will pass that slot a "),F=t("code"),We=a("source"),Xe=a(" prop. This prop is a string containing the exact source code from "),J=t("code"),Ze=a("SourceCode"),es=a(". A "),K=t("code"),ss=a("DisplaySourceCode"),os=a(" element must have one and only one corresponding "),Q=t("code"),as=a("SourceCode"),ns=a(" element."),this.h()},l(e){Rs("svelte-pki6ul",document.head).forEach(o),W=y(e),Ys(w.$$.fragment,e),X=y(e),O=p(e,"H2",{});var cs=c(O);re=n(cs,"Setup"),cs.forEach(o),Z=y(e),C=p(e,"P",{});var le=c(C);ue=n(le,"Setting up the preprocessor requires you to place it in an array of preprocessors. It should come after "),I=p(le,"CODE",{});var ls=c(I);ie=n(ls,"svelte-preprocess"),ls.forEach(o),de=n(le," but before others."),le.forEach(o),ee=y(e),E=p(e,"PRE",{class:!0});var $s=c(E);$s.forEach(o),se=y(e),f=p(e,"P",{});var S=c(f);b=p(S,"CODE",{});var rs=c(b);ke=n(rs,"viewSource"),rs.forEach(o),me=n(S," optionally accepts an options object containing two keys: "),j=p(S,"CODE",{});var us=c(j);fe=n(us,"sourceTagName"),us.forEach(o),ve=n(S," and "),x=p(S,"CODE",{});var is=c(x);ye=n(is,"displayTagName"),is.forEach(o),he=n(S,", which can be used to set the component the preprocessor looks for (in case you want to rename the components when you import them, or make your own)."),S.forEach(o),oe=y(e),g=p(e,"PRE",{class:!0});var Hs=c(g);Hs.forEach(o),ae=y(e),T=p(e,"H2",{});var ds=c(T);Ce=n(ds,"Usage"),ds.forEach(o),ne=y(e),k=p(e,"P",{});var h=c(k);we=n(h,"The view-source preprocessor exports two components, "),P=p(h,"CODE",{});var ks=c(P);Ee=n(ks,"SourceCode"),ks.forEach(o),ge=n(h," and "),q=p(h,"CODE",{});var ms=c(q);_e=n(ms,"DisplaySourceCode"),ms.forEach(o),Se=n(h,". You can write any code in a "),N=p(h,"CODE",{});var fs=c(N);De=n(fs,"SourceCode"),fs.forEach(o),Oe=n(h," component anywhere in your app. Once you want to display your source code, you can use a "),$=p(h,"CODE",{});var vs=c($);Te=n(vs,"DisplaySourceCode"),vs.forEach(o),Ie=n(h," component."),h.forEach(o),te=y(e),_=p(e,"PRE",{class:!0});var As=c(_);As.forEach(o),pe=y(e),i=p(e,"P",{});var m=c(i);be=n(m,"The "),H=p(m,"CODE",{});var ys=c(H);je=n(ys,"SourceCode"),ys.forEach(o),xe=n(m," element contains the source code you want to display. It accepts one required prop, "),A=p(m,"CODE",{});var hs=c(A);Pe=n(hs,"sourceId"),hs.forEach(o),qe=n(m,", that will tie it to its display component(s). The "),B=p(m,"CODE",{});var Cs=c(B);Ne=n(Cs,"sourceId"),Cs.forEach(o),$e=n(m," prop must be unique across the .svelte file. No other "),M=p(m,"CODE",{});var ws=c(M);He=n(ws,"SourceCode"),ws.forEach(o),Ae=n(m," component can share it. A "),U=p(m,"CODE",{});var Es=c(U);Be=n(Es,"SourceCode"),Es.forEach(o),Me=n(m," element must have at least one corresponding "),L=p(m,"CODE",{});var gs=c(L);Ue=n(gs,"DisplaySourceCode"),gs.forEach(o),Le=n(m," element."),m.forEach(o),ce=y(e),r=p(e,"P",{});var d=c(r);Re=n(d,"The "),R=p(d,"CODE",{});var _s=c(R);Ye=n(_s,"DisplaySourceCode"),_s.forEach(o),Ge=n(d," element will display whatever source code appears between the opening and closing tags of the "),Y=p(d,"CODE",{});var Ss=c(Y);ze=n(Ss,"SourceCode"),Ss.forEach(o),Fe=n(d," element. It will trim any leading or trailing blank lines and unindent the source code before passing it to a child component. If "),G=p(d,"CODE",{});var Ds=c(G);Je=n(Ds,"DisplaySourceCode"),Ds.forEach(o),Ke=n(d," does not receive a slot, it will display the source code in a "),z=p(d,"CODE",{});var Os=c(z);Qe=n(Os,"pre"),Os.forEach(o),Ve=n(d," element. If it does receive a slot, it will pass that slot a "),F=p(d,"CODE",{});var Ts=c(F);We=n(Ts,"source"),Ts.forEach(o),Xe=n(d," prop. This prop is a string containing the exact source code from "),J=p(d,"CODE",{});var Is=c(J);Ze=n(Is,"SourceCode"),Is.forEach(o),es=n(d,". A "),K=p(d,"CODE",{});var bs=c(K);ss=n(bs,"DisplaySourceCode"),bs.forEach(o),os=n(d," element must have one and only one corresponding "),Q=p(d,"CODE",{});var js=c(Q);as=n(js,"SourceCode"),js.forEach(o),ns=n(d," element."),d.forEach(o),this.h()},h(){ts(E,"class","language-js"),ts(g,"class","language-js"),ts(_,"class","language-svelte")},m(e,l){u(e,W,l),Gs(w,e,l),u(e,X,l),u(e,O,l),s(O,re),u(e,Z,l),u(e,C,l),s(C,ue),s(C,I),s(I,ie),s(C,de),u(e,ee,l),u(e,E,l),E.innerHTML=Ps,u(e,se,l),u(e,f,l),s(f,b),s(b,ke),s(f,me),s(f,j),s(j,fe),s(f,ve),s(f,x),s(x,ye),s(f,he),u(e,oe,l),u(e,g,l),g.innerHTML=qs,u(e,ae,l),u(e,T,l),s(T,Ce),u(e,ne,l),u(e,k,l),s(k,we),s(k,P),s(P,Ee),s(k,ge),s(k,q),s(q,_e),s(k,Se),s(k,N),s(N,De),s(k,Oe),s(k,$),s($,Te),s(k,Ie),u(e,te,l),u(e,_,l),_.innerHTML=Ns,u(e,pe,l),u(e,i,l),s(i,be),s(i,H),s(H,je),s(i,xe),s(i,A),s(A,Pe),s(i,qe),s(i,B),s(B,Ne),s(i,$e),s(i,M),s(M,He),s(i,Ae),s(i,U),s(U,Be),s(i,Me),s(i,L),s(L,Ue),s(i,Le),u(e,ce,l),u(e,r,l),s(r,Re),s(r,R),s(R,Ye),s(r,Ge),s(r,Y),s(Y,ze),s(r,Fe),s(r,G),s(G,Je),s(r,Ke),s(r,z),s(z,Qe),s(r,Ve),s(r,F),s(F,We),s(r,Xe),s(r,J),s(J,Ze),s(r,es),s(r,K),s(K,ss),s(r,os),s(r,Q),s(Q,as),s(r,ns),V=!0},p(e,[l]){(!V||l&0)&&D!==(D=ps+" - SvelteUI")&&(document.title=D)},i(e){V||(zs(w.$$.fragment,e),V=!0)},o(e){Fs(w.$$.fragment,e),V=!1},d(e){e&&o(W),Js(w,e),e&&o(X),e&&o(O),e&&o(Z),e&&o(C),e&&o(ee),e&&o(E),e&&o(se),e&&o(f),e&&o(oe),e&&o(g),e&&o(ae),e&&o(T),e&&o(ne),e&&o(k),e&&o(te),e&&o(_),e&&o(pe),e&&o(i),e&&o(ce),e&&o(r)}}}const Vs={title:"viewSource",group:"svelteuidev-preprocessors",packageGroup:"@svelteuidev/preprocessors",slug:"/preprocessors/view-source/",description:"Preprocessor for displaying source code",importCode:"import { viewSource, SourceCode, DisplaySourceCode } from '@svelteuidev/preprocessors';",source:"svelteui-preprocessors/src/SourceCode/preprocess.ts",docs:"preprocessors/view-source.md"},{title:ps,group:Ws,packageGroup:Xs,slug:Zs,description:eo,importCode:so,source:oo,docs:ao}=Vs;class co extends Bs{constructor(D){super(),Ms(this,D,null,Qs,Us,{})}}export{co as default,Vs as metadata};
