import{S as ne,i as ae,s as fe,y,a as g,z as x,c as D,A as z,b as v,C as he,g as w,d as P,B as O,h as r,k as u,q as a,l as _,m as b,r as f,p as Et,n as yt,Y as s,al as xt}from"../chunks/index.b0fe5a0f.js";import{B as zt}from"../chunks/navigation.de1d24b4.js";import{H as wt}from"../chunks/Heading.f9982de4.js";import"../chunks/paths.f9471822.js";import{D as De}from"../chunks/Demo.dcecfac1.js";import{D as H}from"../chunks/Divider.50c33c1c.js";import{M as Pt}from"../chunks/MagnifyingGlass.b97ff8b6.js";function Ot(B){let t,$,o,d,m,h;return t=new H({}),o=new H({props:{variant:"dashed"}}),m=new H({props:{variant:"dotted"}}),{c(){y(t.$$.fragment),$=g(),y(o.$$.fragment),d=g(),y(m.$$.fragment)},l(l){x(t.$$.fragment,l),$=D(l),x(o.$$.fragment,l),d=D(l),x(m.$$.fragment,l)},m(l,p){z(t,l,p),v(l,$,p),z(o,l,p),v(l,d,p),z(m,l,p),h=!0},p:he,i(l){h||(w(t.$$.fragment,l),w(o.$$.fragment,l),w(m.$$.fragment,l),h=!0)},o(l){P(t.$$.fragment,l),P(o.$$.fragment,l),P(m.$$.fragment,l),h=!1},d(l){O(t,l),l&&r($),O(o,l),l&&r(d),O(m,l)}}}const Ct=`
  <script>
    import { Divider } from '@svelteuidev/core';
  <\/script>

  <Divider />
  <Divider variant='dashed' />
  <Divider variant='dotted' />
`,St="demo",Tt={code:Ct};class jt extends ne{constructor(t){super(),ae(this,t,null,Ot,fe,{})}}const kt=Object.freeze(Object.defineProperty({__proto__:null,configuration:Tt,default:jt,type:St},Symbol.toStringTag,{value:"Module"}));function Mt(B){let t,$,o,d,m,h;return $=new Pt({}),{c(){t=u("div"),y($.$$.fragment),o=g(),d=u("span"),m=a("Search results"),this.h()},l(l){t=_(l,"DIV",{slot:!0});var p=b(t);x($.$$.fragment,p),o=D(p),d=_(p,"SPAN",{style:!0});var E=b(d);m=f(E,"Search results"),E.forEach(r),p.forEach(r),this.h()},h(){Et(d,"vertical-align","middle"),yt(t,"slot","label")},m(l,p){v(l,t,p),z($,t,null),s(t,o),s(t,d),s(d,m),h=!0},p:he,i(l){h||(w($.$$.fragment,l),h=!0)},o(l){P($.$$.fragment,l),h=!1},d(l){l&&r(t),O($)}}}function Ht(B){let t,$,o,d,m,h,l,p,E,k;return t=new H({props:{label:"Label on the left",labelPosition:"left"}}),o=new H({props:{label:"Label in the center",labelPosition:"center"}}),m=new H({props:{label:"Label on the right",labelPosition:"right"}}),l=new H({props:{labelPosition:"center",$$slots:{label:[Mt]},$$scope:{ctx:B}}}),E=new H({props:{size:"md",variant:"dashed",label:"Click here",labelPosition:"left",labelProps:{variant:"link",href:"https://svelteui.org",root:"a"}}}),{c(){y(t.$$.fragment),$=g(),y(o.$$.fragment),d=g(),y(m.$$.fragment),h=g(),y(l.$$.fragment),p=g(),y(E.$$.fragment)},l(n){x(t.$$.fragment,n),$=D(n),x(o.$$.fragment,n),d=D(n),x(m.$$.fragment,n),h=D(n),x(l.$$.fragment,n),p=D(n),x(E.$$.fragment,n)},m(n,C){z(t,n,C),v(n,$,C),z(o,n,C),v(n,d,C),z(m,n,C),v(n,h,C),z(l,n,C),v(n,p,C),z(E,n,C),k=!0},p(n,[C]){const i={};C&1&&(i.$$scope={dirty:C,ctx:n}),l.$set(i)},i(n){k||(w(t.$$.fragment,n),w(o.$$.fragment,n),w(m.$$.fragment,n),w(l.$$.fragment,n),w(E.$$.fragment,n),k=!0)},o(n){P(t.$$.fragment,n),P(o.$$.fragment,n),P(m.$$.fragment,n),P(l.$$.fragment,n),P(E.$$.fragment,n),k=!1},d(n){O(t,n),n&&r($),O(o,n),n&&r(d),O(m,n),n&&r(h),O(l,n),n&&r(p),O(E,n)}}}const It=`
  <script>
    import { Divider } from '@svelteuidev/core';
    import { MagnifyingGlass } from 'radix-icons-svelte';
  <\/script>

  <Divider label='Label on the left' labelPosition='left' />
  <Divider label='Label in the center' labelPosition='center' />
  <Divider label='Label on the right' labelPosition='right' />
  <Divider labelPosition='center'>
    <div slot='label'>
      <MagnifyingGlass />
      <span>Search results</span>
    </div>
  </Divider>
  <Divider
    size='md'
    variant='dashed'
    label='Click here'
    labelPosition='left'
    labelProps={{ variant: 'link', href: 'https://svelteui.org', root: 'a' }}
  />
`,Bt="demo",Gt={code:It};class Lt extends ne{constructor(t){super(),ae(this,t,null,Ht,fe,{})}}const Nt=Object.freeze(Object.defineProperty({__proto__:null,configuration:Gt,default:Lt,type:Bt},Symbol.toStringTag,{value:"Module"}));function Ut(B){let t,$,o,d,m,h,l,p,E,k,n,C;return t=new H({props:{size:"xs"}}),o=new H({props:{size:"sm"}}),m=new H({props:{size:"md"}}),l=new H({props:{size:"lg"}}),E=new H({props:{size:"xl"}}),n=new H({props:{size:10}}),{c(){y(t.$$.fragment),$=g(),y(o.$$.fragment),d=g(),y(m.$$.fragment),h=g(),y(l.$$.fragment),p=g(),y(E.$$.fragment),k=g(),y(n.$$.fragment)},l(i){x(t.$$.fragment,i),$=D(i),x(o.$$.fragment,i),d=D(i),x(m.$$.fragment,i),h=D(i),x(l.$$.fragment,i),p=D(i),x(E.$$.fragment,i),k=D(i),x(n.$$.fragment,i)},m(i,M){z(t,i,M),v(i,$,M),z(o,i,M),v(i,d,M),z(m,i,M),v(i,h,M),z(l,i,M),v(i,p,M),z(E,i,M),v(i,k,M),z(n,i,M),C=!0},p:he,i(i){C||(w(t.$$.fragment,i),w(o.$$.fragment,i),w(m.$$.fragment,i),w(l.$$.fragment,i),w(E.$$.fragment,i),w(n.$$.fragment,i),C=!0)},o(i){P(t.$$.fragment,i),P(o.$$.fragment,i),P(m.$$.fragment,i),P(l.$$.fragment,i),P(E.$$.fragment,i),P(n.$$.fragment,i),C=!1},d(i){O(t,i),i&&r($),O(o,i),i&&r(d),O(m,i),i&&r(h),O(l,i),i&&r(p),O(E,i),i&&r(k),O(n,i)}}}const Vt=`
  <script>
    import { Divider } from '@svelteuidev/core';
  <\/script>

  <Divider size="xs" />
  <Divider size="sm" />
  <Divider size="md" />
  <Divider size="lg" />
  <Divider size="xl" />
  <Divider size={10} />
`,Yt="demo",qt={code:Vt};class At extends ne{constructor(t){super(),ae(this,t,null,Ut,fe,{})}}const Wt=Object.freeze(Object.defineProperty({__proto__:null,configuration:qt,default:At,type:Yt},Symbol.toStringTag,{value:"Module"}));function Rt(B){let t,$;return t=new H({props:{size:"sm",orientation:"vertical"}}),{c(){y(t.$$.fragment)},l(o){x(t.$$.fragment,o)},m(o,d){z(t,o,d),$=!0},p:he,i(o){$||(w(t.$$.fragment,o),$=!0)},o(o){P(t.$$.fragment,o),$=!1},d(o){O(t,o)}}}function Ft(B){let t,$;return t=new zt({props:{css:{height:"200px",display:"flex",justifyContent:"center"},$$slots:{default:[Rt]},$$scope:{ctx:B}}}),{c(){y(t.$$.fragment)},l(o){x(t.$$.fragment,o)},m(o,d){z(t,o,d),$=!0},p(o,[d]){const m={};d&1&&(m.$$scope={dirty:d,ctx:o}),t.$set(m)},i(o){$||(w(t.$$.fragment,o),$=!0)},o(o){P(t.$$.fragment,o),$=!1},d(o){O(t,o)}}}const Jt=`
  <script>
    import { Box, Divider } from '@svelteuidev/core';
  <\/script>

  <Box css={{ height: '200px', display: 'flex', justifyContent: 'center' }}>
    <Divider orientation='vertical' />
  </Box>
`,Kt="demo",Qt={code:Jt};class Xt extends ne{constructor(t){super(),ae(this,t,null,Ft,fe,{})}}const Zt=Object.freeze(Object.defineProperty({__proto__:null,configuration:Qt,default:Xt,type:Kt},Symbol.toStringTag,{value:"Module"}));function er(B){let t,$,o,d,m,h,l,p,E,k,n,C,i,M,Ee,$e,G,me,V,ye,de,S,xe,R,ze,we,F,Pe,Oe,J,Ce,Se,K,Te,je,Q,ke,Me,X,He,Ie,Z,Be,Ge,pe,L,ve,Y,Le,ce,T,Ne,ee,Ue,Ve,te,Ye,qe,re,Ae,We,ie,Re,Fe,oe,Je,Ke,le,Qe,Xe,ue,N,_e,q,Ze,be,A,et,ge,U,se;return document.title=t=tt+" - SvelteUI",o=new wt({props:{title:tt,group:rr,packageGroup:ir,slug:or,category:lr,description:sr,importCode:nr,source:ar,docs:fr}}),G=new De({props:{demo:kt}}),L=new De({props:{demo:Nt}}),N=new De({props:{demo:Wt}}),U=new De({props:{demo:Zt}}),{c(){$=g(),y(o.$$.fragment),d=g(),m=u("h2"),h=a("Usage"),l=g(),p=u("p"),E=a("Divider component renders an horizontal or vertical line. The border style can be customized with the "),k=u("code"),n=a("variant"),C=a(" and "),i=u("code"),M=a("color"),Ee=a(" prop."),$e=g(),y(G.$$.fragment),me=g(),V=u("h2"),ye=a("With label"),de=g(),S=u("p"),xe=a("It is possible to add a label at the "),R=u("code"),ze=a("left"),we=a(", "),F=u("code"),Pe=a("right"),Oe=a(" or "),J=u("code"),Ce=a("center"),Se=a(" of the Divider, by setting the prop "),K=u("code"),Te=a("label"),je=a(" and the prop "),Q=u("code"),ke=a("labelPosition"),Me=a(" with the previously mentioned values. It is also possible to override the label props with "),X=u("code"),He=a("labelProps"),Ie=a(". This label behaviour is "),Z=u("strong"),Be=a("only available for the horizontal orientation"),Ge=a("."),pe=g(),y(L.$$.fragment),ve=g(),Y=u("h2"),Le=a("Sizes"),ce=g(),T=u("p"),Ne=a("The Divider component has predefined sizes: "),ee=u("code"),Ue=a("xs"),Ve=a(", "),te=u("code"),Ye=a("sm"),qe=a(", "),re=u("code"),Ae=a("md"),We=a(", "),ie=u("code"),Re=a("lg"),Fe=a(" and "),oe=u("code"),Je=a("xl"),Ke=a(". You can also pass size as a number and it will be set as height in "),le=u("code"),Qe=a("px"),Xe=a("."),ue=g(),y(N.$$.fragment),_e=g(),q=u("h2"),Ze=a("Vertical orientation"),be=g(),A=u("p"),et=a("Divider can also be used in vertical position. Notice that the wrapper component must have a defined height."),ge=g(),y(U.$$.fragment)},l(e){xt("svelte-pki6ul",document.head).forEach(r),$=D(e),x(o.$$.fragment,e),d=D(e),m=_(e,"H2",{});var rt=b(m);h=f(rt,"Usage"),rt.forEach(r),l=D(e),p=_(e,"P",{});var W=b(p);E=f(W,"Divider component renders an horizontal or vertical line. The border style can be customized with the "),k=_(W,"CODE",{});var it=b(k);n=f(it,"variant"),it.forEach(r),C=f(W," and "),i=_(W,"CODE",{});var ot=b(i);M=f(ot,"color"),ot.forEach(r),Ee=f(W," prop."),W.forEach(r),$e=D(e),x(G.$$.fragment,e),me=D(e),V=_(e,"H2",{});var lt=b(V);ye=f(lt,"With label"),lt.forEach(r),de=D(e),S=_(e,"P",{});var j=b(S);xe=f(j,"It is possible to add a label at the "),R=_(j,"CODE",{});var st=b(R);ze=f(st,"left"),st.forEach(r),we=f(j,", "),F=_(j,"CODE",{});var nt=b(F);Pe=f(nt,"right"),nt.forEach(r),Oe=f(j," or "),J=_(j,"CODE",{});var at=b(J);Ce=f(at,"center"),at.forEach(r),Se=f(j," of the Divider, by setting the prop "),K=_(j,"CODE",{});var ft=b(K);Te=f(ft,"label"),ft.forEach(r),je=f(j," and the prop "),Q=_(j,"CODE",{});var $t=b(Q);ke=f($t,"labelPosition"),$t.forEach(r),Me=f(j," with the previously mentioned values. It is also possible to override the label props with "),X=_(j,"CODE",{});var mt=b(X);He=f(mt,"labelProps"),mt.forEach(r),Ie=f(j,". This label behaviour is "),Z=_(j,"STRONG",{});var dt=b(Z);Be=f(dt,"only available for the horizontal orientation"),dt.forEach(r),Ge=f(j,"."),j.forEach(r),pe=D(e),x(L.$$.fragment,e),ve=D(e),Y=_(e,"H2",{});var pt=b(Y);Le=f(pt,"Sizes"),pt.forEach(r),ce=D(e),T=_(e,"P",{});var I=b(T);Ne=f(I,"The Divider component has predefined sizes: "),ee=_(I,"CODE",{});var vt=b(ee);Ue=f(vt,"xs"),vt.forEach(r),Ve=f(I,", "),te=_(I,"CODE",{});var ct=b(te);Ye=f(ct,"sm"),ct.forEach(r),qe=f(I,", "),re=_(I,"CODE",{});var ut=b(re);Ae=f(ut,"md"),ut.forEach(r),We=f(I,", "),ie=_(I,"CODE",{});var _t=b(ie);Re=f(_t,"lg"),_t.forEach(r),Fe=f(I," and "),oe=_(I,"CODE",{});var bt=b(oe);Je=f(bt,"xl"),bt.forEach(r),Ke=f(I,". You can also pass size as a number and it will be set as height in "),le=_(I,"CODE",{});var gt=b(le);Qe=f(gt,"px"),gt.forEach(r),Xe=f(I,"."),I.forEach(r),ue=D(e),x(N.$$.fragment,e),_e=D(e),q=_(e,"H2",{});var Dt=b(q);Ze=f(Dt,"Vertical orientation"),Dt.forEach(r),be=D(e),A=_(e,"P",{});var ht=b(A);et=f(ht,"Divider can also be used in vertical position. Notice that the wrapper component must have a defined height."),ht.forEach(r),ge=D(e),x(U.$$.fragment,e)},m(e,c){v(e,$,c),z(o,e,c),v(e,d,c),v(e,m,c),s(m,h),v(e,l,c),v(e,p,c),s(p,E),s(p,k),s(k,n),s(p,C),s(p,i),s(i,M),s(p,Ee),v(e,$e,c),z(G,e,c),v(e,me,c),v(e,V,c),s(V,ye),v(e,de,c),v(e,S,c),s(S,xe),s(S,R),s(R,ze),s(S,we),s(S,F),s(F,Pe),s(S,Oe),s(S,J),s(J,Ce),s(S,Se),s(S,K),s(K,Te),s(S,je),s(S,Q),s(Q,ke),s(S,Me),s(S,X),s(X,He),s(S,Ie),s(S,Z),s(Z,Be),s(S,Ge),v(e,pe,c),z(L,e,c),v(e,ve,c),v(e,Y,c),s(Y,Le),v(e,ce,c),v(e,T,c),s(T,Ne),s(T,ee),s(ee,Ue),s(T,Ve),s(T,te),s(te,Ye),s(T,qe),s(T,re),s(re,Ae),s(T,We),s(T,ie),s(ie,Re),s(T,Fe),s(T,oe),s(oe,Je),s(T,Ke),s(T,le),s(le,Qe),s(T,Xe),v(e,ue,c),z(N,e,c),v(e,_e,c),v(e,q,c),s(q,Ze),v(e,be,c),v(e,A,c),s(A,et),v(e,ge,c),z(U,e,c),se=!0},p(e,[c]){(!se||c&0)&&t!==(t=tt+" - SvelteUI")&&(document.title=t)},i(e){se||(w(o.$$.fragment,e),w(G.$$.fragment,e),w(L.$$.fragment,e),w(N.$$.fragment,e),w(U.$$.fragment,e),se=!0)},o(e){P(o.$$.fragment,e),P(G.$$.fragment,e),P(L.$$.fragment,e),P(N.$$.fragment,e),P(U.$$.fragment,e),se=!1},d(e){e&&r($),O(o,e),e&&r(d),e&&r(m),e&&r(l),e&&r(p),e&&r($e),O(G,e),e&&r(me),e&&r(V),e&&r(de),e&&r(S),e&&r(pe),O(L,e),e&&r(ve),e&&r(Y),e&&r(ce),e&&r(T),e&&r(ue),O(N,e),e&&r(_e),e&&r(q),e&&r(be),e&&r(A),e&&r(ge),O(U,e)}}}const tr={title:"Divider",group:"svelteuidev-core",packageGroup:"@svelteuidev/core",slug:"/core/divider/",category:"misc",description:"Horizontal line with optional label or vertical divider",importCode:"import { Divider } from '@svelteuidev/core';",source:"svelteui-core/src/components/Divider/Divider.svelte",docs:"core/divider.md"},{title:tt,group:rr,packageGroup:ir,slug:or,category:lr,description:sr,importCode:nr,source:ar,docs:fr}=tr;class _r extends ne{constructor(t){super(),ae(this,t,null,er,fe,{})}}export{_r as default,tr as metadata};
