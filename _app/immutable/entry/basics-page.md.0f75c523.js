import{S as Fn,i as Qn,s as Vn,a as r,y as Tn,k as o,q as a,al as Wn,h as e,c as u,z as Dn,l,m as p,r as n,n as k,b as i,A as On,Y as t,C as Xn,g as Hn,d as xn,B as Ln}from"../chunks/index.b0fe5a0f.js";import"../chunks/navigation.9bd98935.js";import{M as Zn}from"../chunks/MinorHeading.9b4ec885.js";import{B as so}from"../chunks/BottomNav.ceff0913.js";function eo(Bn){let J,H,Ws,b,$e,F,Me,je,Xs,Q,Re,Zs,d,V,Ss,ze,Ge,Ye,W,gs,Ke,Ne,qe,X,Is,Je,Fe,Qe,y,Cs,Ve,We,Z,Xe,Ze,x,st,et,se,ss,tt,ee,S,at,es,nt,ot,te,L,An=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> SvelteUIProvider <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@svelteuidev/core'</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SvelteUIProvider</span> <span class="token attr-name">themeObserver</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>YourApp</span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SvelteUIProvider</span><span class="token punctuation">></span></span></code>`,ae,g,lt,ts,pt,ct,ne,as,it,oe,ns,rt,le,os,Us,ls,ut,pe,ps,kt,ce,cs,ft,ie,B,Ps,dt,vt,re,f,I,Ts,mt,ht,Ds,yt,Et,_t,is,Os,wt,bt,St,E,Hs,gt,It,rs,Ct,Ut,us,Pt,Tt,Dt,ks,xs,Ot,Ht,xt,C,Ls,Lt,Bt,Bs,At,$t,Mt,U,As,jt,Rt,$s,zt,Gt,ue,fs,Yt,ke,P,Kt,Ms,Nt,qt,fe,A,$n=`<code class="language-svelte">import type <span class="token language-javascript"><span class="token punctuation">&#123;</span> ButtonProps <span class="token punctuation">&#125;</span></span> from '@svelteuidev/core';</code>`,de,ds,Jt,ve,vs,Ft,me,ms,Qt,he,hs,Vt,ye,$,Mn=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Button <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@svelteuidev/core'</span><span class="token punctuation">;</span>

	<span class="token keyword">let</span> clicked <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>clicked <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>
	<span class="token language-javascript"><span class="token punctuation">&#123;</span>clicked <span class="token operator">?</span> <span class="token string">"Don't click me anymore"</span> <span class="token operator">:</span> <span class="token string">'Click me'</span><span class="token punctuation">&#125;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span></code>`,Ee,_,Wt,js,Xt,Zt,Rs,sa,ea,_e,ys,ta,we,w,aa,M,na,oa,zs,la,pa,be,j,jn=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Button <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@svelteuidev/core'</span><span class="token punctuation">;</span>
	<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> action1<span class="token punctuation">,</span> action2<span class="token punctuation">,</span> action3 <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'./my-library'</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> action1options <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> action3options <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>
	<span class="token attr-name">use=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token punctuation">[</span>action1<span class="token punctuation">,</span> action1options<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>action2<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>action3<span class="token punctuation">,</span> action3options<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span>
	<span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'clicked'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span>
<span class="token punctuation">></span></span>
	Click me!
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span></code>`,Se,h,Gs,ca,ia,Ys,ra,ua,Ks,ka,fa,ge,Es,da,Ie,v,va,Ns,ma,ha,qs,ya,Ea,Js,_a,wa,Ce,R,Rn=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Button <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@svelteuidev/core'</span><span class="token punctuation">;</span>

	<span class="token keyword">let</span> <span class="token literal-property property">element</span><span class="token operator">:</span> HTMLButtonElement<span class="token punctuation">;</span>

	<span class="token literal-property property">$</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> element <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// interact with DOM nodes programmatically.</span>
	<span class="token punctuation">&#125;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">bind:</span>element</span><span class="token punctuation">></span></span>Button Reference<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span></code>`,Ue,_s,ba,Pe,T,Sa,z,ga,Ia,Te,G,zn=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Button <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@svelteuidev/core'</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>animation-bounce<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>I have a tailwind animation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span></code>`,De,Y,Oe;return H=new Zn({props:{title:ao}}),Y=new so({props:{both:!0,slug:{prev:"/installation",next:"/contributing"},title:{prev:"Installation",next:"Contributing"},group:{prev:"Getting Started",next:"Getting Started"}}}),{c(){J=r(),Tn(H.$$.fragment),Ws=r(),b=o("p"),$e=a("This guide will help you get familiar with core SvelteUI concepts. Please read this guide and the "),F=o("a"),Me=a("theming"),je=a(" section before starting development to learn about all available theming features and component behaviors."),Xs=r(),Q=o("h2"),Re=a("SvelteUI packages"),Zs=r(),d=o("ul"),V=o("li"),Ss=o("code"),ze=a("@svelteuidev/core"),Ge=a(" – core components library with 40+ components"),Ye=r(),W=o("li"),gs=o("code"),Ke=a("@svelteuidev/composables"),Ne=a(" – collection of 20+ useful actions and utilities"),qe=r(),X=o("li"),Is=o("code"),Je=a("@svelteui/motion"),Fe=a(" - collection of transitions and animations"),Qe=r(),y=o("li"),Cs=o("code"),Ve=a("@svelteuidev/prism"),We=a(" – "),Z=o("a"),Xe=a("code highlight"),Ze=a(" built with "),x=o("a"),st=a("PrismJS"),et=a("."),se=r(),ss=o("h2"),tt=a("Dark Theme"),ee=r(),S=o("p"),at=a("All SvelteUI components support light and dark color themes out of the box. You can edit the details of each color scheme via "),es=o("a"),nt=a("SvelteUIProvider"),ot=a(":"),te=r(),L=o("pre"),ae=r(),g=o("p"),lt=a("To learn how to dynamically change the theme by reading the "),ts=o("a"),pt=a("dark theme guide"),ct=a("."),ne=r(),as=o("h2"),it=a("Server side rendering"),oe=r(),ns=o("p"),rt=a("SvelteUI components work in SvelteKit environments without any configuration needed. However, they aren’t SSR compatible by default. To setup SSR, follow the server side rendering guide below. It’s really easy to set up!"),le=r(),os=o("ul"),Us=o("li"),ls=o("a"),ut=a("Server side rendering with SvelteKit"),pe=r(),ps=o("h2"),kt=a("TypeScript"),ce=r(),cs=o("h3"),ft=a("Exported types"),ie=r(),B=o("p"),Ps=o("code"),dt=a("@svelteuidev/core"),vt=a(" package export all types to help you build components and styles with TypeScript. Some notable ones are:"),re=r(),f=o("ul"),I=o("li"),Ts=o("code"),mt=a("ColorScheme"),ht=a(" – union of "),Ds=o("code"),yt=a("'light' | 'dark'"),Et=a("."),_t=r(),is=o("li"),Os=o("code"),wt=a("SvelteUIColor"),bt=a(" – union of all default colors."),St=r(),E=o("li"),Hs=o("code"),gt=a("SvelteUIGradient"),It=a(" – gradient interface used in "),rs=o("a"),Ct=a("Button"),Ut=a(", "),us=o("a"),Pt=a("ThemeIcon"),Tt=a(" and other components."),Dt=r(),ks=o("li"),xs=o("code"),Ot=a("SvelteUIShadow"),Ht=a(" – union of all default shadows."),xt=r(),C=o("li"),Ls=o("code"),Lt=a("SvelteUISize"),Bt=a(" – union of "),Bs=o("code"),At=a("'xs' | 'sm' | 'md' | 'lg' | 'xl'"),$t=a("."),Mt=r(),U=o("li"),As=o("code"),jt=a("SvelteUINumberSize"),Rt=a(" – union of "),$s=o("code"),zt=a("SvelteUISize | number"),Gt=a("."),ue=r(),fs=o("h3"),Yt=a("Components props"),ke=r(),P=o("p"),Kt=a("You can import the props type of any component by adding "),Ms=o("code"),Nt=a("Props"),qt=a(" to the component name:"),fe=r(),A=o("pre"),de=r(),ds=o("h1"),Jt=a("General concepts"),ve=r(),vs=o("p"),Ft=a("Svelte works really well most of the time, however there are some specific component level and library level concepts you must understand before you can get started developing."),me=r(),ms=o("h2"),Qt=a("Event forwarding"),he=r(),hs=o("p"),Vt=a("This library will forward all events to the underlying elements, so you can add your own event handlers if necessary:"),ye=r(),$=o("pre"),Ee=r(),_=o("p"),Wt=a("Event modifiers can also be used. However, instead of using the standard "),js=o("code"),Xt=a("|"),Zt=a(" (pipe operator), they must be separated by a "),Rs=o("code"),sa=a("!"),ea=a(" due to those limitations mentioned previously."),_e=r(),ys=o("h2"),ta=a("Svelte Actions"),we=r(),w=o("p"),aa=a("Under normal circumstances you wouldn’t be able to use actions on components because of a Svelte limitation. To support forwarding actions to a Component’s top level element, SvelteUI provides a special syntax. If you’re familiar with "),M=o("a"),na=a("Svelte Headless UI"),oa=a(", this concept should be familiar to you. Components support the "),zs=o("code"),la=a("use"),pa=a(" prop syntax for this purpose:"),be=r(),j=o("pre"),Se=r(),h=o("p"),Gs=o("code"),ca=a("use"),ia=a(" takes an array of "),Ys=o("code"),ra=a("[action]"),ua=a(" or "),Ks=o("code"),ka=a("[action, options]"),fa=a(" arrays (so nested arrays). These actions will be applied to the underlying element that the component eventually renders."),ge=r(),Es=o("h2"),da=a("Bindings"),Ie=r(),v=o("p"),va=a("All components support binding their top-level element via the "),Ns=o("code"),ma=a("element"),ha=a(" prop instead of "),qs=o("code"),ya=a("this"),Ea=a(". This allows you to get a reference to a DOM node (as a supplement to "),Js=o("code"),_a=a("bind:this"),wa=a("):"),Ce=r(),R=o("pre"),Ue=r(),_s=o("h2"),ba=a("Classes"),Pe=r(),T=o("p"),Sa=a("All components support a class prop which is useful for things like global styling or "),z=o("a"),ga=a("Tailwind"),Ia=a(" classes:"),Te=r(),G=o("pre"),De=r(),Tn(Y.$$.fragment),this.h()},l(s){Wn("svelte-dibum1",document.head).forEach(e),J=u(s),Dn(H.$$.fragment,s),Ws=u(s),b=l(s,"P",{});var He=p(b);$e=n(He,"This guide will help you get familiar with core SvelteUI concepts. Please read this guide and the "),F=l(He,"A",{href:!0});var Ha=p(F);Me=n(Ha,"theming"),Ha.forEach(e),je=n(He," section before starting development to learn about all available theming features and component behaviors."),He.forEach(e),Xs=u(s),Q=l(s,"H2",{});var xa=p(Q);Re=n(xa,"SvelteUI packages"),xa.forEach(e),Zs=u(s),d=l(s,"UL",{});var D=p(d);V=l(D,"LI",{});var Ca=p(V);Ss=l(Ca,"CODE",{});var La=p(Ss);ze=n(La,"@svelteuidev/core"),La.forEach(e),Ge=n(Ca," – core components library with 40+ components"),Ca.forEach(e),Ye=u(D),W=l(D,"LI",{});var Ua=p(W);gs=l(Ua,"CODE",{});var Ba=p(gs);Ke=n(Ba,"@svelteuidev/composables"),Ba.forEach(e),Ne=n(Ua," – collection of 20+ useful actions and utilities"),Ua.forEach(e),qe=u(D),X=l(D,"LI",{});var Pa=p(X);Is=l(Pa,"CODE",{});var Aa=p(Is);Je=n(Aa,"@svelteui/motion"),Aa.forEach(e),Fe=n(Pa," - collection of transitions and animations"),Pa.forEach(e),Qe=u(D),y=l(D,"LI",{});var K=p(y);Cs=l(K,"CODE",{});var $a=p(Cs);Ve=n($a,"@svelteuidev/prism"),$a.forEach(e),We=n(K," – "),Z=l(K,"A",{href:!0});var Ma=p(Z);Xe=n(Ma,"code highlight"),Ma.forEach(e),Ze=n(K," built with "),x=l(K,"A",{href:!0,rel:!0});var ja=p(x);st=n(ja,"PrismJS"),ja.forEach(e),et=n(K,"."),K.forEach(e),D.forEach(e),se=u(s),ss=l(s,"H2",{});var Ra=p(ss);tt=n(Ra,"Dark Theme"),Ra.forEach(e),ee=u(s),S=l(s,"P",{});var xe=p(S);at=n(xe,"All SvelteUI components support light and dark color themes out of the box. You can edit the details of each color scheme via "),es=l(xe,"A",{href:!0});var za=p(es);nt=n(za,"SvelteUIProvider"),za.forEach(e),ot=n(xe,":"),xe.forEach(e),te=u(s),L=l(s,"PRE",{class:!0});var Gn=p(L);Gn.forEach(e),ae=u(s),g=l(s,"P",{});var Le=p(g);lt=n(Le,"To learn how to dynamically change the theme by reading the "),ts=l(Le,"A",{href:!0});var Ga=p(ts);pt=n(Ga,"dark theme guide"),Ga.forEach(e),ct=n(Le,"."),Le.forEach(e),ne=u(s),as=l(s,"H2",{});var Ya=p(as);it=n(Ya,"Server side rendering"),Ya.forEach(e),oe=u(s),ns=l(s,"P",{});var Ka=p(ns);rt=n(Ka,"SvelteUI components work in SvelteKit environments without any configuration needed. However, they aren’t SSR compatible by default. To setup SSR, follow the server side rendering guide below. It’s really easy to set up!"),Ka.forEach(e),le=u(s),os=l(s,"UL",{});var Na=p(os);Us=l(Na,"LI",{});var qa=p(Us);ls=l(qa,"A",{href:!0});var Ja=p(ls);ut=n(Ja,"Server side rendering with SvelteKit"),Ja.forEach(e),qa.forEach(e),Na.forEach(e),pe=u(s),ps=l(s,"H2",{});var Fa=p(ps);kt=n(Fa,"TypeScript"),Fa.forEach(e),ce=u(s),cs=l(s,"H3",{});var Qa=p(cs);ft=n(Qa,"Exported types"),Qa.forEach(e),ie=u(s),B=l(s,"P",{});var Ta=p(B);Ps=l(Ta,"CODE",{});var Va=p(Ps);dt=n(Va,"@svelteuidev/core"),Va.forEach(e),vt=n(Ta," package export all types to help you build components and styles with TypeScript. Some notable ones are:"),Ta.forEach(e),re=u(s),f=l(s,"UL",{});var m=p(f);I=l(m,"LI",{});var Fs=p(I);Ts=l(Fs,"CODE",{});var Wa=p(Ts);mt=n(Wa,"ColorScheme"),Wa.forEach(e),ht=n(Fs," – union of "),Ds=l(Fs,"CODE",{});var Xa=p(Ds);yt=n(Xa,"'light' | 'dark'"),Xa.forEach(e),Et=n(Fs,"."),Fs.forEach(e),_t=u(m),is=l(m,"LI",{});var Da=p(is);Os=l(Da,"CODE",{});var Za=p(Os);wt=n(Za,"SvelteUIColor"),Za.forEach(e),bt=n(Da," – union of all default colors."),Da.forEach(e),St=u(m),E=l(m,"LI",{});var N=p(E);Hs=l(N,"CODE",{});var sn=p(Hs);gt=n(sn,"SvelteUIGradient"),sn.forEach(e),It=n(N," – gradient interface used in "),rs=l(N,"A",{href:!0});var en=p(rs);Ct=n(en,"Button"),en.forEach(e),Ut=n(N,", "),us=l(N,"A",{href:!0});var tn=p(us);Pt=n(tn,"ThemeIcon"),tn.forEach(e),Tt=n(N," and other components."),N.forEach(e),Dt=u(m),ks=l(m,"LI",{});var Oa=p(ks);xs=l(Oa,"CODE",{});var an=p(xs);Ot=n(an,"SvelteUIShadow"),an.forEach(e),Ht=n(Oa," – union of all default shadows."),Oa.forEach(e),xt=u(m),C=l(m,"LI",{});var Qs=p(C);Ls=l(Qs,"CODE",{});var nn=p(Ls);Lt=n(nn,"SvelteUISize"),nn.forEach(e),Bt=n(Qs," – union of "),Bs=l(Qs,"CODE",{});var on=p(Bs);At=n(on,"'xs' | 'sm' | 'md' | 'lg' | 'xl'"),on.forEach(e),$t=n(Qs,"."),Qs.forEach(e),Mt=u(m),U=l(m,"LI",{});var Vs=p(U);As=l(Vs,"CODE",{});var ln=p(As);jt=n(ln,"SvelteUINumberSize"),ln.forEach(e),Rt=n(Vs," – union of "),$s=l(Vs,"CODE",{});var pn=p($s);zt=n(pn,"SvelteUISize | number"),pn.forEach(e),Gt=n(Vs,"."),Vs.forEach(e),m.forEach(e),ue=u(s),fs=l(s,"H3",{});var cn=p(fs);Yt=n(cn,"Components props"),cn.forEach(e),ke=u(s),P=l(s,"P",{});var Be=p(P);Kt=n(Be,"You can import the props type of any component by adding "),Ms=l(Be,"CODE",{});var rn=p(Ms);Nt=n(rn,"Props"),rn.forEach(e),qt=n(Be," to the component name:"),Be.forEach(e),fe=u(s),A=l(s,"PRE",{class:!0});var Yn=p(A);Yn.forEach(e),de=u(s),ds=l(s,"H1",{});var un=p(ds);Jt=n(un,"General concepts"),un.forEach(e),ve=u(s),vs=l(s,"P",{});var kn=p(vs);Ft=n(kn,"Svelte works really well most of the time, however there are some specific component level and library level concepts you must understand before you can get started developing."),kn.forEach(e),me=u(s),ms=l(s,"H2",{});var fn=p(ms);Qt=n(fn,"Event forwarding"),fn.forEach(e),he=u(s),hs=l(s,"P",{});var dn=p(hs);Vt=n(dn,"This library will forward all events to the underlying elements, so you can add your own event handlers if necessary:"),dn.forEach(e),ye=u(s),$=l(s,"PRE",{class:!0});var Kn=p($);Kn.forEach(e),Ee=u(s),_=l(s,"P",{});var ws=p(_);Wt=n(ws,"Event modifiers can also be used. However, instead of using the standard "),js=l(ws,"CODE",{});var vn=p(js);Xt=n(vn,"|"),vn.forEach(e),Zt=n(ws," (pipe operator), they must be separated by a "),Rs=l(ws,"CODE",{});var mn=p(Rs);sa=n(mn,"!"),mn.forEach(e),ea=n(ws," due to those limitations mentioned previously."),ws.forEach(e),_e=u(s),ys=l(s,"H2",{});var hn=p(ys);ta=n(hn,"Svelte Actions"),hn.forEach(e),we=u(s),w=l(s,"P",{});var bs=p(w);aa=n(bs,"Under normal circumstances you wouldn’t be able to use actions on components because of a Svelte limitation. To support forwarding actions to a Component’s top level element, SvelteUI provides a special syntax. If you’re familiar with "),M=l(bs,"A",{href:!0,rel:!0});var yn=p(M);na=n(yn,"Svelte Headless UI"),yn.forEach(e),oa=n(bs,", this concept should be familiar to you. Components support the "),zs=l(bs,"CODE",{});var En=p(zs);la=n(En,"use"),En.forEach(e),pa=n(bs," prop syntax for this purpose:"),bs.forEach(e),be=u(s),j=l(s,"PRE",{class:!0});var Nn=p(j);Nn.forEach(e),Se=u(s),h=l(s,"P",{});var q=p(h);Gs=l(q,"CODE",{});var _n=p(Gs);ca=n(_n,"use"),_n.forEach(e),ia=n(q," takes an array of "),Ys=l(q,"CODE",{});var wn=p(Ys);ra=n(wn,"[action]"),wn.forEach(e),ua=n(q," or "),Ks=l(q,"CODE",{});var bn=p(Ks);ka=n(bn,"[action, options]"),bn.forEach(e),fa=n(q," arrays (so nested arrays). These actions will be applied to the underlying element that the component eventually renders."),q.forEach(e),ge=u(s),Es=l(s,"H2",{});var Sn=p(Es);da=n(Sn,"Bindings"),Sn.forEach(e),Ie=u(s),v=l(s,"P",{});var O=p(v);va=n(O,"All components support binding their top-level element via the "),Ns=l(O,"CODE",{});var gn=p(Ns);ma=n(gn,"element"),gn.forEach(e),ha=n(O," prop instead of "),qs=l(O,"CODE",{});var In=p(qs);ya=n(In,"this"),In.forEach(e),Ea=n(O,". This allows you to get a reference to a DOM node (as a supplement to "),Js=l(O,"CODE",{});var Cn=p(Js);_a=n(Cn,"bind:this"),Cn.forEach(e),wa=n(O,"):"),O.forEach(e),Ce=u(s),R=l(s,"PRE",{class:!0});var qn=p(R);qn.forEach(e),Ue=u(s),_s=l(s,"H2",{});var Un=p(_s);ba=n(Un,"Classes"),Un.forEach(e),Pe=u(s),T=l(s,"P",{});var Ae=p(T);Sa=n(Ae,"All components support a class prop which is useful for things like global styling or "),z=l(Ae,"A",{href:!0,rel:!0});var Pn=p(z);ga=n(Pn,"Tailwind"),Pn.forEach(e),Ia=n(Ae," classes:"),Ae.forEach(e),Te=u(s),G=l(s,"PRE",{class:!0});var Jn=p(G);Jn.forEach(e),De=u(s),Dn(Y.$$.fragment,s),this.h()},h(){document.title="Learn the basics - SvelteUI",k(F,"href","/theming/svelteui-provider"),k(Z,"href","/others/prism"),k(x,"href","https://prismjs.com/"),k(x,"rel","nofollow"),k(es,"href","/theming/svelteui-provider"),k(L,"class","language-svelte"),k(ts,"href","/theming/dark-theme"),k(ls,"href","/theming/ssr"),k(rs,"href","/core/button"),k(us,"href","/core/theme-icon"),k(A,"class","language-svelte"),k($,"class","language-svelte"),k(M,"href","https://github.com/rgossiaux/svelte-headlessui"),k(M,"rel","nofollow"),k(j,"class","language-svelte"),k(R,"class","language-svelte"),k(z,"href","https://tailwindcss.com/"),k(z,"rel","nofollow"),k(G,"class","language-svelte")},m(s,c){i(s,J,c),On(H,s,c),i(s,Ws,c),i(s,b,c),t(b,$e),t(b,F),t(F,Me),t(b,je),i(s,Xs,c),i(s,Q,c),t(Q,Re),i(s,Zs,c),i(s,d,c),t(d,V),t(V,Ss),t(Ss,ze),t(V,Ge),t(d,Ye),t(d,W),t(W,gs),t(gs,Ke),t(W,Ne),t(d,qe),t(d,X),t(X,Is),t(Is,Je),t(X,Fe),t(d,Qe),t(d,y),t(y,Cs),t(Cs,Ve),t(y,We),t(y,Z),t(Z,Xe),t(y,Ze),t(y,x),t(x,st),t(y,et),i(s,se,c),i(s,ss,c),t(ss,tt),i(s,ee,c),i(s,S,c),t(S,at),t(S,es),t(es,nt),t(S,ot),i(s,te,c),i(s,L,c),L.innerHTML=An,i(s,ae,c),i(s,g,c),t(g,lt),t(g,ts),t(ts,pt),t(g,ct),i(s,ne,c),i(s,as,c),t(as,it),i(s,oe,c),i(s,ns,c),t(ns,rt),i(s,le,c),i(s,os,c),t(os,Us),t(Us,ls),t(ls,ut),i(s,pe,c),i(s,ps,c),t(ps,kt),i(s,ce,c),i(s,cs,c),t(cs,ft),i(s,ie,c),i(s,B,c),t(B,Ps),t(Ps,dt),t(B,vt),i(s,re,c),i(s,f,c),t(f,I),t(I,Ts),t(Ts,mt),t(I,ht),t(I,Ds),t(Ds,yt),t(I,Et),t(f,_t),t(f,is),t(is,Os),t(Os,wt),t(is,bt),t(f,St),t(f,E),t(E,Hs),t(Hs,gt),t(E,It),t(E,rs),t(rs,Ct),t(E,Ut),t(E,us),t(us,Pt),t(E,Tt),t(f,Dt),t(f,ks),t(ks,xs),t(xs,Ot),t(ks,Ht),t(f,xt),t(f,C),t(C,Ls),t(Ls,Lt),t(C,Bt),t(C,Bs),t(Bs,At),t(C,$t),t(f,Mt),t(f,U),t(U,As),t(As,jt),t(U,Rt),t(U,$s),t($s,zt),t(U,Gt),i(s,ue,c),i(s,fs,c),t(fs,Yt),i(s,ke,c),i(s,P,c),t(P,Kt),t(P,Ms),t(Ms,Nt),t(P,qt),i(s,fe,c),i(s,A,c),A.innerHTML=$n,i(s,de,c),i(s,ds,c),t(ds,Jt),i(s,ve,c),i(s,vs,c),t(vs,Ft),i(s,me,c),i(s,ms,c),t(ms,Qt),i(s,he,c),i(s,hs,c),t(hs,Vt),i(s,ye,c),i(s,$,c),$.innerHTML=Mn,i(s,Ee,c),i(s,_,c),t(_,Wt),t(_,js),t(js,Xt),t(_,Zt),t(_,Rs),t(Rs,sa),t(_,ea),i(s,_e,c),i(s,ys,c),t(ys,ta),i(s,we,c),i(s,w,c),t(w,aa),t(w,M),t(M,na),t(w,oa),t(w,zs),t(zs,la),t(w,pa),i(s,be,c),i(s,j,c),j.innerHTML=jn,i(s,Se,c),i(s,h,c),t(h,Gs),t(Gs,ca),t(h,ia),t(h,Ys),t(Ys,ra),t(h,ua),t(h,Ks),t(Ks,ka),t(h,fa),i(s,ge,c),i(s,Es,c),t(Es,da),i(s,Ie,c),i(s,v,c),t(v,va),t(v,Ns),t(Ns,ma),t(v,ha),t(v,qs),t(qs,ya),t(v,Ea),t(v,Js),t(Js,_a),t(v,wa),i(s,Ce,c),i(s,R,c),R.innerHTML=Rn,i(s,Ue,c),i(s,_s,c),t(_s,ba),i(s,Pe,c),i(s,T,c),t(T,Sa),t(T,z),t(z,ga),t(T,Ia),i(s,Te,c),i(s,G,c),G.innerHTML=zn,i(s,De,c),On(Y,s,c),Oe=!0},p:Xn,i(s){Oe||(Hn(H.$$.fragment,s),Hn(Y.$$.fragment,s),Oe=!0)},o(s){xn(H.$$.fragment,s),xn(Y.$$.fragment,s),Oe=!1},d(s){s&&e(J),Ln(H,s),s&&e(Ws),s&&e(b),s&&e(Xs),s&&e(Q),s&&e(Zs),s&&e(d),s&&e(se),s&&e(ss),s&&e(ee),s&&e(S),s&&e(te),s&&e(L),s&&e(ae),s&&e(g),s&&e(ne),s&&e(as),s&&e(oe),s&&e(ns),s&&e(le),s&&e(os),s&&e(pe),s&&e(ps),s&&e(ce),s&&e(cs),s&&e(ie),s&&e(B),s&&e(re),s&&e(f),s&&e(ue),s&&e(fs),s&&e(ke),s&&e(P),s&&e(fe),s&&e(A),s&&e(de),s&&e(ds),s&&e(ve),s&&e(vs),s&&e(me),s&&e(ms),s&&e(he),s&&e(hs),s&&e(ye),s&&e($),s&&e(Ee),s&&e(_),s&&e(_e),s&&e(ys),s&&e(we),s&&e(w),s&&e(be),s&&e(j),s&&e(Se),s&&e(h),s&&e(ge),s&&e(Es),s&&e(Ie),s&&e(v),s&&e(Ce),s&&e(R),s&&e(Ue),s&&e(_s),s&&e(Pe),s&&e(T),s&&e(Te),s&&e(G),s&&e(De),Ln(Y,s)}}}const to={title:"Learn the basics"},{title:ao}=to;class co extends Fn{constructor(J){super(),Qn(this,J,null,eo,Vn,{})}}export{co as default,to as metadata};
