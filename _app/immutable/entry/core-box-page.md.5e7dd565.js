import{S as X,i as Z,s as ee,y as w,z as C,A as k,g as E,d as I,B as S,q as u,r as f,b as c,h as n,a as _,c as g,k as B,al as le,l as h,m as b,n as ce,Y as i}from"../chunks/index.b0fe5a0f.js";import{B as W,G as me}from"../chunks/navigation.9bd98935.js";import{H as pe}from"../chunks/Heading.19c03976.js";import{D as ae}from"../chunks/Demo.82a35c94.js";import{C as ie}from"../chunks/Code.b56c158f.js";function ue(m){let t;return{c(){t=u("Box lets you add inline styles with the css prop")},l(r){t=f(r,"Box lets you add inline styles with the css prop")},m(r,o){c(r,t,o)},d(r){r&&n(t)}}}function fe(m){let t,r;return t=new W({props:{css:{backgroundColor:"$gray50",textAlign:"center",padding:"$20",borderRadius:"$md",cursor:"pointer","&:hover":{backgroundColor:"$gray100"}},$$slots:{default:[ue]},$$scope:{ctx:m}}}),{c(){w(t.$$.fragment)},l(o){C(t.$$.fragment,o)},m(o,a){k(t,o,a),r=!0},p(o,[a]){const s={};a&1&&(s.$$scope={dirty:a,ctx:o}),t.$set(s)},i(o){r||(E(t.$$.fragment,o),r=!0)},o(o){I(t.$$.fragment,o),r=!1},d(o){S(t,o)}}}const $e=`
<script>
	import { Box } from '@svelteuidev/core';
<\/script>

<Box
    css={{
        backgroundColor: '$gray50',
        textAlign: 'center',
        padding: '$20',
        borderRadius: '$md',
        cursor: 'pointer',

        '&:hover': {
            backgroundColor: '$gray100',
        },
    }}
>
    Box lets you add inline styles with the css prop
</Box>`,de="demo",_e={code:$e};class ge extends X{constructor(t){super(),Z(this,t,null,fe,ee,{})}}const xe=Object.freeze(Object.defineProperty({__proto__:null,configuration:_e,default:ge,type:de},Symbol.toStringTag,{value:"Module"}));function ve(m){let t;return{c(){t=u("I am a code component now")},l(r){t=f(r,"I am a code component now")},m(r,o){c(r,t,o)},d(r){r&&n(t)}}}function ye(m){let t;return{c(){t=u("I am a span tag")},l(r){t=f(r,"I am a span tag")},m(r,o){c(r,t,o)},d(r){r&&n(t)}}}function Be(m){let t,r,o,a;return t=new W({props:{root:ie,$$slots:{default:[ve]},$$scope:{ctx:m}}}),o=new W({props:{root:"span",$$slots:{default:[ye]},$$scope:{ctx:m}}}),{c(){w(t.$$.fragment),r=_(),w(o.$$.fragment)},l(s){C(t.$$.fragment,s),r=g(s),C(o.$$.fragment,s)},m(s,$){k(t,s,$),c(s,r,$),k(o,s,$),a=!0},p(s,$){const x={};$&1&&(x.$$scope={dirty:$,ctx:s}),t.$set(x);const p={};$&1&&(p.$$scope={dirty:$,ctx:s}),o.$set(p)},i(s){a||(E(t.$$.fragment,s),E(o.$$.fragment,s),a=!0)},o(s){I(t.$$.fragment,s),I(o.$$.fragment,s),a=!1},d(s){S(t,s),s&&n(r),S(o,s)}}}function he(m){let t,r;return t=new me({props:{position:"center",$$slots:{default:[Be]},$$scope:{ctx:m}}}),{c(){w(t.$$.fragment)},l(o){C(t.$$.fragment,o)},m(o,a){k(t,o,a),r=!0},p(o,[a]){const s={};a&1&&(s.$$scope={dirty:a,ctx:o}),t.$set(s)},i(o){r||(E(t.$$.fragment,o),r=!0)},o(o){I(t.$$.fragment,o),r=!1},d(o){S(t,o)}}}const be=`
<script>
	import { Box, Code } from '@svelteuidev/core';
<\/script>

<Box root={Code}>I am a code component now</Box>
<Box root='span'>I am a span tag</Box>`,we="demo",Ce={code:be};class ke extends X{constructor(t){super(),Z(this,t,null,he,ee,{})}}const Ee=Object.freeze(Object.defineProperty({__proto__:null,configuration:Ce,default:ke,type:we},Symbol.toStringTag,{value:"Module"}));function Ie(m){let t,r,o,a,s,$,x,p,M,j,R,Y,O,F,J,H,v,T,A,K,U,d,L,D,N,Q,z,y,G;return document.title=t=V+" - SvelteUI",o=new pe({props:{title:V,group:Oe,packageGroup:Ae,slug:Pe,category:je,description:De,importCode:Ge,source:He,docs:Te}}),v=new ae({props:{demo:xe}}),y=new ae({props:{demo:Ee}}),{c(){r=_(),w(o.$$.fragment),a=_(),s=B("h2"),$=u("Usage"),x=_(),p=B("p"),M=u("Box allows you to use the "),j=B("code"),R=u("css"),Y=u(" prop ("),O=B("a"),F=u("like override"),J=u(") with any element or component. Box itself does not include any styles."),H=_(),w(v.$$.fragment),T=_(),A=B("h2"),K=u("Custom component"),U=_(),d=B("p"),L=u("To use Box with custom component or element set "),D=B("code"),N=u("root"),Q=u(" prop to tag name or a svelte component:"),z=_(),w(y.$$.fragment),this.h()},l(e){le("svelte-pki6ul",document.head).forEach(n),r=g(e),C(o.$$.fragment,e),a=g(e),s=h(e,"H2",{});var te=b(s);$=f(te,"Usage"),te.forEach(n),x=g(e),p=h(e,"P",{});var P=b(p);M=f(P,"Box allows you to use the "),j=h(P,"CODE",{});var oe=b(j);R=f(oe,"css"),oe.forEach(n),Y=f(P," prop ("),O=h(P,"A",{href:!0});var re=b(O);F=f(re,"like override"),re.forEach(n),J=f(P,") with any element or component. Box itself does not include any styles."),P.forEach(n),H=g(e),C(v.$$.fragment,e),T=g(e),A=h(e,"H2",{});var se=b(A);K=f(se,"Custom component"),se.forEach(n),U=g(e),d=h(e,"P",{});var q=b(d);L=f(q,"To use Box with custom component or element set "),D=h(q,"CODE",{});var ne=b(D);N=f(ne,"root"),ne.forEach(n),Q=f(q," prop to tag name or a svelte component:"),q.forEach(n),z=g(e),C(y.$$.fragment,e),this.h()},h(){ce(O,"href","/theming/override")},m(e,l){c(e,r,l),k(o,e,l),c(e,a,l),c(e,s,l),i(s,$),c(e,x,l),c(e,p,l),i(p,M),i(p,j),i(j,R),i(p,Y),i(p,O),i(O,F),i(p,J),c(e,H,l),k(v,e,l),c(e,T,l),c(e,A,l),i(A,K),c(e,U,l),c(e,d,l),i(d,L),i(d,D),i(D,N),i(d,Q),c(e,z,l),k(y,e,l),G=!0},p(e,[l]){(!G||l&0)&&t!==(t=V+" - SvelteUI")&&(document.title=t)},i(e){G||(E(o.$$.fragment,e),E(v.$$.fragment,e),E(y.$$.fragment,e),G=!0)},o(e){I(o.$$.fragment,e),I(v.$$.fragment,e),I(y.$$.fragment,e),G=!1},d(e){e&&n(r),S(o,e),e&&n(a),e&&n(s),e&&n(x),e&&n(p),e&&n(H),S(v,e),e&&n(T),e&&n(A),e&&n(U),e&&n(d),e&&n(z),S(y,e)}}}const Se={title:"Box",group:"svelteuidev-core",packageGroup:"@svelteuidev/core",slug:"/core/box/",category:"misc",description:"Add inline styles to any element or component with css prop",importCode:"import { Box } from '@svelteuidev/core';",source:"svelteui-core/src/components/Box/Box.svelte",docs:"core/box.md"},{title:V,group:Oe,packageGroup:Ae,slug:Pe,category:je,description:De,importCode:Ge,source:He,docs:Te}=Se;class Ye extends X{constructor(t){super(),Z(this,t,null,Ie,ee,{})}}export{Ye as default,Se as metadata};
