import{S as Re,i as De,s as Se,y as V,z as F,A as M,g as U,d as j,B as z,k as f,l as c,m as u,h as o,p as We,b as p,q as d,r as v,u as te,a as b,c as O,Y as l,al as Xe,n as ye}from"../chunks/index.b0fe5a0f.js";import{T as Ze}from"../chunks/navigation.de1d24b4.js";import{H as et}from"../chunks/Heading.f9982de4.js";import{b as qe}from"../chunks/paths.f9471822.js";import{D as Ge}from"../chunks/Demo.dcecfac1.js";import{O as Ye}from"../chunks/ObserverRender.e5de1d8a.js";import{P as Be}from"../chunks/Paper.1a399737.js";import{S as tt}from"../chunks/Stack.873bb6c5.js";function rt(m){let t=m[0]?"Fully visible":"Obscured",n;return{c(){n=d(t)},l(e){n=v(e,t)},m(e,s){p(e,n,s)},p(e,s){s&1&&t!==(t=e[0]?"Fully visible":"Obscured")&&te(n,t)},d(e){e&&o(n)}}}function st(m){let t,n;return t=new Ze({props:{override:{color:"white"},weight:"extrabold",$$slots:{default:[rt]},$$scope:{ctx:m}}}),{c(){V(t.$$.fragment)},l(e){F(t.$$.fragment,e)},m(e,s){M(t,e,s),n=!0},p(e,s){const a={};s&3&&(a.$$scope={dirty:s,ctx:e}),t.$set(a)},i(e){n||(U(t.$$.fragment,e),n=!0)},o(e){j(t.$$.fragment,e),n=!1},d(e){z(t,e)}}}function ot(m){let t,n;return t=new Be({props:{override:{bc:m[0]?"$green900":"$red900",minW:"50%"},padding:"xl",$$slots:{default:[st]},$$scope:{ctx:m}}}),{c(){V(t.$$.fragment)},l(e){F(t.$$.fragment,e)},m(e,s){M(t,e,s),n=!0},p(e,s){const a={};s&1&&(a.override={bc:e[0]?"$green900":"$red900",minW:"50%"}),s&3&&(a.$$scope={dirty:s,ctx:e}),t.$set(a)},i(e){n||(U(t.$$.fragment,e),n=!0)},o(e){j(t.$$.fragment,e),n=!1},d(e){z(t,e)}}}function nt(m){let t,n,e;return n=new Ye({props:{options:{threshold:1},$$slots:{default:[ot,({visible:s})=>({0:s}),({visible:s})=>s?1:0]},$$scope:{ctx:m}}}),{c(){t=f("div"),V(n.$$.fragment),this.h()},l(s){t=c(s,"DIV",{style:!0});var a=u(t);F(n.$$.fragment,a),a.forEach(o),this.h()},h(){We(t,"padding-top","260px"),We(t,"padding-bottom","280px")},m(s,a){p(s,t,a),M(n,t,null),e=!0},p(s,a){const h={};a&3&&(h.$$scope={dirty:a,ctx:s}),n.$set(h)},i(s){e||(U(n.$$.fragment,s),e=!0)},o(s){j(n.$$.fragment,s),e=!1},d(s){s&&o(t),z(n)}}}function lt(m){let t,n;return t=new Be({props:{override:{overflowY:"scroll",h:300},$$slots:{default:[nt]},$$scope:{ctx:m}}}),{c(){V(t.$$.fragment)},l(e){F(t.$$.fragment,e)},m(e,s){M(t,e,s),n=!0},p(e,[s]){const a={};s&2&&(a.$$scope={dirty:s,ctx:e}),t.$set(a)},i(e){n||(U(t.$$.fragment,e),n=!0)},o(e){j(t.$$.fragment,e),n=!1},d(e){z(t,e)}}}const at=`
<script>
	import { ObserverRender, Text, Paper } from '@svelteuidev/core';
<\/script>

<Paper>
  <ObserverRender let:visible options={{ threshold: 1 }}>
    <Paper
        padding="xl"
        override={{
          bc: visible ? '$green900' : '$red900', minW: '50%'
        }}
    >
      <Text weight="extrabold">
        {visible ? 'Fully visible' : 'Obscured'}
      </Text>
    </Paper>
  </ObserverRender>
</Paper>
`,it="demo",pt={code:at,spacing:!1};class ft extends Re{constructor(t){super(),De(this,t,null,lt,Se,{})}}const ct=Object.freeze(Object.defineProperty({__proto__:null,configuration:pt,default:ft,type:it},Symbol.toStringTag,{value:"Module"}));function ut(m){let t,n,e=JSON.stringify(m[0])+"",s,a,h,y,g=JSON.stringify(m[1])+"",A,D,S,G,x=JSON.stringify(m[2])+"",w,L,E,Y,T=JSON.stringify(m[3])+"",P,W,R,k,I=m[4]+"",C;return{c(){t=f("div"),n=d("entry: "),s=d(e),a=b(),h=f("div"),y=d("node: "),A=d(g),D=b(),S=f("div"),G=d("observer: "),w=d(x),L=b(),E=f("div"),Y=d("scrollDirection: "),P=d(T),W=b(),R=f("div"),k=d("visible: "),C=d(I)},l(i){t=c(i,"DIV",{});var _=u(t);n=v(_,"entry: "),s=v(_,e),_.forEach(o),a=O(i),h=c(i,"DIV",{});var N=u(h);y=v(N,"node: "),A=v(N,g),N.forEach(o),D=O(i),S=c(i,"DIV",{});var H=u(S);G=v(H,"observer: "),w=v(H,x),H.forEach(o),L=O(i),E=c(i,"DIV",{});var B=u(E);Y=v(B,"scrollDirection: "),P=v(B,T),B.forEach(o),W=O(i),R=c(i,"DIV",{});var K=u(R);k=v(K,"visible: "),C=v(K,I),K.forEach(o)},m(i,_){p(i,t,_),l(t,n),l(t,s),p(i,a,_),p(i,h,_),l(h,y),l(h,A),p(i,D,_),p(i,S,_),l(S,G),l(S,w),p(i,L,_),p(i,E,_),l(E,Y),l(E,P),p(i,W,_),p(i,R,_),l(R,k),l(R,C)},p(i,_){_&1&&e!==(e=JSON.stringify(i[0])+"")&&te(s,e),_&2&&g!==(g=JSON.stringify(i[1])+"")&&te(A,g),_&4&&x!==(x=JSON.stringify(i[2])+"")&&te(w,x),_&8&&T!==(T=JSON.stringify(i[3])+"")&&te(P,T),_&16&&I!==(I=i[4]+"")&&te(C,I)},d(i){i&&o(t),i&&o(a),i&&o(h),i&&o(D),i&&o(S),i&&o(L),i&&o(E),i&&o(W),i&&o(R)}}}function dt(m){let t,n;return t=new tt({props:{$$slots:{default:[ut]},$$scope:{ctx:m}}}),{c(){V(t.$$.fragment)},l(e){F(t.$$.fragment,e)},m(e,s){M(t,e,s),n=!0},p(e,s){const a={};s&63&&(a.$$scope={dirty:s,ctx:e}),t.$set(a)},i(e){n||(U(t.$$.fragment,e),n=!0)},o(e){j(t.$$.fragment,e),n=!1},d(e){z(t,e)}}}function vt(m){let t,n;return t=new Ye({props:{$$slots:{default:[dt,({entry:e,node:s,observer:a,scrollDirection:h,visible:y})=>({0:e,1:s,2:a,3:h,4:y}),({entry:e,node:s,observer:a,scrollDirection:h,visible:y})=>(e?1:0)|(s?2:0)|(a?4:0)|(h?8:0)|(y?16:0)]},$$scope:{ctx:m}}}),{c(){V(t.$$.fragment)},l(e){F(t.$$.fragment,e)},m(e,s){M(t,e,s),n=!0},p(e,[s]){const a={};s&63&&(a.$$scope={dirty:s,ctx:e}),t.$set(a)},i(e){n||(U(t.$$.fragment,e),n=!0)},o(e){j(t.$$.fragment,e),n=!1},d(e){z(t,e)}}}const $t=`
<script>
	import { ObserverRender } from '@svelteuidev/core';
<\/script>

<ObserverRender let:entry let:node let:observer let:scrollDirection let:visible>
	<div>
		entry: {entry}
		node: {node}
		observer: {observer}
		scrollDirection: {scrollDirection}
		visible: {visible}
	</div>
</ObserverRender>
`,mt="demo",_t={code:$t};class bt extends Re{constructor(t){super(),De(this,t,null,vt,Se,{})}}const Ot=Object.freeze(Object.defineProperty({__proto__:null,configuration:_t,default:bt,type:mt},Symbol.toStringTag,{value:"Module"}));function ht(m){let t,n,e,s,a,h,y,g,A,D,S,G,x,w,L,E,Y,T,P,W,R,k,I,C,i,_,N,H,B,K,re,se,$e,me,oe,ne,_e,be,le,ae,Oe,pe,Q,fe,Z,he,ce,q,ke,ee,ge,Ee,ue,X,Ke=`<code class="language-ts"><span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">Options</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
	root<span class="token operator">?</span><span class="token operator">:</span> HTMLElement <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	rootMargin<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
	threshold<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	unobserveOnEnter<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>`,ie;return document.title=t=we+" - SvelteUI",e=new et({props:{title:we,group:gt,packageGroup:Et,slug:yt,category:wt,description:Rt,importCode:Dt,source:St,docs:Pt}}),w=new Ge({props:{demo:ct}}),Q=new Ge({props:{demo:Ot}}),{c(){n=b(),V(e.$$.fragment),s=b(),a=f("h2"),h=d("Usage"),y=b(),g=f("p"),A=d("ObserverRender monitors when an element enters or leaves the viewport/parent element. It uses the "),D=f("a"),S=d("use-io"),G=d(" action under the hood."),x=b(),V(w.$$.fragment),L=b(),E=f("h2"),Y=d("Slot Props"),T=b(),P=f("p"),W=d("ObserverRender exposes 5 different slot props that gives its children access to current information"),R=b(),k=f("ul"),I=f("li"),C=f("code"),i=d("visible"),_=b(),N=f("li"),H=f("code"),B=d("entry"),K=b(),re=f("li"),se=f("code"),$e=d("node"),me=b(),oe=f("li"),ne=f("code"),_e=d("observer"),be=b(),le=f("li"),ae=f("code"),Oe=d("scrollDirection"),pe=b(),V(Q.$$.fragment),fe=b(),Z=f("h2"),he=d("Options"),ce=b(),q=f("p"),ke=d("ObserverRender and "),ee=f("a"),ge=d("use-io"),Ee=d(" both share the same options. For more details refer to those docs:"),ue=b(),X=f("pre"),this.h()},l(r){Xe("svelte-pki6ul",document.head).forEach(o),n=O(r),F(e.$$.fragment,r),s=O(r),a=c(r,"H2",{});var Pe=u(a);h=v(Pe,"Usage"),Pe.forEach(o),y=O(r),g=c(r,"P",{});var de=u(g);A=v(de,"ObserverRender monitors when an element enters or leaves the viewport/parent element. It uses the "),D=c(de,"A",{href:!0});var Ie=u(D);S=v(Ie,"use-io"),Ie.forEach(o),G=v(de," action under the hood."),de.forEach(o),x=O(r),F(w.$$.fragment,r),L=O(r),E=c(r,"H2",{});var xe=u(E);Y=v(xe,"Slot Props"),xe.forEach(o),T=O(r),P=c(r,"P",{});var Te=u(P);W=v(Te,"ObserverRender exposes 5 different slot props that gives its children access to current information"),Te.forEach(o),R=O(r),k=c(r,"UL",{});var J=u(k);I=c(J,"LI",{});var Ce=u(I);C=c(Ce,"CODE",{});var Je=u(C);i=v(Je,"visible"),Je.forEach(o),Ce.forEach(o),_=O(J),N=c(J,"LI",{});var Le=u(N);H=c(Le,"CODE",{});var Ne=u(H);B=v(Ne,"entry"),Ne.forEach(o),Le.forEach(o),K=O(J),re=c(J,"LI",{});var He=u(re);se=c(He,"CODE",{});var Ve=u(se);$e=v(Ve,"node"),Ve.forEach(o),He.forEach(o),me=O(J),oe=c(J,"LI",{});var Fe=u(oe);ne=c(Fe,"CODE",{});var Me=u(ne);_e=v(Me,"observer"),Me.forEach(o),Fe.forEach(o),be=O(J),le=c(J,"LI",{});var Ue=u(le);ae=c(Ue,"CODE",{});var je=u(ae);Oe=v(je,"scrollDirection"),je.forEach(o),Ue.forEach(o),J.forEach(o),pe=O(r),F(Q.$$.fragment,r),fe=O(r),Z=c(r,"H2",{});var ze=u(Z);he=v(ze,"Options"),ze.forEach(o),ce=O(r),q=c(r,"P",{});var ve=u(q);ke=v(ve,"ObserverRender and "),ee=c(ve,"A",{href:!0});var Ae=u(ee);ge=v(Ae,"use-io"),Ae.forEach(o),Ee=v(ve," both share the same options. For more details refer to those docs:"),ve.forEach(o),ue=O(r),X=c(r,"PRE",{class:!0});var Qe=u(X);Qe.forEach(o),this.h()},h(){ye(D,"href",qe+"/composables/use-io"),ye(ee,"href",qe+"/composables/use-io"),ye(X,"class","language-ts")},m(r,$){p(r,n,$),M(e,r,$),p(r,s,$),p(r,a,$),l(a,h),p(r,y,$),p(r,g,$),l(g,A),l(g,D),l(D,S),l(g,G),p(r,x,$),M(w,r,$),p(r,L,$),p(r,E,$),l(E,Y),p(r,T,$),p(r,P,$),l(P,W),p(r,R,$),p(r,k,$),l(k,I),l(I,C),l(C,i),l(k,_),l(k,N),l(N,H),l(H,B),l(k,K),l(k,re),l(re,se),l(se,$e),l(k,me),l(k,oe),l(oe,ne),l(ne,_e),l(k,be),l(k,le),l(le,ae),l(ae,Oe),p(r,pe,$),M(Q,r,$),p(r,fe,$),p(r,Z,$),l(Z,he),p(r,ce,$),p(r,q,$),l(q,ke),l(q,ee),l(ee,ge),l(q,Ee),p(r,ue,$),p(r,X,$),X.innerHTML=Ke,ie=!0},p(r,[$]){(!ie||$&0)&&t!==(t=we+" - SvelteUI")&&(document.title=t)},i(r){ie||(U(e.$$.fragment,r),U(w.$$.fragment,r),U(Q.$$.fragment,r),ie=!0)},o(r){j(e.$$.fragment,r),j(w.$$.fragment,r),j(Q.$$.fragment,r),ie=!1},d(r){r&&o(n),z(e,r),r&&o(s),r&&o(a),r&&o(y),r&&o(g),r&&o(x),z(w,r),r&&o(L),r&&o(E),r&&o(T),r&&o(P),r&&o(R),r&&o(k),r&&o(pe),z(Q,r),r&&o(fe),r&&o(Z),r&&o(ce),r&&o(q),r&&o(ue),r&&o(X)}}}const kt={title:"ObserverRender",group:"svelteuidev-core",packageGroup:"@svelteuidev/core",slug:"/core/observer-render/",category:"inputs",description:"Detect when an element enters or leaves the viewport.",importCode:"import { ObserverRender } from '@svelteuidev/core';",source:"svelteui-core/src/components/ObserverRender/ObserverRender.svelte",docs:"core/observer-render.md"},{title:we,group:gt,packageGroup:Et,slug:yt,category:wt,description:Rt,importCode:Dt,source:St,docs:Pt}=kt;class Vt extends Re{constructor(t){super(),De(this,t,null,ht,Se,{})}}export{Vt as default,kt as metadata};
