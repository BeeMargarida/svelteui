import{S as rt,i as ct,s as ut,a as u,y as dt,k as p,q as o,al as ft,h as e,c as d,z as vt,l as i,m as r,r as l,n as Y,b as a,A as kt,Y as n,g as ht,d as mt,B as St}from"../chunks/index.b0fe5a0f.js";import"../chunks/navigation.fd10cd14.js";import{H as _t}from"../chunks/Heading.bb67d8e2.js";import"../chunks/paths.605af923.js";function yt(nt){let S,P,v,j,_,A,x,y,D,H,w,G,$,f,L,I,M,O,K,k,ot=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> SvelteUIProvider <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@svelteuidev/core'</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SvelteUIProvider</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>SvelteUIProvider</span><span class="token punctuation">></span></span></code>`,R,g,W,C,c,z,b,B,F,h,J,N,q,m,lt=`<code class="language-typescript"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> prepareStylesSSR <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@svelteuidev/core'</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> handle <span class="token operator">=</span> prepareStylesSSR<span class="token punctuation">;</span></code>`,U;return document.title=S=Q+" - SvelteUI",v=new _t({props:{title:Q,description:gt,docs:Et}}),{c(){P=u(),dt(v.$$.fragment),j=u(),_=p("h2"),A=o("Getting Started"),x=u(),y=p("p"),D=o("You don’t need to install any additional tooling to get access to server side rendering. SvelteUI works out of the box without server side rendering capabilities, adding SSR on top of that just makes things that much better! This is something that separates SvelteUI from other libraries, as they require configuration just to start working with SvelteKit."),H=u(),w=p("h2"),G=o("1."),$=u(),f=p("p"),L=o("In your top level "),I=p("code"),M=o("+layout.svelte"),O=o(" file, wrap your app in the SvelteUIProvider component:"),K=u(),k=p("pre"),R=u(),g=p("h2"),W=o("2."),C=u(),c=p("p"),z=o("In the file "),b=p("code"),B=o("hooks.server.(js|ts)"),F=o(" in your SvelteKit app (see "),h=p("a"),J=o("SK docs"),N=o("), add the code below. With this, the CSS will be injected to the page before sending it to the client."),q=u(),m=p("pre"),this.h()},l(t){ft("svelte-pki6ul",document.head).forEach(e),P=d(t),vt(v.$$.fragment,t),j=d(t),_=i(t,"H2",{});var V=r(_);A=l(V,"Getting Started"),V.forEach(e),x=d(t),y=i(t,"P",{});var X=r(y);D=l(X,"You don’t need to install any additional tooling to get access to server side rendering. SvelteUI works out of the box without server side rendering capabilities, adding SSR on top of that just makes things that much better! This is something that separates SvelteUI from other libraries, as they require configuration just to start working with SvelteKit."),X.forEach(e),H=d(t),w=i(t,"H2",{});var Z=r(w);G=l(Z,"1."),Z.forEach(e),$=d(t),f=i(t,"P",{});var T=r(f);L=l(T,"In your top level "),I=i(T,"CODE",{});var tt=r(I);M=l(tt,"+layout.svelte"),tt.forEach(e),O=l(T," file, wrap your app in the SvelteUIProvider component:"),T.forEach(e),K=d(t),k=i(t,"PRE",{class:!0});var pt=r(k);pt.forEach(e),R=d(t),g=i(t,"H2",{});var et=r(g);W=l(et,"2."),et.forEach(e),C=d(t),c=i(t,"P",{});var E=r(c);z=l(E,"In the file "),b=i(E,"CODE",{});var st=r(b);B=l(st,"hooks.server.(js|ts)"),st.forEach(e),F=l(E," in your SvelteKit app (see "),h=i(E,"A",{href:!0,rel:!0});var at=r(h);J=l(at,"SK docs"),at.forEach(e),N=l(E,"), add the code below. With this, the CSS will be injected to the page before sending it to the client."),E.forEach(e),q=d(t),m=i(t,"PRE",{class:!0});var it=r(m);it.forEach(e),this.h()},h(){Y(k,"class","language-svelte"),Y(h,"href","https://kit.svelte.dev/docs/hooks"),Y(h,"rel","nofollow"),Y(m,"class","language-typescript")},m(t,s){a(t,P,s),kt(v,t,s),a(t,j,s),a(t,_,s),n(_,A),a(t,x,s),a(t,y,s),n(y,D),a(t,H,s),a(t,w,s),n(w,G),a(t,$,s),a(t,f,s),n(f,L),n(f,I),n(I,M),n(f,O),a(t,K,s),a(t,k,s),k.innerHTML=ot,a(t,R,s),a(t,g,s),n(g,W),a(t,C,s),a(t,c,s),n(c,z),n(c,b),n(b,B),n(c,F),n(c,h),n(h,J),n(c,N),a(t,q,s),a(t,m,s),m.innerHTML=lt,U=!0},p(t,[s]){(!U||s&0)&&S!==(S=Q+" - SvelteUI")&&(document.title=S)},i(t){U||(ht(v.$$.fragment,t),U=!0)},o(t){mt(v.$$.fragment,t),U=!1},d(t){t&&e(P),St(v,t),t&&e(j),t&&e(_),t&&e(x),t&&e(y),t&&e(H),t&&e(w),t&&e($),t&&e(f),t&&e(K),t&&e(k),t&&e(R),t&&e(g),t&&e(C),t&&e(c),t&&e(q),t&&e(m)}}}const wt={title:"Server side rendering",description:"How to use SvelteUI in a ssr environment.",docs:"theming/ssr.md"},{title:Q,description:gt,docs:Et}=wt;class jt extends rt{constructor(S){super(),ct(this,S,null,yt,ut,{})}}export{jt as default,wt as metadata};
